//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: Zerg P03
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"

//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] aiCC0499EA_defGather;
string[17] aiCC0499EA_customData;
wave[17] aiCC0499EA_lastWave;

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave1_enabled;
unitgroup[17] aiCC0499EA_wave1_lastUnits;
wave[17] aiCC0499EA_wave1_lastWave;
trigger aiCC0499EA_wave1_trigger = null;
int aiCC0499EA_wave1_runPlayer;
playergroup aiCC0499EA_wave1_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave1_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave1_enabled[init_i] = true;
        aiCC0499EA_wave1_lastUnits[init_i] = null;
        aiCC0499EA_wave1_lastWave[init_i] = null;
    }

    aiCC0499EA_wave1_trigger = TriggerCreate("aiCC0499EA_wave1_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave1_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave1_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave1_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave1_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave1_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave1_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave1_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave1_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave1_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave1_runPlayer;
    playergroup target = aiCC0499EA_wave1_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave1_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 300; }
    if (d == 2) { ta = 300; }
    if (d == 3) { ta = 210; }
    if (d == 4) { ta = 210; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_FirstAttackWarningQ_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1149), false);
    AIAttackWaveAddWaypoint(p, PointFromId(470), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave1_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave1_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave1_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave1_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave1_runPlayer = p;
    aiCC0499EA_wave1_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave1_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave2_enabled;
unitgroup[17] aiCC0499EA_wave2_lastUnits;
wave[17] aiCC0499EA_wave2_lastWave;
trigger aiCC0499EA_wave2_trigger = null;
int aiCC0499EA_wave2_runPlayer;
playergroup aiCC0499EA_wave2_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave2_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave2_enabled[init_i] = true;
        aiCC0499EA_wave2_lastUnits[init_i] = null;
        aiCC0499EA_wave2_lastWave[init_i] = null;
    }

    aiCC0499EA_wave2_trigger = TriggerCreate("aiCC0499EA_wave2_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave2_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave2_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave2_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave2_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave2_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave2_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave2_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave2_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave2_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave2_runPlayer;
    playergroup target = aiCC0499EA_wave2_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave2_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 480; }
    if (d == 2) { ta = 480; }
    if (d == 3) { ta = 450; }
    if (d == 4) { ta = 420; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_LeftAttackWarningQ_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    if ((d == 1) || (d == 2)) {
        AIAttackWaveAddWaypoint(p, PointFromId(777), false);
    }
    if ((d == 3) || (d == 4)) {
        AIAttackWaveAddWaypoint(p, PointFromId(1148), false);
    }
    AIAttackWaveAddWaypoint(p, PointFromId(19), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave2_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 24; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Baneling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave2_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave2_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave2_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave2_runPlayer = p;
    aiCC0499EA_wave2_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave2_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave7_enabled;
unitgroup[17] aiCC0499EA_wave7_lastUnits;
wave[17] aiCC0499EA_wave7_lastWave;
trigger aiCC0499EA_wave7_trigger = null;
int aiCC0499EA_wave7_runPlayer;
playergroup aiCC0499EA_wave7_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave7_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave7_enabled[init_i] = true;
        aiCC0499EA_wave7_lastUnits[init_i] = null;
        aiCC0499EA_wave7_lastWave[init_i] = null;
    }

    aiCC0499EA_wave7_trigger = TriggerCreate("aiCC0499EA_wave7_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave7_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave7_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave7_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave7_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave7_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave7_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave7_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave7_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave7_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave7_runPlayer;
    playergroup target = aiCC0499EA_wave7_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave7_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 4) { ta = 210; }
    tg = 0;
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(1058));

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(777), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave7_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave7_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave7_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave7_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave7_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave7_runPlayer = p;
    aiCC0499EA_wave7_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave7_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave3_enabled;
unitgroup[17] aiCC0499EA_wave3_lastUnits;
wave[17] aiCC0499EA_wave3_lastWave;
trigger aiCC0499EA_wave3_trigger = null;
int aiCC0499EA_wave3_runPlayer;
playergroup aiCC0499EA_wave3_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave3_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave3_enabled[init_i] = true;
        aiCC0499EA_wave3_lastUnits[init_i] = null;
        aiCC0499EA_wave3_lastWave[init_i] = null;
    }

    aiCC0499EA_wave3_trigger = TriggerCreate("aiCC0499EA_wave3_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave3_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave3_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave3_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave3_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave3_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave3_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave3_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave3_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave3_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave3_runPlayer;
    playergroup target = aiCC0499EA_wave3_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave3_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 480; }
    if (d == 2) { ta = 480; }
    if (d == 3) { ta = 450; }
    if (d == 4) { ta = 210; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1149), false);
    AIAttackWaveAddWaypoint(p, PointFromId(470), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave3_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 5; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Overseer", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave3_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave3_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave3_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave3_runPlayer = p;
    aiCC0499EA_wave3_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave3_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave4_enabled;
unitgroup[17] aiCC0499EA_wave4_lastUnits;
wave[17] aiCC0499EA_wave4_lastWave;
trigger aiCC0499EA_wave4_trigger = null;
int aiCC0499EA_wave4_runPlayer;
playergroup aiCC0499EA_wave4_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave4_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave4_enabled[init_i] = true;
        aiCC0499EA_wave4_lastUnits[init_i] = null;
        aiCC0499EA_wave4_lastWave[init_i] = null;
    }

    aiCC0499EA_wave4_trigger = TriggerCreate("aiCC0499EA_wave4_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave4_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave4_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave4_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave4_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave4_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave4_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave4_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave4_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave4_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave4_runPlayer;
    playergroup target = aiCC0499EA_wave4_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave4_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 240; }
    if (d == 2) { ta = 240; }
    if (d == 3) { ta = 240; }
    if (d == 4) { ta = 210; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1149), false);
    AIAttackWaveAddWaypoint(p, PointFromId(470), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave4_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Hydralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 4) { createCount = 1; }
    if (createCount > 0) {
        UnitCreate(createCount, "Guardian", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave4_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave4_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave4_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave4_runPlayer = p;
    aiCC0499EA_wave4_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave4_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave5_enabled;
unitgroup[17] aiCC0499EA_wave5_lastUnits;
wave[17] aiCC0499EA_wave5_lastWave;
trigger aiCC0499EA_wave5_trigger = null;
int aiCC0499EA_wave5_runPlayer;
playergroup aiCC0499EA_wave5_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave5_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave5_enabled[init_i] = true;
        aiCC0499EA_wave5_lastUnits[init_i] = null;
        aiCC0499EA_wave5_lastWave[init_i] = null;
    }

    aiCC0499EA_wave5_trigger = TriggerCreate("aiCC0499EA_wave5_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave5_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave5_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave5_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave5_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave5_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave5_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave5_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave5_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave5_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave5_runPlayer;
    playergroup target = aiCC0499EA_wave5_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave5_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 240; }
    if (d == 2) { ta = 240; }
    if (d == 3) { ta = 240; }
    if (d == 4) { ta = 240; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1149), false);
    AIAttackWaveAddWaypoint(p, PointFromId(470), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave5_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 16; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 1; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Ultralisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Baneling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave5_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave5_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave5_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave5_runPlayer = p;
    aiCC0499EA_wave5_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave5_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] aiCC0499EA_wave6_enabled;
unitgroup[17] aiCC0499EA_wave6_lastUnits;
wave[17] aiCC0499EA_wave6_lastWave;
trigger aiCC0499EA_wave6_trigger = null;
int aiCC0499EA_wave6_runPlayer;
playergroup aiCC0499EA_wave6_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave6_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        aiCC0499EA_wave6_enabled[init_i] = true;
        aiCC0499EA_wave6_lastUnits[init_i] = null;
        aiCC0499EA_wave6_lastWave[init_i] = null;
    }

    aiCC0499EA_wave6_trigger = TriggerCreate("aiCC0499EA_wave6_runFunc");
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave6_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_wave6_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave6_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return aiCC0499EA_wave6_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave6_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave6_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave6_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_wave6_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave6_runFunc (bool c, bool a) {
    int p = aiCC0499EA_wave6_runPlayer;
    playergroup target = aiCC0499EA_wave6_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!aiCC0499EA_wave6_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    aiCC0499EA_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 240; }
    if (d == 2) { ta = 240; }
    if (d == 3) { ta = 240; }
    if (d == 4) { ta = 240; }
    tg = 0;
    if (d == 1) { tg = 120; }
    if (d == 2) { tg = 120; }
    if (d == 3) { tg = 120; }
    if (d == 4) { tg = 120; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = aiCC0499EA_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);
    AIAttackWaveAddWaypoint(p, PointFromId(1149), false);
    AIAttackWaveAddWaypoint(p, PointFromId(470), false);

    createPoint = gatherPoint;
    createPoint = PointFromId(827);

    aiCC0499EA_wave6_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Mutalisk", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Roach", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 16; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zergling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 5; }
    if (createCount > 0) {
        UnitCreate(createCount, "Baneling", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(aiCC0499EA_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    aiCC0499EA_wave6_lastWave[p] = WaveLastCreated();
    aiCC0499EA_lastWave[p] = aiCC0499EA_wave6_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave6_run (int p, playergroup target, bool wait) {
    aiCC0499EA_wave6_runPlayer = p;
    aiCC0499EA_wave6_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_wave6_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave_enable (int w, int p, bool val) {
    if (w == 1) { aiCC0499EA_wave1_enable(p, val); }
    if (w == 2) { aiCC0499EA_wave2_enable(p, val); }
    if (w == 7) { aiCC0499EA_wave7_enable(p, val); }
    if (w == 3) { aiCC0499EA_wave3_enable(p, val); }
    if (w == 4) { aiCC0499EA_wave4_enable(p, val); }
    if (w == 5) { aiCC0499EA_wave5_enable(p, val); }
    if (w == 6) { aiCC0499EA_wave6_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_wave_isEnabled (int w, int p) {
    if (w == 1) { return aiCC0499EA_wave1_isEnabled(p); }
    if (w == 2) { return aiCC0499EA_wave2_isEnabled(p); }
    if (w == 7) { return aiCC0499EA_wave7_isEnabled(p); }
    if (w == 3) { return aiCC0499EA_wave3_isEnabled(p); }
    if (w == 4) { return aiCC0499EA_wave4_isEnabled(p); }
    if (w == 5) { return aiCC0499EA_wave5_isEnabled(p); }
    if (w == 6) { return aiCC0499EA_wave6_isEnabled(p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup aiCC0499EA_wave_createdUnits (int w, int p) {
    if (w == 1) { return aiCC0499EA_wave1_createdUnits(p); }
    if (w == 2) { return aiCC0499EA_wave2_createdUnits(p); }
    if (w == 7) { return aiCC0499EA_wave7_createdUnits(p); }
    if (w == 3) { return aiCC0499EA_wave3_createdUnits(p); }
    if (w == 4) { return aiCC0499EA_wave4_createdUnits(p); }
    if (w == 5) { return aiCC0499EA_wave5_createdUnits(p); }
    if (w == 6) { return aiCC0499EA_wave6_createdUnits(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_wave_createdWave (int w, int p) {
    if (w == 1) { return aiCC0499EA_wave1_createdWave(p); }
    if (w == 2) { return aiCC0499EA_wave2_createdWave(p); }
    if (w == 7) { return aiCC0499EA_wave7_createdWave(p); }
    if (w == 3) { return aiCC0499EA_wave3_createdWave(p); }
    if (w == 4) { return aiCC0499EA_wave4_createdWave(p); }
    if (w == 5) { return aiCC0499EA_wave5_createdWave(p); }
    if (w == 6) { return aiCC0499EA_wave6_createdWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_wave_run (int w, int p, playergroup target, bool wait) {
    if (w == 1) { aiCC0499EA_wave1_run(p, target, wait); }
    if (w == 2) { aiCC0499EA_wave2_run(p, target, wait); }
    if (w == 7) { aiCC0499EA_wave7_run(p, target, wait); }
    if (w == 3) { aiCC0499EA_wave3_run(p, target, wait); }
    if (w == 4) { aiCC0499EA_wave4_run(p, target, wait); }
    if (w == 5) { aiCC0499EA_wave5_run(p, target, wait); }
    if (w == 6) { aiCC0499EA_wave6_run(p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger aiCC0499EA_waves_trigger = null;
int aiCC0499EA_waves_runPlayer;
playergroup aiCC0499EA_waves_runTarget;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_waves_init () {
    aiCC0499EA_waves_trigger = TriggerCreate("aiCC0499EA_waves_runFunc");
}

//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_waves_runFunc (bool c, bool a) {
    int p = aiCC0499EA_waves_runPlayer;
    playergroup target = aiCC0499EA_waves_runTarget;

    if (p < 0 || p >= 16) {
        return false;
    }

    aiCC0499EA_wave1_run(p, target, true);
    aiCC0499EA_wave2_run(p, target, true);
    aiCC0499EA_wave7_run(p, target, true);
    aiCC0499EA_wave3_run(p, target, true);
    aiCC0499EA_wave4_run(p, target, true);
    aiCC0499EA_wave5_run(p, target, true);
    aiCC0499EA_wave6_run(p, target, true);

    while (true) {
        aiCC0499EA_wave5_run(p, target, true);
        aiCC0499EA_wave6_run(p, target, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_waves_run (int p, playergroup target) {
    aiCC0499EA_waves_runPlayer = p;
    aiCC0499EA_waves_runTarget = PlayerGroupCopy(target);

    TriggerExecute(aiCC0499EA_waves_trigger, false, false);
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }

    aiCC0499EA_wave1_enable(p, val);
    aiCC0499EA_wave2_enable(p, val);
    aiCC0499EA_wave7_enable(p, val);
    aiCC0499EA_wave3_enable(p, val);
    aiCC0499EA_wave4_enable(p, val);
    aiCC0499EA_wave5_enable(p, val);
    aiCC0499EA_wave6_enable(p, val);
}

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_waves_stop () {
    TriggerStop(aiCC0499EA_waves_trigger);

    TriggerStop(aiCC0499EA_wave1_trigger);
    TriggerStop(aiCC0499EA_wave2_trigger);
    TriggerStop(aiCC0499EA_wave7_trigger);
    TriggerStop(aiCC0499EA_wave3_trigger);
    TriggerStop(aiCC0499EA_wave4_trigger);
    TriggerStop(aiCC0499EA_wave5_trigger);
    TriggerStop(aiCC0499EA_wave6_trigger);
}

//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void aiCC0499EA_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiCC0499EA_defGather[p] = val;
}

//--------------------------------------------------------------------------------------------------
string aiCC0499EA_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_customData[p];
}

//--------------------------------------------------------------------------------------------------
wave aiCC0499EA_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiCC0499EA_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool aiCC0499EA_initialized = false;

//--------------------------------------------------------------------------------------------------
void aiCC0499EA_start (int p) {
    int init_i;

    if (p < 0 || p >= 16) {
        return;
    }
    if (!aiCC0499EA_initialized) {
        aiCC0499EA_wave1_init();
        aiCC0499EA_wave2_init();
        aiCC0499EA_wave7_init();
        aiCC0499EA_wave3_init();
        aiCC0499EA_wave4_init();
        aiCC0499EA_wave5_init();
        aiCC0499EA_wave6_init();
        aiCC0499EA_waves_init();

        for (init_i = 0; init_i <= 16; init_i += 1) {
            aiCC0499EA_defGather[init_i] = PointFromId(466);
        }

        aiCC0499EA_initialized = true;
    }

    AICampaignStart(p);
}
