//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: P05 Golden Armada
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"

//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] ai6E1E1700_defGather;
string[17] ai6E1E1700_customData;
wave[17] ai6E1E1700_lastWave;

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 1 - First Golden Armada Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave1_enabled;
unitgroup[17] ai6E1E1700_wave1_lastUnits;
wave[17] ai6E1E1700_wave1_lastWave;
trigger ai6E1E1700_wave1_trigger = null;
int ai6E1E1700_wave1_runPlayer;
playergroup ai6E1E1700_wave1_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave1_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave1_enabled[init_i] = true;
        ai6E1E1700_wave1_lastUnits[init_i] = null;
        ai6E1E1700_wave1_lastWave[init_i] = null;
    }

    ai6E1E1700_wave1_trigger = TriggerCreate("ai6E1E1700_wave1_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave1_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave1_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave1_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave1_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave1_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave1_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave1_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave1_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave1_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave1_runPlayer;
    playergroup target = ai6E1E1700_wave1_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave1_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 340; }
    if (d == 2) { ta = 340; }
    if (d == 3) { ta = 340; }
    if (d == 4) { ta = 340; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack1Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai6E1E1700_wave1_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 8; }
    if (d == 4) { createCount = 8; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 4; }
    if (d == 2) { createCount = 4; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave1_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave1_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave1_lastWave[p];
    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_AmonTransmission1Q_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave1_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave1_runPlayer = p;
    ai6E1E1700_wave1_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave1_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 2 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave3_enabled;
unitgroup[17] ai6E1E1700_wave3_lastUnits;
wave[17] ai6E1E1700_wave3_lastWave;
trigger ai6E1E1700_wave3_trigger = null;
int ai6E1E1700_wave3_runPlayer;
playergroup ai6E1E1700_wave3_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave3_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave3_enabled[init_i] = true;
        ai6E1E1700_wave3_lastUnits[init_i] = null;
        ai6E1E1700_wave3_lastWave[init_i] = null;
    }

    ai6E1E1700_wave3_trigger = TriggerCreate("ai6E1E1700_wave3_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave3_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave3_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave3_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave3_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave3_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave3_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave3_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave3_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave3_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave3_runPlayer;
    playergroup target = ai6E1E1700_wave3_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave3_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 220; }
    if (d == 2) { ta = 220; }
    if (d == 3) { ta = 220; }
    if (d == 4) { ta = 220; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack2TopMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai6E1E1700_wave3_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 9; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave3_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave3_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave3_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave3_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave3_runPlayer = p;
    ai6E1E1700_wave3_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave3_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave4_enabled;
unitgroup[17] ai6E1E1700_wave4_lastUnits;
wave[17] ai6E1E1700_wave4_lastWave;
trigger ai6E1E1700_wave4_trigger = null;
int ai6E1E1700_wave4_runPlayer;
playergroup ai6E1E1700_wave4_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave4_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave4_enabled[init_i] = true;
        ai6E1E1700_wave4_lastUnits[init_i] = null;
        ai6E1E1700_wave4_lastWave[init_i] = null;
    }

    ai6E1E1700_wave4_trigger = TriggerCreate("ai6E1E1700_wave4_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave4_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave4_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave4_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave4_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave4_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave4_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave4_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave4_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave4_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave4_runPlayer;
    playergroup target = ai6E1E1700_wave4_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave4_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack3BotMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai6E1E1700_wave4_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 14; }
    if (d == 2) { createCount = 14; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 14; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 5; }
    if (d == 2) { createCount = 5; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 7; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave4_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave4_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave4_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave4_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave4_runPlayer = p;
    ai6E1E1700_wave4_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave4_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 4 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave8_enabled;
unitgroup[17] ai6E1E1700_wave8_lastUnits;
wave[17] ai6E1E1700_wave8_lastWave;
trigger ai6E1E1700_wave8_trigger = null;
int ai6E1E1700_wave8_runPlayer;
playergroup ai6E1E1700_wave8_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave8_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave8_enabled[init_i] = true;
        ai6E1E1700_wave8_lastUnits[init_i] = null;
        ai6E1E1700_wave8_lastWave[init_i] = null;
    }

    ai6E1E1700_wave8_trigger = TriggerCreate("ai6E1E1700_wave8_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave8_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave8_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave8_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave8_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave8_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave8_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave8_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave8_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave8_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave8_runPlayer;
    playergroup target = ai6E1E1700_wave8_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave8_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack4Bot_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai6E1E1700_wave8_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave8_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Sentry", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave8_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 2; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave8_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave8_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave8_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave8_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave8_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave8_runPlayer = p;
    ai6E1E1700_wave8_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave8_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave6_enabled;
unitgroup[17] ai6E1E1700_wave6_lastUnits;
wave[17] ai6E1E1700_wave6_lastWave;
trigger ai6E1E1700_wave6_trigger = null;
int ai6E1E1700_wave6_runPlayer;
playergroup ai6E1E1700_wave6_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave6_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave6_enabled[init_i] = true;
        ai6E1E1700_wave6_lastUnits[init_i] = null;
        ai6E1E1700_wave6_lastWave[init_i] = null;
    }

    ai6E1E1700_wave6_trigger = TriggerCreate("ai6E1E1700_wave6_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave6_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave6_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave6_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave6_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave6_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave6_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave6_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave6_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave6_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave6_runPlayer;
    playergroup target = ai6E1E1700_wave6_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave6_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack5Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai6E1E1700_wave6_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 20; }
    if (d == 2) { createCount = 20; }
    if (d == 3) { createCount = 20; }
    if (d == 4) { createCount = 20; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave6_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave6_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave6_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave6_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave6_runPlayer = p;
    ai6E1E1700_wave6_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave6_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 6 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave9_enabled;
unitgroup[17] ai6E1E1700_wave9_lastUnits;
wave[17] ai6E1E1700_wave9_lastWave;
trigger ai6E1E1700_wave9_trigger = null;
int ai6E1E1700_wave9_runPlayer;
playergroup ai6E1E1700_wave9_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave9_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave9_enabled[init_i] = true;
        ai6E1E1700_wave9_lastUnits[init_i] = null;
        ai6E1E1700_wave9_lastWave[init_i] = null;
    }

    ai6E1E1700_wave9_trigger = TriggerCreate("ai6E1E1700_wave9_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave9_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave9_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave9_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave9_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave9_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave9_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave9_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave9_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave9_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave9_runPlayer;
    playergroup target = ai6E1E1700_wave9_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave9_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 270; }
    if (d == 2) { ta = 270; }
    if (d == 3) { ta = 270; }
    if (d == 4) { ta = 270; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack6BotMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(272));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(246);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(294);

    ai6E1E1700_wave9_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 14; }
    if (d == 2) { createCount = 14; }
    if (d == 3) { createCount = 14; }
    if (d == 4) { createCount = 14; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave9_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 8; }
    if (d == 2) { createCount = 8; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave9_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave9_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave9_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave9_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave9_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave9_runPlayer = p;
    ai6E1E1700_wave9_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave9_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave14_enabled;
unitgroup[17] ai6E1E1700_wave14_lastUnits;
wave[17] ai6E1E1700_wave14_lastWave;
trigger ai6E1E1700_wave14_trigger = null;
int ai6E1E1700_wave14_runPlayer;
playergroup ai6E1E1700_wave14_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave14_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave14_enabled[init_i] = true;
        ai6E1E1700_wave14_lastUnits[init_i] = null;
        ai6E1E1700_wave14_lastWave[init_i] = null;
    }

    ai6E1E1700_wave14_trigger = TriggerCreate("ai6E1E1700_wave14_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave14_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave14_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave14_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave14_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave14_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave14_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave14_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave14_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave14_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave14_runPlayer;
    playergroup target = ai6E1E1700_wave14_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave14_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack7Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai6E1E1700_wave14_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 6; }
    if (d == 4) { createCount = 6; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Archon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave14_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave14_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave14_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave14_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave14_runPlayer = p;
    ai6E1E1700_wave14_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave14_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 8 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave17_enabled;
unitgroup[17] ai6E1E1700_wave17_lastUnits;
wave[17] ai6E1E1700_wave17_lastWave;
trigger ai6E1E1700_wave17_trigger = null;
int ai6E1E1700_wave17_runPlayer;
playergroup ai6E1E1700_wave17_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave17_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave17_enabled[init_i] = true;
        ai6E1E1700_wave17_lastUnits[init_i] = null;
        ai6E1E1700_wave17_lastWave[init_i] = null;
    }

    ai6E1E1700_wave17_trigger = TriggerCreate("ai6E1E1700_wave17_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave17_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave17_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave17_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave17_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave17_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave17_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave17_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave17_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave17_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave17_runPlayer;
    playergroup target = ai6E1E1700_wave17_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave17_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack8TopMid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai6E1E1700_wave17_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 18; }
    if (d == 2) { createCount = 18; }
    if (d == 3) { createCount = 18; }
    if (d == 4) { createCount = 18; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 4; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 3; }
    if (d == 2) { createCount = 3; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 4; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave17_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave17_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave17_lastWave[p];
    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_AmonTransmission3Q_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave17_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave17_runPlayer = p;
    ai6E1E1700_wave17_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave17_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 9 - Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave2_enabled;
unitgroup[17] ai6E1E1700_wave2_lastUnits;
wave[17] ai6E1E1700_wave2_lastWave;
trigger ai6E1E1700_wave2_trigger = null;
int ai6E1E1700_wave2_runPlayer;
playergroup ai6E1E1700_wave2_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave2_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave2_enabled[init_i] = true;
        ai6E1E1700_wave2_lastUnits[init_i] = null;
        ai6E1E1700_wave2_lastWave[init_i] = null;
    }

    ai6E1E1700_wave2_trigger = TriggerCreate("ai6E1E1700_wave2_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave2_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave2_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave2_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave2_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave2_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave2_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave2_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave2_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave2_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave2_runPlayer;
    playergroup target = ai6E1E1700_wave2_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave2_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 300; }
    if (d == 2) { ta = 300; }
    if (d == 3) { ta = 300; }
    if (d == 4) { ta = 300; }
    tg = 0;
    if (d == 1) { tg = 45; }
    if (d == 2) { tg = 45; }
    if (d == 3) { tg = 45; }
    if (d == 4) { tg = 45; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack9Top_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(293));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(244);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(512);

    ai6E1E1700_wave2_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 12; }
    if (d == 2) { createCount = 12; }
    if (d == 3) { createCount = 12; }
    if (d == 4) { createCount = 12; }
    if (createCount > 0) {
        UnitCreate(createCount, "Zealot", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 6; }
    if (d == 2) { createCount = 6; }
    if (d == 3) { createCount = 7; }
    if (d == 4) { createCount = 9; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 1; }
    if (d == 2) { createCount = 1; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave2_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave2_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave2_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave2_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave2_runPlayer = p;
    ai6E1E1700_wave2_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave2_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: 
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave5_enabled;
unitgroup[17] ai6E1E1700_wave5_lastUnits;
wave[17] ai6E1E1700_wave5_lastWave;
trigger ai6E1E1700_wave5_trigger = null;
int ai6E1E1700_wave5_runPlayer;
playergroup ai6E1E1700_wave5_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave5_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave5_enabled[init_i] = true;
        ai6E1E1700_wave5_lastUnits[init_i] = null;
        ai6E1E1700_wave5_lastWave[init_i] = null;
    }

    ai6E1E1700_wave5_trigger = TriggerCreate("ai6E1E1700_wave5_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave5_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave5_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave5_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave5_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave5_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave5_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave5_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave5_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave5_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave5_runPlayer;
    playergroup target = ai6E1E1700_wave5_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave5_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack10Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);
    AIAttackWaveSetTargetPoint(p, PointFromId(275));

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);
    gatherPoint = PointFromId(245);
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;
    createPoint = PointFromId(513);

    ai6E1E1700_wave5_lastUnits[p] = UnitGroupEmpty();
    createCount = 0;
    if (d == 1) { createCount = 10; }
    if (d == 2) { createCount = 10; }
    if (d == 3) { createCount = 10; }
    if (d == 4) { createCount = 10; }
    if (createCount > 0) {
        UnitCreate(createCount, "Dragoon", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Immortal", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 3; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Colossus", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    createCount = 0;
    if (d == 1) { createCount = 2; }
    if (d == 2) { createCount = 2; }
    if (d == 3) { createCount = 2; }
    if (d == 4) { createCount = 3; }
    if (createCount > 0) {
        UnitCreate(createCount, "Reaver", 0, p, createPoint, PointGetFacing(createPoint));
        AIAttackWaveUseGroup(p, UnitLastCreatedGroup());
        UnitGroupAddUnitGroup(ai6E1E1700_wave5_lastUnits[p], UnitLastCreatedGroup());
    }

    AIAttackWaveSend(p, ts, false);
    ai6E1E1700_wave5_lastWave[p] = WaveLastCreated();
    ai6E1E1700_lastWave[p] = ai6E1E1700_wave5_lastWave[p];
    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave5_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave5_runPlayer = p;
    ai6E1E1700_wave5_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave5_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 11 - Streaming Wave 8 Q
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave20_enabled;
unitgroup[17] ai6E1E1700_wave20_lastUnits;
wave[17] ai6E1E1700_wave20_lastWave;
trigger ai6E1E1700_wave20_trigger = null;
int ai6E1E1700_wave20_runPlayer;
playergroup ai6E1E1700_wave20_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave20_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave20_enabled[init_i] = true;
        ai6E1E1700_wave20_lastUnits[init_i] = null;
        ai6E1E1700_wave20_lastWave[init_i] = null;
    }

    ai6E1E1700_wave20_trigger = TriggerCreate("ai6E1E1700_wave20_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave20_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave20_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave20_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave20_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave20_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave20_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave20_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave20_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave20_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave20_runPlayer;
    playergroup target = ai6E1E1700_wave20_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave20_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 180; }
    if (d == 2) { ta = 180; }
    if (d == 3) { ta = 180; }
    if (d == 4) { ta = 180; }
    tg = 0;
    if (d == 1) { tg = 40; }
    if (d == 2) { tg = 40; }
    if (d == 3) { tg = 40; }
    if (d == 4) { tg = 40; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack11Top_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai6E1E1700_wave20_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave08NER_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave20_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave20_runPlayer = p;
    ai6E1E1700_wave20_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave20_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 12 - Streaming Wave 9
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave28_enabled;
unitgroup[17] ai6E1E1700_wave28_lastUnits;
wave[17] ai6E1E1700_wave28_lastWave;
trigger ai6E1E1700_wave28_trigger = null;
int ai6E1E1700_wave28_runPlayer;
playergroup ai6E1E1700_wave28_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave28_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave28_enabled[init_i] = true;
        ai6E1E1700_wave28_lastUnits[init_i] = null;
        ai6E1E1700_wave28_lastWave[init_i] = null;
    }

    ai6E1E1700_wave28_trigger = TriggerCreate("ai6E1E1700_wave28_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave28_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave28_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave28_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave28_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave28_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave28_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave28_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave28_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave28_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave28_runPlayer;
    playergroup target = ai6E1E1700_wave28_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave28_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack12Mid_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai6E1E1700_wave28_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave09TAL_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave28_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave28_runPlayer = p;
    ai6E1E1700_wave28_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave28_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 13 - Streaming Wave 10
//--------------------------------------------------------------------------------------------------
bool[17] ai6E1E1700_wave36_enabled;
unitgroup[17] ai6E1E1700_wave36_lastUnits;
wave[17] ai6E1E1700_wave36_lastWave;
trigger ai6E1E1700_wave36_trigger = null;
int ai6E1E1700_wave36_runPlayer;
playergroup ai6E1E1700_wave36_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave36_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai6E1E1700_wave36_enabled[init_i] = true;
        ai6E1E1700_wave36_lastUnits[init_i] = null;
        ai6E1E1700_wave36_lastWave[init_i] = null;
    }

    ai6E1E1700_wave36_trigger = TriggerCreate("ai6E1E1700_wave36_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave36_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_wave36_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave36_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai6E1E1700_wave36_enabled[p];
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave36_createdUnits (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave36_lastUnits[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave36_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_wave36_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave36_runFunc (bool c, bool a) {
    int p = ai6E1E1700_wave36_runPlayer;
    playergroup target = ai6E1E1700_wave36_runTarget;
    int d;
    point gatherPoint = null;
    int createCount = 0;
    point createPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai6E1E1700_wave36_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai6E1E1700_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 30; }
    if (d == 2) { ta = 30; }
    if (d == 3) { ta = 30; }
    if (d == 4) { ta = 30; }
    tg = 0;
    if (d == 1) { tg = 30; }
    if (d == 2) { tg = 30; }
    if (d == 3) { tg = 30; }
    if (d == 4) { tg = 30; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_ArmadaAttack13Bot_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai6E1E1700_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    createPoint = gatherPoint;

    ai6E1E1700_wave36_lastUnits[p] = UnitGroupEmpty();

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_StreamingWave10PUR_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave36_run (int p, playergroup target, bool wait) {
    ai6E1E1700_wave36_runPlayer = p;
    ai6E1E1700_wave36_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_wave36_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave_enable (int w, int p, bool val) {
    if (w == 1) { ai6E1E1700_wave1_enable(p, val); }
    if (w == 3) { ai6E1E1700_wave3_enable(p, val); }
    if (w == 4) { ai6E1E1700_wave4_enable(p, val); }
    if (w == 8) { ai6E1E1700_wave8_enable(p, val); }
    if (w == 6) { ai6E1E1700_wave6_enable(p, val); }
    if (w == 9) { ai6E1E1700_wave9_enable(p, val); }
    if (w == 14) { ai6E1E1700_wave14_enable(p, val); }
    if (w == 17) { ai6E1E1700_wave17_enable(p, val); }
    if (w == 2) { ai6E1E1700_wave2_enable(p, val); }
    if (w == 5) { ai6E1E1700_wave5_enable(p, val); }
    if (w == 20) { ai6E1E1700_wave20_enable(p, val); }
    if (w == 28) { ai6E1E1700_wave28_enable(p, val); }
    if (w == 36) { ai6E1E1700_wave36_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_wave_isEnabled (int w, int p) {
    if (w == 1) { return ai6E1E1700_wave1_isEnabled(p); }
    if (w == 3) { return ai6E1E1700_wave3_isEnabled(p); }
    if (w == 4) { return ai6E1E1700_wave4_isEnabled(p); }
    if (w == 8) { return ai6E1E1700_wave8_isEnabled(p); }
    if (w == 6) { return ai6E1E1700_wave6_isEnabled(p); }
    if (w == 9) { return ai6E1E1700_wave9_isEnabled(p); }
    if (w == 14) { return ai6E1E1700_wave14_isEnabled(p); }
    if (w == 17) { return ai6E1E1700_wave17_isEnabled(p); }
    if (w == 2) { return ai6E1E1700_wave2_isEnabled(p); }
    if (w == 5) { return ai6E1E1700_wave5_isEnabled(p); }
    if (w == 20) { return ai6E1E1700_wave20_isEnabled(p); }
    if (w == 28) { return ai6E1E1700_wave28_isEnabled(p); }
    if (w == 36) { return ai6E1E1700_wave36_isEnabled(p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup ai6E1E1700_wave_createdUnits (int w, int p) {
    if (w == 1) { return ai6E1E1700_wave1_createdUnits(p); }
    if (w == 3) { return ai6E1E1700_wave3_createdUnits(p); }
    if (w == 4) { return ai6E1E1700_wave4_createdUnits(p); }
    if (w == 8) { return ai6E1E1700_wave8_createdUnits(p); }
    if (w == 6) { return ai6E1E1700_wave6_createdUnits(p); }
    if (w == 9) { return ai6E1E1700_wave9_createdUnits(p); }
    if (w == 14) { return ai6E1E1700_wave14_createdUnits(p); }
    if (w == 17) { return ai6E1E1700_wave17_createdUnits(p); }
    if (w == 2) { return ai6E1E1700_wave2_createdUnits(p); }
    if (w == 5) { return ai6E1E1700_wave5_createdUnits(p); }
    if (w == 20) { return ai6E1E1700_wave20_createdUnits(p); }
    if (w == 28) { return ai6E1E1700_wave28_createdUnits(p); }
    if (w == 36) { return ai6E1E1700_wave36_createdUnits(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_wave_createdWave (int w, int p) {
    if (w == 1) { return ai6E1E1700_wave1_createdWave(p); }
    if (w == 3) { return ai6E1E1700_wave3_createdWave(p); }
    if (w == 4) { return ai6E1E1700_wave4_createdWave(p); }
    if (w == 8) { return ai6E1E1700_wave8_createdWave(p); }
    if (w == 6) { return ai6E1E1700_wave6_createdWave(p); }
    if (w == 9) { return ai6E1E1700_wave9_createdWave(p); }
    if (w == 14) { return ai6E1E1700_wave14_createdWave(p); }
    if (w == 17) { return ai6E1E1700_wave17_createdWave(p); }
    if (w == 2) { return ai6E1E1700_wave2_createdWave(p); }
    if (w == 5) { return ai6E1E1700_wave5_createdWave(p); }
    if (w == 20) { return ai6E1E1700_wave20_createdWave(p); }
    if (w == 28) { return ai6E1E1700_wave28_createdWave(p); }
    if (w == 36) { return ai6E1E1700_wave36_createdWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_wave_run (int w, int p, playergroup target, bool wait) {
    if (w == 1) { ai6E1E1700_wave1_run(p, target, wait); }
    if (w == 3) { ai6E1E1700_wave3_run(p, target, wait); }
    if (w == 4) { ai6E1E1700_wave4_run(p, target, wait); }
    if (w == 8) { ai6E1E1700_wave8_run(p, target, wait); }
    if (w == 6) { ai6E1E1700_wave6_run(p, target, wait); }
    if (w == 9) { ai6E1E1700_wave9_run(p, target, wait); }
    if (w == 14) { ai6E1E1700_wave14_run(p, target, wait); }
    if (w == 17) { ai6E1E1700_wave17_run(p, target, wait); }
    if (w == 2) { ai6E1E1700_wave2_run(p, target, wait); }
    if (w == 5) { ai6E1E1700_wave5_run(p, target, wait); }
    if (w == 20) { ai6E1E1700_wave20_run(p, target, wait); }
    if (w == 28) { ai6E1E1700_wave28_run(p, target, wait); }
    if (w == 36) { ai6E1E1700_wave36_run(p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger ai6E1E1700_waves_trigger = null;
int ai6E1E1700_waves_runPlayer;
playergroup ai6E1E1700_waves_runTarget;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_waves_init () {
    ai6E1E1700_waves_trigger = TriggerCreate("ai6E1E1700_waves_runFunc");
}

//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_waves_runFunc (bool c, bool a) {
    int p = ai6E1E1700_waves_runPlayer;
    playergroup target = ai6E1E1700_waves_runTarget;

    if (p < 0 || p >= 16) {
        return false;
    }

    ai6E1E1700_wave1_run(p, target, true);
    ai6E1E1700_wave3_run(p, target, true);
    ai6E1E1700_wave4_run(p, target, true);
    ai6E1E1700_wave8_run(p, target, true);
    ai6E1E1700_wave6_run(p, target, true);
    ai6E1E1700_wave9_run(p, target, true);
    ai6E1E1700_wave14_run(p, target, true);
    ai6E1E1700_wave17_run(p, target, true);
    ai6E1E1700_wave2_run(p, target, true);
    ai6E1E1700_wave5_run(p, target, true);
    ai6E1E1700_wave20_run(p, target, true);
    ai6E1E1700_wave28_run(p, target, true);
    ai6E1E1700_wave36_run(p, target, true);

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_waves_run (int p, playergroup target) {
    ai6E1E1700_waves_runPlayer = p;
    ai6E1E1700_waves_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai6E1E1700_waves_trigger, false, false);
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }

    ai6E1E1700_wave1_enable(p, val);
    ai6E1E1700_wave3_enable(p, val);
    ai6E1E1700_wave4_enable(p, val);
    ai6E1E1700_wave8_enable(p, val);
    ai6E1E1700_wave6_enable(p, val);
    ai6E1E1700_wave9_enable(p, val);
    ai6E1E1700_wave14_enable(p, val);
    ai6E1E1700_wave17_enable(p, val);
    ai6E1E1700_wave2_enable(p, val);
    ai6E1E1700_wave5_enable(p, val);
    ai6E1E1700_wave20_enable(p, val);
    ai6E1E1700_wave28_enable(p, val);
    ai6E1E1700_wave36_enable(p, val);
}

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_waves_stop () {
    TriggerStop(ai6E1E1700_waves_trigger);

    TriggerStop(ai6E1E1700_wave1_trigger);
    TriggerStop(ai6E1E1700_wave3_trigger);
    TriggerStop(ai6E1E1700_wave4_trigger);
    TriggerStop(ai6E1E1700_wave8_trigger);
    TriggerStop(ai6E1E1700_wave6_trigger);
    TriggerStop(ai6E1E1700_wave9_trigger);
    TriggerStop(ai6E1E1700_wave14_trigger);
    TriggerStop(ai6E1E1700_wave17_trigger);
    TriggerStop(ai6E1E1700_wave2_trigger);
    TriggerStop(ai6E1E1700_wave5_trigger);
    TriggerStop(ai6E1E1700_wave20_trigger);
    TriggerStop(ai6E1E1700_wave28_trigger);
    TriggerStop(ai6E1E1700_wave36_trigger);
}

//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void ai6E1E1700_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai6E1E1700_defGather[p] = val;
}

//--------------------------------------------------------------------------------------------------
string ai6E1E1700_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_customData[p];
}

//--------------------------------------------------------------------------------------------------
wave ai6E1E1700_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai6E1E1700_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool ai6E1E1700_initialized = false;

//--------------------------------------------------------------------------------------------------
void ai6E1E1700_start (int p) {
    int init_i;

    if (p < 0 || p >= 16) {
        return;
    }
    if (!ai6E1E1700_initialized) {
        ai6E1E1700_wave1_init();
        ai6E1E1700_wave3_init();
        ai6E1E1700_wave4_init();
        ai6E1E1700_wave8_init();
        ai6E1E1700_wave6_init();
        ai6E1E1700_wave9_init();
        ai6E1E1700_wave14_init();
        ai6E1E1700_wave17_init();
        ai6E1E1700_wave2_init();
        ai6E1E1700_wave5_init();
        ai6E1E1700_wave20_init();
        ai6E1E1700_wave28_init();
        ai6E1E1700_wave36_init();
        ai6E1E1700_waves_init();

        for (init_i = 0; init_i <= 16; init_i += 1) {
            ai6E1E1700_defGather[init_i] = PointFromId(0);
        }

        ai6E1E1700_initialized = true;
    }

    AICampaignStart(p);
}
