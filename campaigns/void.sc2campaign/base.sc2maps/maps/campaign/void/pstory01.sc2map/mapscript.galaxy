//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Void Story
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/VoidCampaignLib"
include "TriggerLibs/VoidCampaignStoryLib"
include "TriggerLibs/VoidCampaignUILib"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libVoiC_InitLib();
    libVCST_InitLib();
    libVCUI_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_dojoCharacterMax = 6;
const int gv_roomGreetingChance = 3;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
bool gv_storymodeEntered;
string[gv_dojoCharacterMax + 1] gv_dojoCharacters;
int gv_dojoSelectedCharacter;
bool gv_lookedAtShipConsole;
bool gv_lookedAtArmyConsole;
bool gv_warRoomAmbientScenesStarted;
bool gv_bridgeAmbientScenesStarted;
bool gv_firstWarCouncilVisit;
bool gv_firstSolarCoreVisit;
bool gv_warCouncilPromptGiven;
bool gv_rohanaUlnar03ConvoPlayed;
unit gv_uNITBridgeSet00;
unit gv_uNITBridgeSet03;
unit gv_uNITBridgeSet04;
unit gv_uNITBridgeSet05;
unit gv_uNITBridgeSet06;
unit gv_uNITBridgeSet08;
unit gv_uNITBridgeSet09;
unit gv_uNITWarCouncilSet00;
unit gv_uNITWarCouncilSet01;
unit gv_uNITWarCouncilSet02;
unit gv_uNITWarCouncilSet02Possessed;
unit gv_uNITWarCouncilSet03;
unit gv_uNITWarCouncilSet04;
unit gv_uNITSolarCoreSet00;
unit gv_uNITSolarCoreSet02;
unit gv_uNITSolarCoreSetWings;
unit gv_uNITSolarCoreHolograms00;
unit gv_uNITSolarCoreHolograms02;
unit gv_uNITSolarCoreHolograms03;
unit gv_uNITSolarCoreHolograms04;
bool gv_pylonActivated;
int gv_pylonClicks;
bool gv_pS_RoomGreetingJustPlayed;
bool gv_pS_RoomGreetingFirstEntry;
string gv_roomGreetingActiveLine;
string gv_roomGreetingActiveSpeaker;
bool gv_debugRoomGreetingMustPlay;
int gv_convoCutscene;
bool gv_communicatorReady;

void InitGlobals () {
    gv_dojoSelectedCharacter = 1;
    gv_pS_RoomGreetingFirstEntry = true;
    gv_convoCutscene = c_cutsceneNone;
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_SetBridgeEnviromentLighting ();
void gf_CheckforMissionScreenStart ();
void gf_UpdatePossessedRohanaState ();
void gf_PS_RoomGreetingBridge ();
void gf_PS_RoomGreetingWarCouncil ();
void gf_PS_RoomGreetingSolarCore ();
void gf_PlayGreeting (string lp_speaker);
bool gf_ShouldPlayRoomGreeting ();
bool gf_EnteringFromStoryRoom (bool lp_includeVoidRoom);
int gf_EntryRoom ();
void gf_StorymodeBriefing (string lp_mission);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_MapInit;
trigger gt_Init01StoryData;
trigger gt_Init02Rooms;
trigger gt_Init02RoomsBridge;
trigger gt_Init02RoomsWarCouncil;
trigger gt_Init02RoomsSolarCore;
trigger gt_Init03Scenes;
trigger gt_Init04Clickables;
trigger gt_BeginStorymode;
trigger gt_RoomPrepareBridge;
trigger gt_RoomPrepareWarCouncil;
trigger gt_RoomPrepareSolarCore;
trigger gt_RoomPrepareVoid;
trigger gt_RoomViewBridge;
trigger gt_RoomViewWarCouncil;
trigger gt_RoomViewSolarCore;
trigger gt_RoomViewVoid;
trigger gt_RoomViewStopBridge;
trigger gt_RoomViewStopWarCouncil;
trigger gt_RoomViewStopSolarCore;
trigger gt_RoomViewStopVoid;
trigger gt_BottomBarClicked;
trigger gt_RoomEntered;
trigger gt_MovingToRoom;
trigger gt_StarmapClicked;
trigger gt_ArmyConsoleClicked;
trigger gt_ShipConsoleClicked;
trigger gt_ArchivesClicked;
trigger gt_PylonClicked;
trigger gt_GreetingEnds;
trigger gt_Debug_PlayGreeting;
trigger gt_UpdateUnitRooms;
trigger gt_UpdateUnitRoomsClickables;
trigger gt_MissionLaunch;
trigger gt_TravelArrival;
trigger gt_ConvoCommunicatorPre;
trigger gt_ConvoCommunicatorBookmarkFired;
trigger gt_ConvoCommunicatorPost;
trigger gt_ConvoCommunicatorLine;
trigger gt_ConvoKaraxPre;
trigger gt_ConvoKaraxPost;
trigger gt_ConvoRohannaPre;
trigger gt_ConvoRohannaPost;
trigger gt_ConvoAlarakPre;
trigger gt_ConvoAlarakPost;
trigger gt_ConvoFenixPre;
trigger gt_ConvoFenixPost;
trigger gt_ConvoVorazunPre;
trigger gt_ConvoVorazunPost;
trigger gt_ScenesPlayStorymodeEntry;
trigger gt_ScenesPlayDeparture;
trigger gt_ScenesPlayArrival;
trigger gt_ScenesCampaignIntro;
trigger gt_ScenesDiscord;
trigger gt_ScenesProtoss02;
trigger gt_ScenesAiur01Debrief;
trigger gt_ScenesAiur02Debrief;
trigger gt_ScenesAiur03Debrief;
trigger gt_ScenesPreserverIntro;
trigger gt_ScenesShipRoomIntro;
trigger gt_ScenesCoreUlnar03Post;
trigger gt_ScenesKorhalEnd;
trigger gt_ScenesKorhalTravel;
trigger gt_ScenesKorhal01Debrief;
trigger gt_ScenesKorhal02Debrief;
trigger gt_ScenesShakurasTravel;
trigger gt_ScenesShakuras01Debrief;
trigger gt_ScenesShakuras02Briefing;
trigger gt_ScenesShakurasEnd;
trigger gt_ScenesPurifier01Arrival;
trigger gt_BookmarkPurifier01ArrivalTimestampA;
trigger gt_BookmarkPurifier01ArrivalTimestampB;
trigger gt_ScenesPurifier01Debrief;
trigger gt_BookmarkUlnarArrivalTimestamp;
trigger gt_ScenesKerriganIntro;
trigger gt_ScenesProtoss06Entombed;
trigger gt_ScenesUlnarArrival;
trigger gt_ScenesUlnarTravel;
trigger gt_ScenesUlnar02Debrief;
trigger gt_ScenesUlnar03Debrief;
trigger gt_ScenesUlnarComplete;
trigger gt_ScenesRohanaUlnar03;
trigger gt_ScenesUlnar03MissionEnd;
trigger gt_BookmarkUlnar03MissionEndTimestamp;
trigger gt_ScenesTaldarimArrival;
trigger gt_BookmarkTaldarimArrivalTimestamp;
trigger gt_ScenesTaldarim01Debrief;
trigger gt_ScenesTaldarim02Debrief;
trigger gt_ScenesPurifierArc2Arrival;
trigger gt_BookmarkPurifierArc2ArrivalTimestamp;
trigger gt_ScenesPurifier03MissionEnd;
trigger gt_ScenesPurifier03Debriefing;
trigger gt_ScenesMoebiusArrival;
trigger gt_BookmarkMoebiusArrivalTimestamp;
trigger gt_ScenesMoebius01Debrief;
trigger gt_ScenesAiurUnlocks;
trigger gt_ScenesAiur04Briefing;
trigger gt_ScenesAiur05Briefing;
trigger gt_ScenesAiur06Briefing;
trigger gt_ScenesLiberation;
trigger gt_ScenesProtoss08;
trigger gt_ScenesProtoss09;
trigger gt_ScenesProtossStinger;
trigger gt_ScenesEpilogue01Arrival;
trigger gt_ScenesEpilogue01MissionStart;
trigger gt_ScenesEpilogue01Post;
trigger gt_DEBUGHideSet;
trigger gt_DEBUGReleaseCam;
trigger gt_DEBUGArmyroomvisited;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_SetBridgeEnviromentLighting () {
    // Implementation
    if ((libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Sucessful) == true) && (libVoiC_gf_LastMission() == "PShakuras02") && (libVoiC_gf_CurrentLocation() == "Shakuras")) {
        GameSetLighting("SMX2SetBridgeRoomShakuras02", 0.0);
    }
    else if ((libVoiC_gf_CurrentLocation() == "Shakuras")) {
        GameSetLighting("SMX2SetBridgeRoomShakuras", 0.0);
    }
    else if ((libVoiC_gf_CurrentLocation() == "PurifierA")) {
        GameSetLighting("SMX2SetPurifierBridge", 0.0);
    }
    else if ((libVoiC_gf_CurrentLocation() == "Ulnar")) {
        GameSetLighting("SMX2SetUlnarBridge", 0.0);
    }
    else if ((libVoiC_gf_CurrentLocation() == "Taldarim")) {
        GameSetLighting("SMX2SetBridgeRoomTalDarim", 0.0);
    }
    else if ((libVoiC_gf_CurrentLocation() == "Moebius")) {
        GameSetLighting("SMX2SetBridgeRoomMoebius", 0.0);
    }
    else if ((libVCST_gf_NextAvailableMission("AiurB") == "PAiur05")) {
        GameSetLighting("SMX2SetBridgeRoomAiur05", 0.0);
    }
    else if ((libVCST_gf_NextAvailableMission("AiurB") == "PAiur06")) {
        GameSetLighting("SMX2SetBridgeRoomAiur06", 0.0);
    }
    else if (true) {
        GameSetLighting("SMX2SetBridgeRoom", 0.0);
    }
}

void gf_CheckforMissionScreenStart () {
    // Implementation
    if ((libVoiC_gf_CurrentLocation() == "AiurA") && ((libVCST_gf_NextAvailableMission("AiurA") == "PAiur02") || (libVCST_gf_NextAvailableMission("AiurA") == "PAiur03"))) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
    }
    else if ((libVoiC_gf_CurrentLocation() == "Moebius") && (libVCST_gf_NextAvailableMission("Moebius") == "PMoebius01")) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
    }
    else if ((libVoiC_gf_CurrentLocation() == "EpilogueArc") && ((libVCST_gf_NextAvailableMission("EpilogueArc") == "SC2Epilogue02") || (libVCST_gf_NextAvailableMission("EpilogueArc") == "SC2Epilogue03"))) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
    }
}

void gf_UpdatePossessedRohanaState () {
    // Implementation
    if ((UserDataGetInt("WriterStates", "TalkedToPossessedRohana", "Value", 1) == 0)) {
        libVCST_gf_ClickableSetNew("AmonPreserver", true);
    }
    else {
        libVCST_gf_ClickableSetNew("AmonPreserver", false);
    }
}

void gf_PS_RoomGreetingBridge () {
    // Variable Declarations
    int lv_characterGreeting;

    // Variable Initialization
    lv_characterGreeting = RandomInt(1, 2);

    // Implementation
    if (((gf_EnteringFromStoryRoom(false) == true) || (gv_debugRoomGreetingMustPlay == true))) {
        if (((libVCST_gf_ClickableInRoom("TaldarimHero", libVCST_ge_Rooms_StoryRoomBridge) == true) || (libVCST_gf_ClickableInRoom("DTLeader", libVCST_ge_Rooms_StoryRoomBridge) == true))) {
            if ((((ConversationDataCanRun("pAmbientGreeting_DTLeader", false) == true) && (libVCST_gf_NextAvailableMission("Ulnar") != "PUlnar03")) || (ConversationDataCanRun("pAmbientGreeting_TaldarimHero", false) == true))) {
                if ((libVCST_gf_ClickableInRoom("DTLeader", libVCST_ge_Rooms_StoryRoomBridge) == true)) {
                    gf_PlayGreeting("DTLeader");
                }
                else if ((libVCST_gf_ClickableInRoom("TaldarimHero", libVCST_ge_Rooms_StoryRoomBridge) == true)) {
                    gf_PlayGreeting("TaldarimHero");
                }
            }
            else {
                if ((gf_ShouldPlayRoomGreeting() == true) && (libVCST_gf_NextAvailableMission("Ulnar") != "PUlnar03")) {
                    UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 1);
                    if ((libVCST_gf_ClickableInRoom("DTLeader", libVCST_ge_Rooms_StoryRoomBridge) == true)) {
                        gf_PlayGreeting("DTLeader");
                    }
                    else if ((libVCST_gf_ClickableInRoom("TaldarimHero", libVCST_ge_Rooms_StoryRoomBridge) == true)) {
                        gf_PlayGreeting("TaldarimHero");
                    }
                    gv_pS_RoomGreetingJustPlayed = true;
                    UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 0);
                }
                else {
                }
            }
        }
        else {
        }
    }
    else {
    }
}

void gf_PS_RoomGreetingWarCouncil () {
    // Variable Declarations
    int lv_characterGreeting;

    // Variable Initialization
    lv_characterGreeting = RandomInt(1, 2);

    // Implementation
    if (((gf_EnteringFromStoryRoom(false) == true) || (gv_debugRoomGreetingMustPlay == true))) {
        if (((ConversationDataCanRun("pAmbientGreeting_Preserver", false) == true) || ((ConversationDataCanRun("pAmbientGreeting_DTLeader", false) == true) && (libVCST_gf_ClickableInRoom("DTLeader", libVCST_ge_Rooms_StoryRoomWarCouncil) == true) && (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) != "PUlnar03")))) {
            if ((ConversationDataCanRun("pAmbientGreeting_Preserver", false) == true)) {
                gf_PlayGreeting("Preserver");
            }
            else if ((ConversationDataCanRun("pAmbientGreeting_DTLeader", false) == true)) {
                gf_PlayGreeting("DTLeader");
            }
        }
        else {
            if ((gf_ShouldPlayRoomGreeting() == true)) {
                UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 1);
                if ((libVCST_gf_ClickableInRoom("DTLeader", libVCST_ge_Rooms_StoryRoomWarCouncil) == true) && (lv_characterGreeting <= 1)) {
                    gf_PlayGreeting("DTLeader");
                }
                else {
                    gf_PlayGreeting("Preserver");
                }
                gv_pS_RoomGreetingJustPlayed = true;
                UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 0);
            }
            else {
            }
        }
    }
    else {
    }
}

void gf_PS_RoomGreetingSolarCore () {
    // Variable Declarations
    int lv_characterGreeting;

    // Variable Initialization
    lv_characterGreeting = RandomInt(1, 2);

    // Implementation
    if (((gf_EnteringFromStoryRoom(false) == true) || (gv_debugRoomGreetingMustPlay == true))) {
        if (((ConversationDataCanRun("pAmbientGreeting_Smith", false) == true) || (ConversationDataCanRun("pAmbientGreeting_ProtossAI", false) == true))) {
            if ((ConversationDataCanRun("pAmbientGreeting_Smith", false) == true)) {
                gf_PlayGreeting("Smith");
            }
            else if ((ConversationDataCanRun("pAmbientGreeting_ProtossAI", false) == true)) {
                gf_PlayGreeting("ProtossAI");
            }
        }
        else {
            if ((gf_ShouldPlayRoomGreeting() == true)) {
                UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 1);
                if ((libVCST_gf_ClickableInRoom("ProtossAI", libVCST_ge_Rooms_StoryRoomShip) == true) && (lv_characterGreeting <= 1)) {
                    gf_PlayGreeting("ProtossAI");
                }
                else {
                    gf_PlayGreeting("Smith");
                }
                gv_pS_RoomGreetingJustPlayed = true;
                UserDataSetInt("WriterStates", "RoomGreetingToggle", "Value", 1, 0);
            }
            else {
            }
        }
    }
    else {
    }
}

void gf_PlayGreeting (string lp_speaker) {
    // Implementation
    libVCST_gf_TurnFidgetStatusForClickableOnOff(lp_speaker, false);
    libVCST_gf_TurnAlternateStatusForClickableOnOff(lp_speaker, false);
    ConversationDataRun(UserDataGetGameLink("Clickable", lp_speaker, "GreetingConversation", 1), PlayerGroupAll(), c_conversationSkipSimple, false);
    gv_roomGreetingActiveSpeaker = lp_speaker;
    gv_roomGreetingActiveLine = ConversationDataActiveLine();
    TriggerEnable(gt_GreetingEnds, true);
}

bool gf_ShouldPlayRoomGreeting () {
    // Variable Declarations
    int lv_playGreeting;

    // Variable Initialization
    lv_playGreeting = RandomInt(1, gv_roomGreetingChance);

    // Implementation
    if ((gv_debugRoomGreetingMustPlay == true)) {
        return true;
    }
    else if ((gv_pS_RoomGreetingFirstEntry == true)) {
        gv_pS_RoomGreetingFirstEntry = false;
        return false;
    }
    else if ((gv_pS_RoomGreetingJustPlayed == true)) {
        gv_pS_RoomGreetingJustPlayed = false;
        return false;
    }
    else if ((libVCST_gf_NextAvailableMission("Ulnar") == "PUlnar03")) {
        return false;
    }
    else if ((lv_playGreeting > 1)) {
        return false;
    }
    return true;
}

bool gf_EnteringFromStoryRoom (bool lp_includeVoidRoom) {
    // Implementation
    if ((libVCST_gf_PreviousRoom() != libVCST_gf_CurrentRoom()) && (((libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomShip) || (libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomBridge) || (libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomWarCouncil) || ((lp_includeVoidRoom == true) && (libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomVoid))))) {
        return true;
    }
    else {
        return false;
    }
}

int gf_EntryRoom () {
    // Implementation
    if ((libVoiC_gf_LastMapConditionCheck(libVoiC_ge_MissionCondition_Simulation) == true) && (libVoiC_gf_PC_CampaignMapTypeCheck(libVoiC_gf_LastMap(), c_mapKindStory) == false)) {
        libVCST_gf_SetInArchives(true);
        return libVCST_ge_Rooms_StoryRoomMissionArchives;
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PAiur03", libVoiC_ge_MissionStatus_Completed) == false)) {
        return libVCST_ge_Rooms_StoryRoomMissionScreen;
    }
    else {
    }
    if ((libVoiC_gf_LastMapConditionCheck(libVoiC_ge_MissionCondition_Simulation) == false) && (libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Sucessful) == true) && (libVoiC_gf_PC_CampaignMapTypeCheck(libVoiC_gf_LastMap(), c_mapKindMission) == true)) {
        if (((libVoiC_gf_LastMission() == "PKorhal02") || (libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) == 5) || (libVoiC_gf_LastMission() == "PPurifier01") || ((libVoiC_gf_StoryScenePlayed("CoreUlnar03Post") == false) && (libVoiC_gf_LastMission() == "PPurifier02")))) {
            return libVCST_ge_Rooms_StoryRoomShip;
        }
        else {
        }
        if ((libVoiC_gf_LastMission() == "PUlnar03")) {
            return libVCST_ge_Rooms_StoryRoomWarCouncil;
        }
        else {
        }
        if ((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) == 4) && (libVoiC_gf_StoryScenePlayed("PreserverIntro") == false)) {
            UISetCursorVisible(PlayerGroupAll(), false);
            libVoiC_gf_DisplayTimestamp("WarCouncilIntro", true);
            return libVCST_ge_Rooms_StoryRoomWarCouncil;
        }
        else {
        }
    }
    else {
    }
    return libVCST_ge_Rooms_StoryRoomBridge;
}

void gf_StorymodeBriefing (string lp_mission) {
    string auto9AF4077A_val;

    // Implementation
    auto9AF4077A_val = lp_mission;
    if (auto9AF4077A_val == "PShakuras02") {
        libVCST_gf_PlayStorymodeScene("Shakuras02Briefing", false);
    }
    else if (auto9AF4077A_val == "PTaldarim02") {
    }
    else if (auto9AF4077A_val == "PMoebius01") {
    }
    else if (auto9AF4077A_val == "PMoebius01") {
    }
    else if (auto9AF4077A_val == "PAiur05") {
        libVCST_gf_PlayStorymodeScene("Aiur05Briefing", false);
    }
    else if (auto9AF4077A_val == "PAiur06") {
        libVCST_gf_PlayStorymodeScene("Aiur06Briefing", false);
    }
    else {
    }
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Init
//--------------------------------------------------------------------------------------------------
bool gt_MapInit_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_StoryMode(PlayerGroupAll(), true);
    TriggerExecute(gt_Init01StoryData, true, true);
    TriggerExecute(gt_Init02Rooms, true, false);
    TriggerExecute(gt_Init03Scenes, true, false);
    TriggerExecute(gt_Init04Clickables, true, false);
    TriggerExecute(gt_BeginStorymode, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapInit_Init () {
    gt_MapInit = TriggerCreate("gt_MapInit_Func");
    TriggerAddEventMapInit(gt_MapInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Story Data
//--------------------------------------------------------------------------------------------------
bool gt_Init01StoryData_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_indexMission;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_StoryTravelDeparture, gt_ScenesPlayDeparture);
    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_StoryTravelArrival, gt_TravelArrival);
    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_StoryMissionLaunch, gt_MissionLaunch);
    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_StoryInstanceStart, gt_BeginStorymode);
    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_StoryStoryCheatPlay, gt_UpdateUnitRooms);
    libVoiC_gf_RegisterCampaignEvent(libVoiC_ge_PC_Event_UIBottomBarRoomChange, gt_BottomBarClicked);
    libNtve_gf_SetUpgradeLevelForPlayer(2, "DarkMarineArmor", 1);
    libVCST_gf_InitializeVoidStorymode("PStory01");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01StoryData_Init () {
    gt_Init01StoryData = TriggerCreate("gt_Init01StoryData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Rooms
//--------------------------------------------------------------------------------------------------
bool gt_Init02Rooms_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((libVoiC_gf_LastSuccessfulMission() == "PUlnar02")) {
        CutsceneAddGlobalFilter("Ulnar02");
    }
    else {
        CutsceneAddGlobalFilter("Std");
    }
    libVCST_gf_RegisterRoom(libVCST_ge_Rooms_StoryRoomVoid, gt_RoomPrepareVoid, gt_RoomViewVoid, gt_RoomViewStopVoid, null, null);
    libVCST_gf_RegisterRoom(libVCST_ge_Rooms_StoryRoomBridge, gt_RoomPrepareBridge, gt_RoomViewBridge, gt_RoomViewStopBridge, "Cutscenes\\Conversations_Bridge.SC2Cutscene", "Cutscenes\\UIView_Bridge.SC2Cutscene");
    libVCST_gf_RegisterRoom(libVCST_ge_Rooms_StoryRoomShip, gt_RoomPrepareSolarCore, gt_RoomViewSolarCore, gt_RoomViewStopSolarCore, "Cutscenes\\Conversations_ShipRoom.SC2Cutscene", "Cutscenes\\UIView_ShipRoom.SC2Cutscene");
    libVCST_gf_RegisterRoom(libVCST_ge_Rooms_StoryRoomWarCouncil, gt_RoomPrepareWarCouncil, gt_RoomViewWarCouncil, gt_RoomViewStopWarCouncil, "Cutscenes\\Conversations_ArmyRoom.SC2Cutscene", "Cutscenes\\UIView_ArmyRoom.SC2Cutscene");
    libVCST_gf_RegisterAmbientConversationRoom(libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_RegisterAmbientConversationRoom(libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_RegisterAmbientConversationRoom(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_SetEnterRoomCallback(gt_RoomEntered);
    libVCST_gf_SetMovingToRoomCallback(gt_MovingToRoom);
    TriggerExecute(gt_Init02RoomsBridge, true, false);
    TriggerExecute(gt_Init02RoomsWarCouncil, true, false);
    TriggerExecute(gt_Init02RoomsSolarCore, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Rooms_Init () {
    gt_Init02Rooms = TriggerCreate("gt_Init02Rooms_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Rooms - Bridge
//--------------------------------------------------------------------------------------------------
bool gt_Init02RoomsBridge_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_StoryCreateUnit("SMX2_Bridge00", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet00 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet00, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet00);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge03", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet03 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet03, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet03);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge04", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet04 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet04, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet04);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge05", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet05 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet05, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet05);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge06", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet06 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet06, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet06);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge08", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet08 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet08, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet08);
    libVCST_gf_StoryCreateUnit("SMX2_Bridge09", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITBridgeSet09 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITBridgeSet09, libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ShowHideUnitAbs(false, gv_uNITBridgeSet09);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02RoomsBridge_Init () {
    gt_Init02RoomsBridge = TriggerCreate("gt_Init02RoomsBridge_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Rooms - War Council
//--------------------------------------------------------------------------------------------------
bool gt_Init02RoomsWarCouncil_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_StoryCreateUnit("SMX2_ArmyRoomSet00", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITWarCouncilSet00 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet00, libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet00);
    libVCST_gf_StoryCreateUnit("SMX2_ArmyRoomSet04", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITWarCouncilSet01 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet01, libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet01);
    if ((libVoiC_gf_MissionStatus("PKorhal02") == libVoiC_ge_MissionStatus_Completed)) {
        libVCST_gf_StoryCreateUnit("SMX2_ArmyRoomSet02", libVCST_gf_StoryModeDefaultPosition(), 270.0);
        gv_uNITWarCouncilSet02 = UnitLastCreated();
        libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet02, libVCST_ge_Rooms_StoryRoomWarCouncil);
        libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet02);
    }
    else {
    }
    if ((libVCST_gf_NextAvailableMission("Ulnar") == "PUlnar03")) {
        libVCST_gf_StoryCreateUnit("SMX2_PossessedStasisChamber", libVCST_gf_StoryModeDefaultPosition(), 270.0);
        gv_uNITWarCouncilSet02Possessed = UnitLastCreated();
        libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet02Possessed, libVCST_ge_Rooms_StoryRoomWarCouncil);
        if ((UserDataGetInt("WriterStates", "TalkedToPossessedRohana", "Value", 1) == 1)) {
            libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet02Possessed);
        }
        else {
            libVCST_gf_ShowHideUnitAbs(false, gv_uNITWarCouncilSet02Possessed);
        }
    }
    else {
    }
    libVCST_gf_StoryCreateUnit("SMX2_ArmyRoomSet03", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITWarCouncilSet03 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet03, libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet03);
    libVCST_gf_StoryCreateUnit("SMX2_ArmyRoomSet05", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITWarCouncilSet04 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet04, libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet04);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02RoomsWarCouncil_Init () {
    gt_Init02RoomsWarCouncil = TriggerCreate("gt_Init02RoomsWarCouncil_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Rooms - Solar Core
//--------------------------------------------------------------------------------------------------
bool gt_Init02RoomsSolarCore_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_StoryCreateUnit("SMX2_ShipRoomSet00", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreSet00 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreSet00, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreSet00);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoomSet02", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreSet02 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreSet02, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreSet02);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoomSet_Wings", libNtve_gf_PointFromXYZ((PointGetX(libVCST_gf_StoryModeDefaultPosition())+-0.8001), (PointGetY(libVCST_gf_StoryModeDefaultPosition())+-5.0749), (PointGetHeight(libVCST_gf_StoryModeDefaultPosition())+4.3524)), 90.0);
    gv_uNITSolarCoreSetWings = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreSetWings, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreSetWings);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoom_Hologram00", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreHolograms00 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreHolograms00, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreHolograms00);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoom_Hologram02", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreHolograms02 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreHolograms02, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreHolograms02);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoom_Hologram03", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreHolograms03 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreHolograms03, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreHolograms03);
    libVCST_gf_StoryCreateUnit("SMX2_ShipRoom_Hologram04", libVCST_gf_StoryModeDefaultPosition(), 270.0);
    gv_uNITSolarCoreHolograms04 = UnitLastCreated();
    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITSolarCoreHolograms04, libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITSolarCoreHolograms04);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02RoomsSolarCore_Init () {
    gt_Init02RoomsSolarCore = TriggerCreate("gt_Init02RoomsSolarCore_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Scenes
//--------------------------------------------------------------------------------------------------
bool gt_Init03Scenes_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_RegisterStorymodeScene("CampaignIntro", gt_ScenesCampaignIntro);
    libVCST_gf_RegisterStorymodeScene("AiurIntro", gt_ScenesDiscord);
    libVCST_gf_RegisterStorymodeScene("Aiur01Debrief", gt_ScenesAiur01Debrief);
    libVCST_gf_RegisterStorymodeScene("Protoss02", gt_ScenesProtoss02);
    libVCST_gf_RegisterStorymodeScene("Aiur02Debrief", gt_ScenesAiur02Debrief);
    libVCST_gf_RegisterStorymodeScene("Aiur03Debrief", gt_ScenesAiur03Debrief);
    libVCST_gf_RegisterStorymodeScene("ShakurasTravel", gt_ScenesShakurasTravel);
    libVCST_gf_RegisterStorymodeScene("Shakuras01Debrief", gt_ScenesShakuras01Debrief);
    libVCST_gf_RegisterStorymodeScene("Shakuras02Briefing", gt_ScenesShakuras02Briefing);
    libVCST_gf_RegisterStorymodeScene("ShakurasEnd", gt_ScenesShakurasEnd);
    libVCST_gf_RegisterStorymodeScene("KorhalTravel", gt_ScenesKorhalTravel);
    libVCST_gf_RegisterStorymodeScene("Korhal01Debrief", gt_ScenesKorhal01Debrief);
    libVCST_gf_RegisterStorymodeScene("KorhalEnd", gt_ScenesKorhalEnd);
    libVCST_gf_RegisterStorymodeScene("Korhal02Debrief", gt_ScenesKorhal02Debrief);
    libVCST_gf_RegisterStorymodeScene("Purifier01Travel", gt_ScenesPurifier01Arrival);
    libVCST_gf_RegisterStorymodeScene("Purifier01Debrief", gt_ScenesPurifier01Debrief);
    libVCST_gf_RegisterStorymodeScene("UlnarTravel", gt_ScenesUlnarTravel);
    libVCST_gf_RegisterStorymodeScene("UlnarArrival", gt_ScenesUlnarArrival);
    libVCST_gf_RegisterStorymodeScene("KerriganIntro", gt_ScenesKerriganIntro);
    libVCST_gf_RegisterStorymodeScene("Protoss06", gt_ScenesProtoss06Entombed);
    libVCST_gf_RegisterStorymodeScene("Ulnar02Debrief", gt_ScenesUlnar02Debrief);
    libVCST_gf_RegisterStorymodeScene("Ulnar03Debrief", gt_ScenesUlnar03Debrief);
    libVCST_gf_RegisterStorymodeScene("UlnarComplete", gt_ScenesUlnarComplete);
    libVCST_gf_RegisterStorymodeScene("CoreUlnar03Post", gt_ScenesCoreUlnar03Post);
    libVCST_gf_RegisterStorymodeScene("RohanaUlnar03", gt_ScenesRohanaUlnar03);
    libVCST_gf_RegisterStorymodeScene("Ulnar03MissionEnd", gt_ScenesUlnar03MissionEnd);
    libVCST_gf_RegisterStorymodeScene("TaldarimTravel", gt_ScenesTaldarimArrival);
    libVCST_gf_RegisterStorymodeScene("Taldarim01Debrief", gt_ScenesTaldarim01Debrief);
    libVCST_gf_RegisterStorymodeScene("Taldarim02Debrief", gt_ScenesTaldarim02Debrief);
    libVCST_gf_RegisterStorymodeScene("MoebiusArrival", gt_ScenesMoebiusArrival);
    libVCST_gf_RegisterStorymodeScene("Moebius01Debrief", gt_ScenesMoebius01Debrief);
    libVCST_gf_RegisterStorymodeScene("Purifier02Arrival", gt_ScenesPurifierArc2Arrival);
    libVCST_gf_RegisterStorymodeScene("Purifier03MissionEnd", gt_ScenesPurifier03MissionEnd);
    libVCST_gf_RegisterStorymodeScene("Purifier03Debrief", gt_ScenesPurifier03Debriefing);
    libVCST_gf_RegisterStorymodeScene("AiurUnlock", gt_ScenesAiurUnlocks);
    libVCST_gf_RegisterStorymodeScene("Aiur04Briefing", gt_ScenesAiur04Briefing);
    libVCST_gf_RegisterStorymodeScene("Aiur05Briefing", gt_ScenesAiur05Briefing);
    libVCST_gf_RegisterStorymodeScene("Aiur06Briefing", gt_ScenesAiur06Briefing);
    libVCST_gf_RegisterStorymodeScene("Liberation", gt_ScenesLiberation);
    libVCST_gf_RegisterStorymodeScene("XelNagaKerrigan", gt_ScenesProtoss08);
    libVCST_gf_RegisterStorymodeScene("EpilogueEnd", gt_ScenesProtoss09);
    libVCST_gf_RegisterStorymodeScene("PreserverIntro", gt_ScenesPreserverIntro);
    libVCST_gf_RegisterStorymodeScene("ShipRoomIntro", gt_ScenesShipRoomIntro);
    libVCST_gf_RegisterStorymodeScene("ProtossStinger", gt_ScenesProtossStinger);
    libVCST_gf_RegisterStorymodeScene("EpilogueStart", gt_ScenesEpilogue01Arrival);
    libVCST_gf_RegisterStorymodeScene("Epilogue01MissionStart", gt_ScenesEpilogue01MissionStart);
    libVCST_gf_RegisterStorymodeScene("Epilogue01Debrief", gt_ScenesEpilogue01Post);
    if ((libVoiC_gf_MissionStatusCheck("PAiur05", libVoiC_ge_MissionStatus_Completed) == true)) {
        libNtve_gf_CreateModelAtPoint("SMX2ProtossVoidRay", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2ProtossCarrier", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2_Carrier_TalDarim", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("Mothership", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2_Background_Nebula_AiurComplete", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2_ProtossDarkTemplarGuard01", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2CivilianProtoss00", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
        libNtve_gf_CreateModelAtPoint("SMX2CivilianProtoss01", libVCST_gf_StoryModeDefaultPosition());
        ActorSend(libNtve_gf_ActorLastCreated(), "Destroy Immediate");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03Scenes_Init () {
    gt_Init03Scenes = TriggerCreate("gt_Init03Scenes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Clickables
//--------------------------------------------------------------------------------------------------
bool gt_Init04Clickables_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_CreateClickable("Starmap", "SMX2_Bridge01", libVCST_gf_StoryModeDefaultPosition());
    libVCST_gf_AddRemoveClickableFromRoom(true, "Starmap", libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_ClickableSetCustomCallback("Starmap", gt_StarmapClicked);
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Starmap"));
    libVCST_gf_CreateClickable("ArmyConsole", "SMX2_ArmyRoomSet01", libVCST_gf_StoryModeDefaultPosition());
    libVCST_gf_AddRemoveClickableFromRoom(true, "ArmyConsole", libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_ClickableSetCustomCallback("ArmyConsole", gt_ArmyConsoleClicked);
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("ArmyConsole"));
    if ((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 4)) {
        libVCST_gf_CreateClickable("ShipConsole", "SMX2_ShipRoomSet01", libVCST_gf_StoryModeDefaultPosition());
        libVCST_gf_AddRemoveClickableFromRoom(true, "ShipConsole", libVCST_ge_Rooms_StoryRoomShip);
        libVCST_gf_ClickableSetCustomCallback("ShipConsole", gt_ShipConsoleClicked);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("ShipConsole"));
    }
    else {
    }
    if (((libVoiC_gf_MissionStatus("PShakuras01") == libVoiC_ge_MissionStatus_Available) || (libVoiC_gf_MissionStatus("PKorhal01") == libVoiC_ge_MissionStatus_Available) || (libVoiC_gf_CurrentLocation() == "Korhal"))) {
        libVCST_gf_CreateClickable("BridgeConsole", "SMX2_Bridge_Communicator", libVCST_gf_StoryModeDefaultPosition());
        libVCST_gf_AddRemoveClickableFromRoom(true, "BridgeConsole", libVCST_ge_Rooms_StoryRoomBridge);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("BridgeConsole"));
        libVCST_gf_ClickableSetPreCallback("BridgeConsole", gt_ConvoCommunicatorPre);
        libVCST_gf_ClickableSetPostCallback("BridgeConsole", gt_ConvoCommunicatorPost);
        libVCST_gf_ClickableSetLineCallback("BridgeConsole", gt_ConvoCommunicatorLine);
    }
    else {
    }
    libVCST_gf_ClickableSetPreCallback("Smith", gt_ConvoKaraxPre);
    libVCST_gf_ClickableSetPostCallback("Smith", gt_ConvoKaraxPost);
    libVCST_gf_ClickableSetPreCallback("Preserver", gt_ConvoRohannaPre);
    libVCST_gf_ClickableSetPostCallback("Preserver", gt_ConvoRohannaPost);
    libVCST_gf_ClickableSetCustomCallback("AmonPreserver", gt_ScenesRohanaUlnar03);
    libVCST_gf_ClickableSetPreCallback("DTLeader", gt_ConvoVorazunPre);
    libVCST_gf_ClickableSetPostCallback("DTLeader", gt_ConvoVorazunPost);
    libVCST_gf_ClickableSetPreCallback("ProtossAI", gt_ConvoFenixPre);
    libVCST_gf_ClickableSetPostCallback("ProtossAI", gt_ConvoFenixPost);
    libVCST_gf_ClickableSetPreCallback("TaldarimHero", gt_ConvoAlarakPre);
    libVCST_gf_ClickableSetPostCallback("TaldarimHero", gt_ConvoAlarakPost);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04Clickables_Init () {
    gt_Init04Clickables = TriggerCreate("gt_Init04Clickables_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Begin Storymode
//--------------------------------------------------------------------------------------------------
bool gt_BeginStorymode_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_indexUnit;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_PS_TipsInit();
    TriggerExecute(gt_UpdateUnitRooms, true, false);
    if ((libVCST_gf_PS_CampaignCompleted() == true)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionArchives);
        return true;
    }
    else {
    }
    if ((libVCST_gv_pS_IsTransitionalLoad == true) && (gv_storymodeEntered == false)) {
        gv_storymodeEntered = true;
        libVCST_gf_EnterRoom(libVCST_gf_CurrentRoom());
        return true;
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PAiur03", libVoiC_ge_MissionStatus_Completed) == true) && (libVoiC_gf_CurrentLocation() == "AiurA")) {
        libVCST_gf_PlayStorymodeScene("Aiur03Debrief", true);
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomTravelScreen);
        return true;
    }
    else {
    }
    gv_storymodeEntered = true;
    gv_lookedAtShipConsole = false;
    gv_lookedAtArmyConsole = false;
    libVCST_gf_ShowHideAllAmbientScenes(false);
    gv_warRoomAmbientScenesStarted = false;
    TriggerExecute(gt_ScenesPlayStorymodeEntry, true, true);
    if ((libVoiC_gf_MissionStatusCheck("PAiur03", libVoiC_ge_MissionStatus_Completed) == false)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
        return true;
    }
    else {
    }
    libVCST_gf_EnterRoom(gf_EntryRoom());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BeginStorymode_Init () {
    gt_BeginStorymode = TriggerCreate("gt_BeginStorymode_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Prepare - Bridge
//--------------------------------------------------------------------------------------------------
bool gt_RoomPrepareBridge_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    CutsceneRemoveGlobalFilter("CoreStage1");
    CutsceneRemoveGlobalFilter("CoreStage2");
    CutsceneRemoveGlobalFilter("CoreStage3");
    CutsceneRemoveGlobalFilter("Capsule");
    CutsceneRemoveGlobalFilter("CapsuleOff");
    FogSetEnabled(false);
    libVCST_gf_ShowHideStoryUnits(true);
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Preserver"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Adjutant"));
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Artanis"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Kerrigan"));
    if ((libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PUlnar03")) {
        libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("DTLeader"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Kerrigan"));
    }
    else {
        libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("DTLeader"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Adjutant"));
    }
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("TaldarimHero"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Adjutant"));
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Smith"), UnitGetAttachmentPoint(gv_uNITBridgeSet00, "Pos_Primal"));
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet08);
    libVCST_gf_ShowHideUnitAbs(false, gv_uNITBridgeSet09);
    UnitSetFacing(libVCST_gf_ClickableUnit("LoreConsole"), 120.0, 0.0);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("BridgeConsole")), c_animNameDefault, "Stand Work", c_animFlagPlayForever, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "pAmbience_Bridge", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "Music_Protoss_Storymode_Loop", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libVCST_gf_StartAmbientConversationTimer();
    if ((gv_bridgeAmbientScenesStarted == false)) {
        libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomBridge, "BridgeRoom_Delay_Intro");
        gv_bridgeAmbientScenesStarted = true;
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomPrepareBridge_Init () {
    gt_RoomPrepareBridge = TriggerCreate("gt_RoomPrepareBridge_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Prepare - War Council
//--------------------------------------------------------------------------------------------------
bool gt_RoomPrepareWarCouncil_Func (bool testConds, bool runActions) {
    int auto8AB196DC_val;

    // Variable Declarations
    int lv_ambientIntroSelection;
    int lv_randomInt;

    // Variable Initialization
    lv_randomInt = RandomInt(1, 5);

    // Actions
    if (!runActions) {
        return true;
    }

    CutsceneRemoveGlobalFilter("CoreStage1");
    CutsceneRemoveGlobalFilter("CoreStage2");
    CutsceneRemoveGlobalFilter("CoreStage3");
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Artanis"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_Kerrigan"));
    if (((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) >= 16) || (libVoiC_gf_MissionStatusCheck("PKorhal02", libVoiC_ge_MissionStatus_Completed) == false))) {
        libVCST_gf_ShowHideUnitAbs(false, gv_uNITWarCouncilSet02);
        CutsceneRemoveGlobalFilter("Capsule");
        CutsceneAddGlobalFilter("CapsuleOff");
        libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Preserver"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_Firebat"));
    }
    else {
        libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet02);
        CutsceneRemoveGlobalFilter("CapsuleOff");
        CutsceneAddGlobalFilter("Capsule");
        if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Available) == true)) {
            libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("AmonPreserver"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_EvolutionMaster"));
            if ((UserDataGetInt("Clickable", "AmonPreserver", "New", 1) == 1)) {
                libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("AmonPreserver"), libNtve_gf_PointWithZOffset(UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_EvolutionMaster"), (PointGetHeight(UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_EvolutionMaster")) + 0.03)));
                UnitSetFacing(libVCST_gf_ClickableUnit("AmonPreserver"), PointGetFacing(UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_EvolutionMaster")), 0.0);
                libVCST_gf_TurnAnimationPropertiesOnOff(libVCST_gf_ClickableUnit("AmonPreserver"), "GLstand Wounded", true, 0.0);
            }
            else {
                libVCST_gf_ShowHideUnitAbs(false, gv_uNITWarCouncilSet02);
                libVCST_gf_ShowHideUnitAbs(true, gv_uNITWarCouncilSet02Possessed);
                libVCST_gf_TurnAnimationPropertiesOnOff(gv_uNITWarCouncilSet02Possessed, "GLstand 01", true, 0.0);
                libVCST_gf_TurnAnimationPropertiesOnOff(libVCST_gf_ClickableUnit("AmonPreserver"), "GLstand Wounded", false, 0.0);
                libVCST_gf_TurnAnimationPropertiesOnOff(libVCST_gf_ClickableUnit("AmonPreserver"), "Stand Morph 03", true, 0.0);
            }
        }
        else {
            libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Preserver"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_EvolutionMaster"));
        }
    }
    if ((libVoiC_gf_LastSuccessfulMission() == "PUlnar02")) {
        libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("DTLeader"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_Kerrigan"));
    }
    else {
        libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("DTLeader"), UnitGetAttachmentPoint(gv_uNITWarCouncilSet00, "Pos_Tychus"));
    }
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "pAmbience_WarCouncil", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "Music_Protoss_Storymode_Loop", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libVCST_gf_StartAmbientConversationTimer();
    if ((gv_warRoomAmbientScenesStarted == false) && (libVoiC_gf_LastMission() != "PUlnar02")) {
        if ((libVoiC_gf_LastMission() == "PMoebius01")) {
            libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_CarrierOneShot_ToVoidRays");
        }
        else if ((libVoiC_gf_LastMission() == "PPurifier02")) {
            libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_ColossusOneShot_ToZealots");
        }
        else if ((libVoiC_gf_LastMission() == "PTaldarim01")) {
            libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_VoidRayOneShot_ToStalkers");
        }
        else if (true) {
            auto8AB196DC_val = lv_randomInt;
            if (auto8AB196DC_val == 1) {
                libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_MainLoop01");
            }
            else if (auto8AB196DC_val == 2) {
                libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_MainLoop05");
            }
            else if (auto8AB196DC_val == 3) {
                libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_MainLoop12");
            }
            else if (auto8AB196DC_val == 4) {
                libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_MainLoop18");
            }
            else if (auto8AB196DC_val == 5) {
                libVCST_gf_PlayAmbientScene(libVCST_ge_Rooms_StoryRoomWarCouncil, "ArmyRoom_MainLoop22");
            }
            else {
            }
        }
        gv_warRoomAmbientScenesStarted = true;
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomPrepareWarCouncil_Init () {
    gt_RoomPrepareWarCouncil = TriggerCreate("gt_RoomPrepareWarCouncil_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Prepare - Solar Core
//--------------------------------------------------------------------------------------------------
bool gt_RoomPrepareSolarCore_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    CutsceneRemoveGlobalFilter("Capsule");
    CutsceneRemoveGlobalFilter("CapsuleOff");
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("DTLeader"), UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Kerrigan"));
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Artanis"), UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Kerrigan"));
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("ProtossAI"), UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_EvolutionMaster"));
    libVCST_gf_StorySetUnitLocation(libVCST_gf_ClickableUnit("Smith"), UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Adjutant"));
    libVCST_gf_StorySetUnitLocation(gv_uNITSolarCoreHolograms00, UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Banshee"));
    libVCST_gf_StorySetUnitLocation(gv_uNITSolarCoreHolograms02, UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Ghost"));
    libVCST_gf_StorySetUnitLocation(gv_uNITSolarCoreHolograms03, UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Firebat"));
    libVCST_gf_StorySetUnitLocation(gv_uNITSolarCoreHolograms04, UnitGetAttachmentPoint(gv_uNITSolarCoreSet00, "Pos_Hanson"));
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "pAmbience_SolarCore", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "Music_Protoss_Storymode_Loop", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libVCST_gf_StartAmbientConversationTimer();
    libVCST_gf_StartKaraxDronePickupTimer();
    if (((libVoiC_gf_CurrentLocation() == "Taldarim") || (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PUlnar03"))) {
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("XelNagaKeystone")), "::Baseline", "Hover", c_animFlagPlayForever, 0.0);
    }
    else {
    }
    if ((libVCST_gf_ClickableUnit("XelNagaKeystone") != null)) {
        ActorSend(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("XelNagaKeystone")), "Signal StartLoopSound");
    }
    else {
    }
    if ((libVoiC_gf_CurrentLocation() == "AiurB")) {
        ActorSend(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("ShipConsole")), "Signal CoreFullyOpen");
        CutsceneRemoveGlobalFilter("CoreStage1");
        CutsceneRemoveGlobalFilter("CoreStage2");
        CutsceneAddGlobalFilter("CoreStage3");
    }
    else if ((libVoiC_gf_MissionStatusCheck("PUlnar02", libVoiC_ge_MissionStatus_Completed) == true)) {
        ActorSend(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("ShipConsole")), "Signal CoreHalfOpen");
        CutsceneRemoveGlobalFilter("CoreStage1");
        CutsceneRemoveGlobalFilter("CoreStage3");
        CutsceneAddGlobalFilter("CoreStage2");
    }
    else if (true) {
        ActorSend(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("ShipConsole")), "Signal CoreClosed");
        CutsceneRemoveGlobalFilter("CoreStage2");
        CutsceneRemoveGlobalFilter("CoreStage3");
        CutsceneAddGlobalFilter("CoreStage1");
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomPrepareSolarCore_Init () {
    gt_RoomPrepareSolarCore = TriggerCreate("gt_RoomPrepareSolarCore_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Prepare - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomPrepareVoid_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    CutsceneRemoveGlobalFilter("CoreStage1");
    CutsceneRemoveGlobalFilter("CoreStage2");
    CutsceneRemoveGlobalFilter("CoreStage3");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomPrepareVoid_Init () {
    gt_RoomPrepareVoid = TriggerCreate("gt_RoomPrepareVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View - Bridge
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewBridge_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetWorldVisible(PlayerGroupAll(), true);
    if (((libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomMissionScreen) || (libVCST_gf_PreviousRoom() == libVCST_ge_Rooms_StoryRoomTravelScreen))) {
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("Starmap")), c_animNameDefault, "Stand Work End", c_animFlagNonLooping, 0.0);
    }
    else {
    }
    UnitSetScale(libVCST_gf_ClickableUnit("Artanis"), 110.0, 110.0, 110.0);
    UnitSetScale(libVCST_gf_ClickableUnit("Smith"), 110.0, 110.0, 110.0);
    UnitSetScale(libVCST_gf_ClickableUnit("TaldarimHero"), 110.0, 110.0, 110.0);
    UnitSetScale(libVCST_gf_ClickableUnit("DTLeader"), 110.0, 110.0, 110.0);
    gf_SetBridgeEnviromentLighting();
    CameraSetChannel(1, libVCST_gf_ClickableUnit("BridgeConsole"), "SMC2_Bridge_Communicator_Camera", 1, 1.0);
    libVCST_gf_ToggleInteractives(true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeBattleUI, true);
    libVCST_gf_ShowHideStoryUI(true);
    GameCheatAllow(c_gameCheatProgress, true);
    GameCheatAllow(c_gameCheatScene, true);
    GameCheatAllow(c_gameCheatCredits, true);
    GameCheatAllow(c_gameCheatResearch, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewBridge_Init () {
    gt_RoomViewBridge = TriggerCreate("gt_RoomViewBridge_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View - War Council
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewWarCouncil_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UserDataSetInt("StoryStates", "Army Room Visited", "Value", 1, 1);
    UISetWorldVisible(PlayerGroupAll(), true);
    libVCST_gf_ToggleInteractives(true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeBattleUI, true);
    libVCST_gf_ShowHideStoryUI(true);
    GameCheatAllow(c_gameCheatProgress, true);
    GameCheatAllow(c_gameCheatScene, true);
    GameCheatAllow(c_gameCheatCredits, true);
    GameCheatAllow(c_gameCheatResearch, true);
    libVCST_gf_ClickableSetNew("ArmyConsole", libVoiC_gf_ArmyHasUnusedTech());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewWarCouncil_Init () {
    gt_RoomViewWarCouncil = TriggerCreate("gt_RoomViewWarCouncil_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View - Solar Core
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewSolarCore_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UserDataSetInt("StoryStates", "Ship Room Visited", "Value", 1, 1);
    UISetWorldVisible(PlayerGroupAll(), true);
    GameSetLighting("SMX2SetShipRoom", 0.0);
    libVCST_gf_ToggleInteractives(true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeBattleUI, true);
    libVCST_gf_ShowHideStoryUI(true);
    GameCheatAllow(c_gameCheatProgress, true);
    GameCheatAllow(c_gameCheatScene, true);
    GameCheatAllow(c_gameCheatCredits, true);
    GameCheatAllow(c_gameCheatResearch, true);
    libVCST_gf_ClickableSetNew("ShipConsole", libVoiC_gf_SpearofAdunHasUnusedTech());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewSolarCore_Init () {
    gt_RoomViewSolarCore = TriggerCreate("gt_RoomViewSolarCore_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewVoid_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetWorldVisible(PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewVoid_Init () {
    gt_RoomViewVoid = TriggerCreate("gt_RoomViewVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View Stop - Bridge
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewStopBridge_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetScale(libVCST_gf_ClickableUnit("Artanis"), 100.0, 100.0, 100.0);
    UnitSetScale(libVCST_gf_ClickableUnit("Smith"), 100.0, 100.0, 100.0);
    UnitSetScale(libVCST_gf_ClickableUnit("TaldarimHero"), 100.0, 100.0, 100.0);
    UnitSetScale(libVCST_gf_ClickableUnit("DTLeader"), 100.0, 100.0, 100.0);
    CameraApplyInfo(1, CameraInfoDefault(), 0.0, -1, 10.0, true);
    gv_pylonActivated = false;
    CutsceneRemoveGlobalFilter("Pylon");
    CutsceneRemoveGlobalFilter("Special");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewStopBridge_Init () {
    gt_RoomViewStopBridge = TriggerCreate("gt_RoomViewStopBridge_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View Stop - War Council
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewStopWarCouncil_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(1, CameraInfoDefault(), 0.0, -1, 10.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewStopWarCouncil_Init () {
    gt_RoomViewStopWarCouncil = TriggerCreate("gt_RoomViewStopWarCouncil_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View Stop - Solar Core
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewStopSolarCore_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(1, CameraInfoDefault(), 0.0, -1, 10.0, true);
    libVCST_gf_StopKaraxDronePickupTimer();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewStopSolarCore_Init () {
    gt_RoomViewStopSolarCore = TriggerCreate("gt_RoomViewStopSolarCore_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View Stop - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewStopVoid_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewStopVoid_Init () {
    gt_RoomViewStopVoid = TriggerCreate("gt_RoomViewStopVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bottom Bar Clicked
//--------------------------------------------------------------------------------------------------
bool gt_BottomBarClicked_Func (bool testConds, bool runActions) {
    int autoCC7F53BD_val;

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideStoryUI(false);
    libVoiC_gf_CinematicFade(false, 0.5, Color(0.00, 0.00, 0.00), true);
    autoCC7F53BD_val = StringToInt(libVoiC_gf_CampaignEventParameter(libVoiC_ge_PC_Event_UIBottomBarRoomChange, 1));
    if (autoCC7F53BD_val == (libVCUI_ge_PU_BottomBarButton_BridgeRoom)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomBridge);
    }
    else if (autoCC7F53BD_val == (libVCUI_ge_PU_BottomBarButton_ArmyRoom)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomWarCouncil);
    }
    else if (autoCC7F53BD_val == (libVCUI_ge_PU_BottomBarButton_ShipRoom)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomShip);
    }
    else if (autoCC7F53BD_val == (libVCUI_ge_PU_BottomBarButton_MissionArchivesRoom)) {
        libVCST_gf_SetInArchives(true);
        libVCST_gv_pS_RoomBeforeArchives = libVCST_gf_CurrentRoom();
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionArchives);
    }
    else {
        TriggerDebugOutput(1, StringExternal("Param/Value/26F13D15"), false);
    }
    libVoiC_gf_CinematicFade(true, 0.3, Color(0.00, 0.00, 0.00), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BottomBarClicked_Init () {
    gt_BottomBarClicked = TriggerCreate("gt_BottomBarClicked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Entered
//--------------------------------------------------------------------------------------------------
bool gt_RoomEntered_Func (bool testConds, bool runActions) {
    int auto09C60A44_val;

    // Actions
    if (!runActions) {
        return true;
    }

    auto09C60A44_val = libVCST_gf_CurrentRoom();
    if (auto09C60A44_val == libVCST_ge_Rooms_StoryRoomWarCouncil) {
        libVCST_gf_ApplyRohanaHairLookAt();
        if ((ConversationDataCanRun("pPrompt_WarCouncilVisit", false) == true) && (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PUlnar02") && (gv_warCouncilPromptGiven == false)) {
            ConversationDataRun("pPrompt_WarCouncilVisit", PlayerGroupAll(), c_conversationSkipNone, false);
            gv_lookedAtArmyConsole = true;
            gv_warCouncilPromptGiven = true;
        }
        else {
        }
        if ((gf_EnteringFromStoryRoom(true) == true) && ((gv_firstWarCouncilVisit == true) || ((gv_warCouncilPromptGiven == false) && ((libVoiC_gf_LastSuccessfulMission() == "PUlnar03") || (libVoiC_gf_NumberOfUnupgradedArmyCategories() >= 2))))) {
            ConversationDataRun("pPrompt_WarCouncilUse", PlayerGroupAll(), c_conversationSkipSimple, false);
            gv_firstWarCouncilVisit = false;
            gv_warCouncilPromptGiven = true;
        }
        else {
            gf_PS_RoomGreetingWarCouncil();
        }
    }
    else if (auto09C60A44_val == libVCST_ge_Rooms_StoryRoomShip) {
        if ((gv_firstSolarCoreVisit == true)) {
            ConversationDataRun("pPrompt_SolarCoreUse", PlayerGroupAll(), c_conversationSkipSimple, false);
            gv_firstSolarCoreVisit = false;
        }
        else {
            gf_PS_RoomGreetingSolarCore();
        }
    }
    else if (auto09C60A44_val == libVCST_ge_Rooms_StoryRoomBridge) {
        gf_CheckforMissionScreenStart();
        if ((libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Sucessful) == true) && (libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Simulation) == false) && (gv_lookedAtShipConsole == false) && (libVoiC_gf_SpearofAdunHasUnusedTech() == true) && (gf_EnteringFromStoryRoom(true) == true) && ((libVoiC_gf_SpearofAdunNewSystemReminderCheck() == true) || (libVoiC_gf_LastSuccessfulMission() == "PUlnar01") || ((libVoiC_gf_StoryScenePlayed("CoreUlnar03Post") == false) && (libVoiC_gf_LastSuccessfulMission() == "PUlnar03"))) && (libVCST_gf_ClickableInRoom("Smith", libVCST_ge_Rooms_StoryRoomBridge) == false)) {
            ConversationDataRun("pPrompt_SolarCoreVisit", PlayerGroupAll(), c_conversationSkipNone, false);
            gv_lookedAtShipConsole = true;
        }
        else if ((libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Sucessful) == true) && (libVoiC_gf_LastMissionConditionCheck(libVoiC_ge_MissionCondition_Simulation) == false) && (gv_lookedAtArmyConsole == false) && (gv_warCouncilPromptGiven == false) && (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) != "PUlnar02") && (gf_EnteringFromStoryRoom(true) == true) && ((libVoiC_gf_NumberOfUnupgradedArmyCategories() >= 1) || (libVCST_gf_ClickableInRoom("Smith", libVCST_ge_Rooms_StoryRoomBridge) == true))) {
            if ((libVoiC_gf_NumberOfUnupgradedArmyCategories() >= 2)) {
                UserDataSetInt("WriterStates", "MultipleArmyUnitsUnassigned", "Value", 1, 1);
            }
            else {
            }
            ConversationDataRun("pPrompt_WarCouncilVisit", PlayerGroupAll(), c_conversationSkipNone, false);
            UserDataSetInt("WriterStates", "MultipleArmyUnitsUnassigned", "Value", 1, 0);
            gv_lookedAtArmyConsole = true;
            gv_warCouncilPromptGiven = true;
        }
        else if (true) {
            gf_PS_RoomGreetingBridge();
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomEntered_Init () {
    gt_RoomEntered = TriggerCreate("gt_RoomEntered_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Moving To Room
//--------------------------------------------------------------------------------------------------
bool gt_MovingToRoom_Func (bool testConds, bool runActions) {
    int autoE3A42469_val;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE3A42469_val = libVCST_gf_NextRoom();
    if (autoE3A42469_val == libVCST_ge_Rooms_StoryRoomTravelScreen) {
        if ((libVoiC_gf_MissionStatusAge("PUlnar01", libVoiC_ge_MissionStatus_Available) == 1)) {
            libVCST_gf_PlayStorymodeScene("UlnarTravel", true);
        }
        else {
        }
    }
    else if (autoE3A42469_val == libVCST_ge_Rooms_StoryRoomWarCouncil) {
        if ((libVoiC_gf_StoryScenePlayed("PreserverIntro") == false)) {
            gv_firstWarCouncilVisit = true;
        }
        else {
            gv_firstWarCouncilVisit = false;
        }
        libVCST_gf_PlayStorymodeScene("PreserverIntro", true);
    }
    else if (autoE3A42469_val == libVCST_ge_Rooms_StoryRoomShip) {
        if ((libVoiC_gf_StoryScenePlayed("ShipRoomIntro") == false)) {
            gv_firstSolarCoreVisit = true;
        }
        else {
            gv_firstSolarCoreVisit = false;
        }
        libVCST_gf_PlayStorymodeScene("ShipRoomIntro", true);
        if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Completed) == true) && (libVoiC_gf_StoryScenePlayed("CoreUlnar03Post") == false)) {
            libVCST_gf_PlayStorymodeScene("CoreUlnar03Post", true);
        }
        else {
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovingToRoom_Init () {
    gt_MovingToRoom = TriggerCreate("gt_MovingToRoom_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starmap Clicked
//--------------------------------------------------------------------------------------------------
bool gt_StarmapClicked_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideStoryUI(false);
    libVCST_gf_SetBackgroundScreenShake(false);
    ActorCreate(null, "UI_pSetClick_CelestialArray", null, null, null);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("Starmap")), c_animNameDefault, "Stand Work", c_animFlagNonLooping, c_animTimeDefault);
    CutsceneGoToBookmark(libVCST_gf_CurrentRoomCutscene(), "StarmapZoomSTART");
    CutscenePlay(libVCST_gf_CurrentRoomCutscene());
    libVCST_gf_ShowHideUnitAbs(false, gv_uNITBridgeSet08);
    libVCST_gf_ShowHideUnitAbs(true, gv_uNITBridgeSet09);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_uNITBridgeSet09), c_animNameDefault, "Kill", c_animFlagNonLooping, c_animTimeDefault);
    libVoiC_gf_CinematicFade(false, 1.4, Color(0.00, 0.00, 0.00), true);
    libVoiC_gf_CinematicFade(true, 0.0, Color(0.00, 0.00, 0.00), true);
    if ((libVoiC_gf_MissionAvailableOnPlanet(libVoiC_gf_CurrentLocation()) == true)) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
    }
    else {
        if ((libVoiC_gf_LastSuccessfulMission() == "PUlnar03")) {
            libVCST_gf_PlayStorymodeScene("UlnarComplete", true);
        }
        else {
        }
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomTravelScreen);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StarmapClicked_Init () {
    gt_StarmapClicked = TriggerCreate("gt_StarmapClicked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ArmyConsole Clicked
//--------------------------------------------------------------------------------------------------
bool gt_ArmyConsoleClicked_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideStoryUI(false);
    ActorCreate(null, "UI_pSetClick_ArmyConsole", null, null, null);
    CutsceneGoToBookmark(libVCST_gf_CurrentRoomCutscene(), "TableClickStart");
    libVoiC_gf_CinematicFade(false, 1.2, Color(0.00, 0.00, 0.00), true);
    libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomArmyUpgrade);
    gv_lookedAtArmyConsole = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArmyConsoleClicked_Init () {
    gt_ArmyConsoleClicked = TriggerCreate("gt_ArmyConsoleClicked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ShipConsole Clicked
//--------------------------------------------------------------------------------------------------
bool gt_ShipConsoleClicked_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideStoryUI(false);
    CutsceneGoToBookmark(libVCST_gf_CurrentRoomCutscene(), "ClickStart");
    ActorCreate(null, "UI_pSetClick_SolarCoreInterface", null, null, null);
    libVoiC_gf_CinematicFade(false, 1.4, Color(0.00, 0.00, 0.00), true);
    libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomShipUpgrade);
    libVoiC_gf_CinematicFade(true, 0.3, Color(0.00, 0.00, 0.00), true);
    gv_lookedAtShipConsole = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShipConsoleClicked_Init () {
    gt_ShipConsoleClicked = TriggerCreate("gt_ShipConsoleClicked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Archives Clicked
//--------------------------------------------------------------------------------------------------
bool gt_ArchivesClicked_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/910E1E27"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArchivesClicked_Init () {
    gt_ArchivesClicked = TriggerCreate("gt_ArchivesClicked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pylon Clicked
//--------------------------------------------------------------------------------------------------
bool gt_PylonClicked_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libVCST_gf_CurrentRoom() == libVCST_ge_Rooms_StoryRoomBridge))) {
            return false;
        }

        if (!((libVCST_gf_CurrentStoryActivity() == libVCST_ge_StoryActivities_ViewingRoom))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_pylonActivated == true)) {
        gv_pylonActivated = false;
        CutsceneRemoveGlobalFilter("Pylon");
        CutsceneRemoveGlobalFilter("Special");
        SoundPlayForPlayer(SoundLink("VoidSMPylonDeactivate", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    }
    else {
        gv_pylonClicks += 1;
        gv_pylonActivated = true;
        CutsceneAddGlobalFilter("Pylon");
        if ((gv_pylonClicks > 1) && (RandomInt(gv_pylonClicks, 20) == 20)) {
            gv_pylonClicks = 1;
            CutsceneAddGlobalFilter("Special");
            SoundPlayForPlayer(SoundLink("VoidSMPylonActivate2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
            TextExpressionSetToken("Param/Expression/35E7C92D", "A", ConversationDataStateText("StoryModeText|SpecialText2", "Description"));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/35E7C92D"));
        }
        else {
            SoundPlayForPlayer(SoundLink("VoidSMPylonActivate", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        }
    }
    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PylonClicked_Init () {
    gt_PylonClicked = TriggerCreate("gt_PylonClicked_Func");
    TriggerAddEventUnitClick(gt_PylonClicked, UnitRefFromVariable("gv_uNITBridgeSet03"), c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Greeting Ends
//--------------------------------------------------------------------------------------------------
bool gt_GreetingEnds_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((ConversationDataActiveLine() != gv_roomGreetingActiveLine))) {
            return false;
        }

        if (!((gv_roomGreetingActiveSpeaker != null))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_TurnFidgetStatusForClickableOnOff(gv_roomGreetingActiveSpeaker, false);
    libVCST_gf_TurnAlternateStatusForClickableOnOff(gv_roomGreetingActiveSpeaker, false);
    gv_roomGreetingActiveSpeaker = null;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GreetingEnds_Init () {
    gt_GreetingEnds = TriggerCreate("gt_GreetingEnds_Func");
    TriggerEnable(gt_GreetingEnds, false);
    TriggerAddEventTimePeriodic(gt_GreetingEnds, 0.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug_PlayGreeting
//--------------------------------------------------------------------------------------------------
bool gt_Debug_PlayGreeting_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_debugRoomGreetingMustPlay = true;
    if ((libVCST_gf_CurrentRoom() == libVCST_ge_Rooms_StoryRoomBridge)) {
        gf_PS_RoomGreetingBridge();
    }
    else if ((libVCST_gf_CurrentRoom() == libVCST_ge_Rooms_StoryRoomWarCouncil)) {
        gf_PS_RoomGreetingWarCouncil();
    }
    else if ((libVCST_gf_CurrentRoom() == libVCST_ge_Rooms_StoryRoomShip)) {
        gf_PS_RoomGreetingSolarCore();
    }
    gv_debugRoomGreetingMustPlay = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Debug_PlayGreeting_Init () {
    gt_Debug_PlayGreeting = TriggerCreate("gt_Debug_PlayGreeting_Func");
    TriggerAddEventChatMessage(gt_Debug_PlayGreeting, c_playerAny, "greetme", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Unit Rooms
//--------------------------------------------------------------------------------------------------
bool gt_UpdateUnitRooms_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_UpdateUnitRoomsClickables, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UpdateUnitRooms_Init () {
    gt_UpdateUnitRooms = TriggerCreate("gt_UpdateUnitRooms_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Unit Rooms - Clickables
//--------------------------------------------------------------------------------------------------
bool gt_UpdateUnitRoomsClickables_Func (bool testConds, bool runActions) {
    int autoFBE30DB1_ai;
    int autoFBE30DB1_ae;

    // Variable Declarations
    string lv_indexClickable;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoFBE30DB1_ai = 1;
    autoFBE30DB1_ae = UserDataInstanceCount("Clickable")+1;
    while (autoFBE30DB1_ai < autoFBE30DB1_ae) {
        lv_indexClickable = UserDataInstance("Clickable", autoFBE30DB1_ai);
        libVCST_gf_ClickableRemoveFromAllRooms(lv_indexClickable);
        autoFBE30DB1_ai = autoFBE30DB1_ai+1;
    }
    if ((libVCST_gf_ClickableUnit("Artanis") == null)) {
        libVCST_gf_CreateClickable("Artanis", "SMX2ProtossArtanis", libVCST_gf_StoryModeDefaultPosition());
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Available) == false)) {
        libVCST_gf_AddRemoveClickableFromRoom(true, "Artanis", libVCST_ge_Rooms_StoryRoomBridge);
        libVCST_gf_AddRemoveClickableFromRoom(true, "Artanis", libVCST_ge_Rooms_StoryRoomWarCouncil);
        libVCST_gf_AddRemoveClickableFromRoom(true, "Artanis", libVCST_ge_Rooms_StoryRoomShip);
    }
    else {
    }
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Artanis"));
    if ((libVCST_gf_ClickableUnit("Preserver") == null)) {
        if ((libVoiC_gf_MissionAvailableOnPlanet("AiurB") == true)) {
            libVCST_gf_CreateClickable("Preserver", "SMX2ProtossRohanaNoBraids", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
            libVCST_gf_CreateClickable("Preserver", "SMX2ProtossRohana", libVCST_gf_StoryModeDefaultPosition());
        }
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Available) == false)) {
        libVCST_gf_AddRemoveClickableFromRoom(true, "Preserver", libVCST_ge_Rooms_StoryRoomWarCouncil);
    }
    else {
    }
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Preserver"));
    if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Available) == true)) {
        if ((libVCST_gf_ClickableUnit("AmonPreserver") == null)) {
            libVCST_gf_CreateClickable("AmonPreserver", "SMX2ProtossRohannaPossessed", libVCST_gf_StoryModeDefaultPosition());
            libVCST_gf_ClickableSetType("AmonPreserver", libVCST_ge_ClickableType_Conversation);
        }
        else {
        }
        gf_UpdatePossessedRohanaState();
        libVCST_gf_AddRemoveClickableFromRoom(true, "AmonPreserver", libVCST_ge_Rooms_StoryRoomWarCouncil);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("AmonPreserver"));
    }
    else {
    }
    if ((libVCST_gf_ClickableUnit("Smith") == null)) {
        if ((libVCST_gf_RoomIsUnlocked(libVCST_ge_Rooms_StoryRoomShip) == true)) {
            libVCST_gf_CreateClickable("Smith", "SMX2ProtossSmith", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
            libVCST_gf_CreateClickable("Smith", "SMX2ProtossSmithNoMechBraids", libVCST_gf_StoryModeDefaultPosition());
        }
    }
    else {
    }
    if ((libVCST_gf_RoomIsUnlocked(libVCST_ge_Rooms_StoryRoomShip) == true)) {
        libVCST_gf_AddRemoveClickableFromRoom(true, "Smith", libVCST_ge_Rooms_StoryRoomShip);
    }
    else {
        libVCST_gf_AddRemoveClickableFromRoom(true, "Smith", libVCST_ge_Rooms_StoryRoomBridge);
    }
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Smith"));
    if ((libVoiC_gf_MissionStatusCheck("PShakuras01", libVoiC_ge_MissionStatus_Completed) == true)) {
        if ((libVCST_gf_ClickableUnit("DTLeader") == null)) {
            libVCST_gf_CreateClickable("DTLeader", "SMX2ProtossVorazun", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
        }
        if ((libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PUlnar03")) {
            libVCST_gf_AddRemoveClickableFromRoom(true, "DTLeader", libVCST_ge_Rooms_StoryRoomWarCouncil);
            libVCST_gf_AddRemoveClickableFromRoom(true, "DTLeader", libVCST_ge_Rooms_StoryRoomShip);
        }
        else {
        }
        if ((libVoiC_gf_MissionStatusCheck("PUlnar03", libVoiC_ge_MissionStatus_Completed) == true)) {
            libVCST_gf_AddRemoveClickableFromRoom(true, "DTLeader", libVCST_ge_Rooms_StoryRoomWarCouncil);
        }
        else {
            libVCST_gf_AddRemoveClickableFromRoom(true, "DTLeader", libVCST_ge_Rooms_StoryRoomBridge);
        }
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("DTLeader"));
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PPurifier01", libVoiC_ge_MissionStatus_Completed) == true)) {
        if ((libVCST_gf_ClickableUnit("ProtossAI") == null)) {
            libVCST_gf_CreateClickable("ProtossAI", "SMX2ProtossFenixMech", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
        }
        libVCST_gf_AddRemoveClickableFromRoom(true, "ProtossAI", libVCST_ge_Rooms_StoryRoomShip);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("ProtossAI"));
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PUlnar02", libVoiC_ge_MissionStatus_Completed) == true)) {
        if ((libVCST_gf_ClickableUnit("TaldarimHero") == null)) {
            libVCST_gf_CreateClickable("TaldarimHero", "SMX2ProtossAlarak", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
        }
        libVCST_gf_AddRemoveClickableFromRoom(true, "TaldarimHero", libVCST_ge_Rooms_StoryRoomBridge);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("TaldarimHero"));
    }
    else {
    }
    if ((libVoiC_gf_MissionStatusCheck("PKorhal02", libVoiC_ge_MissionStatus_Completed) == true)) {
        if (((libVCST_gf_ClickableUnit("XelNagaKeystone") == null) || ((libVCST_gf_ClickableUnit("XelNagaKeystone") != null) && (libVoiC_gf_CurrentLocation() != "Taldarim") && (libVoiC_gf_LastSuccessfulMission() == "PTaldarim02")))) {
            libVCST_gf_CreateClickable("XelNagaKeystone", "SMX2_ShipRoomSet03", libVCST_gf_StoryModeDefaultPosition());
        }
        else {
        }
        if (((libVoiC_gf_CurrentLocation() == "Taldarim") || (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PUlnar03"))) {
            libVCST_gf_CreateClickable("XelNagaKeystone", "SMX2_XelNaga_Artifact_Powerup", libVCST_gf_StoryModeDefaultPosition());
        }
        else if (((libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PAiur04") || (libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()) == "PAiur05"))) {
            libVCST_gf_CreateClickable("XelNagaKeystone", "SMX2_XelNaga_Artifact_Possessed_Closed", libVCST_gf_StoryModeDefaultPosition());
        }
        libVCST_gf_AddRemoveClickableFromRoom(true, "XelNagaKeystone", libVCST_ge_Rooms_StoryRoomShip);
        libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("XelNagaKeystone"));
    }
    else {
    }
    libVCST_gf_AddRemoveClickableFromRoom(true, "Starmap", libVCST_ge_Rooms_StoryRoomBridge);
    libVCST_gf_AddRemoveClickableFromRoom(true, "ArmyConsole", libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_AddRemoveClickableFromRoom(true, "ShipConsole", libVCST_ge_Rooms_StoryRoomShip);
    libVCST_gf_AddRemoveClickableFromRoom(true, "AiurConsole", libVCST_ge_Rooms_StoryRoomAiur);
    if ((ConversationDataCanRun("Convo_Communicator", false) == true)) {
        libVCST_gf_AddRemoveClickableFromRoom(true, "BridgeConsole", libVCST_ge_Rooms_StoryRoomBridge);
        libVCST_gf_ClickableSetEnabled("BridgeConsole", true);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UpdateUnitRoomsClickables_Init () {
    gt_UpdateUnitRoomsClickables = TriggerCreate("gt_UpdateUnitRoomsClickables_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mission - Launch
//--------------------------------------------------------------------------------------------------
bool gt_MissionLaunch_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomVoid);
    if ((libVCST_gf_IsInArchives() == false)) {
        gf_StorymodeBriefing(libVCST_gf_NextAvailableMission(libVoiC_gf_CurrentLocation()));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MissionLaunch_Init () {
    gt_MissionLaunch = TriggerCreate("gt_MissionLaunch_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Travel - Arrival
//--------------------------------------------------------------------------------------------------
bool gt_TravelArrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    TriggerExecute(gt_UpdateUnitRooms, true, false);
    TriggerExecute(gt_ScenesPlayArrival, true, true);
    if ((libVoiC_gf_CurrentLocation() == "Moebius") && (libVCST_gf_NextAvailableMission("Moebius") == "PMoebius01")) {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomMissionScreen);
    }
    else {
        libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomBridge);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TravelArrival_Init () {
    gt_TravelArrival = TriggerCreate("gt_TravelArrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Communicator Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoCommunicatorPre_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorCreate(null, "UI_pSetClick_SolarCoreInterface", null, null, null);
    libVCST_gf_ShowHideUnitAbs(false, libVCST_gf_ClickableUnit("Smith"));
    libVCST_gf_ShowHideUnitAbs(false, libVCST_gf_ClickableUnit("Preserver"));
    libVCST_gf_ShowHideUnitAbs(false, libVCST_gf_ClickableUnit("BridgeConsole"));
    libVCST_gf_DisplayBackground(libVCST_ge_Rooms_StoryRoomBridge);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoCommunicatorPre_Init () {
    gt_ConvoCommunicatorPre = TriggerCreate("gt_ConvoCommunicatorPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Communicator Bookmark Fired
//--------------------------------------------------------------------------------------------------
bool gt_ConvoCommunicatorBookmarkFired_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_communicatorReady = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoCommunicatorBookmarkFired_Init () {
    gt_ConvoCommunicatorBookmarkFired = TriggerCreate("gt_ConvoCommunicatorBookmarkFired_Func");
    TriggerAddEventCutsceneBookmarkFired(gt_ConvoCommunicatorBookmarkFired, c_cutsceneNone, "Pause Forever");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Communicator Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoCommunicatorPost_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Smith"));
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Preserver"));
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("BridgeConsole"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoCommunicatorPost_Init () {
    gt_ConvoCommunicatorPost = TriggerCreate("gt_ConvoCommunicatorPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Communicator Line
//--------------------------------------------------------------------------------------------------
bool gt_ConvoCommunicatorLine_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_SkipNextConversationCamera();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoCommunicatorLine_Init () {
    gt_ConvoCommunicatorLine = TriggerCreate("gt_ConvoCommunicatorLine_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Karax Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoKaraxPre_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoKaraxPre_Init () {
    gt_ConvoKaraxPre = TriggerCreate("gt_ConvoKaraxPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Karax Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoKaraxPost_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoKaraxPost_Init () {
    gt_ConvoKaraxPost = TriggerCreate("gt_ConvoKaraxPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Rohanna Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoRohannaPre_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideUnitAbs(false, libVCST_gf_ClickableUnit("DTLeader"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoRohannaPre_Init () {
    gt_ConvoRohannaPre = TriggerCreate("gt_ConvoRohannaPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Rohanna Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoRohannaPost_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("DTLeader"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoRohannaPost_Init () {
    gt_ConvoRohannaPost = TriggerCreate("gt_ConvoRohannaPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Alarak Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoAlarakPre_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoAlarakPre_Init () {
    gt_ConvoAlarakPre = TriggerCreate("gt_ConvoAlarakPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Alarak Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoAlarakPost_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoAlarakPost_Init () {
    gt_ConvoAlarakPost = TriggerCreate("gt_ConvoAlarakPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Fenix Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoFenixPre_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoFenixPre_Init () {
    gt_ConvoFenixPre = TriggerCreate("gt_ConvoFenixPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Fenix Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoFenixPost_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoFenixPost_Init () {
    gt_ConvoFenixPost = TriggerCreate("gt_ConvoFenixPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Vorazun Pre
//--------------------------------------------------------------------------------------------------
bool gt_ConvoVorazunPre_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoVorazunPre_Init () {
    gt_ConvoVorazunPre = TriggerCreate("gt_ConvoVorazunPre_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Convo Vorazun Post
//--------------------------------------------------------------------------------------------------
bool gt_ConvoVorazunPost_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConvoVorazunPost_Init () {
    gt_ConvoVorazunPost = TriggerCreate("gt_ConvoVorazunPost_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Play Storymode Entry
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPlayStorymodeEntry_Func (bool testConds, bool runActions) {
    string auto1A49526C_val;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libVoiC_gf_LastMap() == null)) {
        return true;
    }
    else {
    }
    if (((libVoiC_gf_LastMapConditionCheck(libVoiC_ge_MissionCondition_Sucessful) == false) || (libVoiC_gf_PC_CampaignMapTypeCheck(libVoiC_gf_LastMap(), c_mapKindMission) == false) || (libVoiC_gf_LastMapConditionCheck(libVoiC_ge_MissionCondition_Simulation) == true))) {
        return true;
    }
    else {
    }
    auto1A49526C_val = libVoiC_gf_LastSuccessfulMission();
    if (auto1A49526C_val == "PAiur01") {
        libVCST_gf_PlayStorymodeScene("Aiur01Debrief", false);
    }
    else if (auto1A49526C_val == "PAiur02") {
        libVCST_gf_PlayStorymodeScene("Aiur02Debrief", false);
    }
    else if (auto1A49526C_val == "PAiur03") {
        if ((libVoiC_gf_CurrentLocation() == "Shakuras")) {
            libVCST_gf_PlayStorymodeScene("ShakurasTravel", false);
        }
        else if ((libVoiC_gf_CurrentLocation() == "Korhal")) {
            libVCST_gf_PlayStorymodeScene("KorhalTravel", false);
        }
    }
    else if (auto1A49526C_val == "PShakuras01") {
        libVCST_gf_PlayStorymodeScene("Shakuras01Debrief", false);
    }
    else if (auto1A49526C_val == "PShakuras02") {
    }
    else if (auto1A49526C_val == "PKorhal01") {
        libVCST_gf_PlayStorymodeScene("Korhal01Debrief", false);
    }
    else if (auto1A49526C_val == "PKorhal02") {
        libVCST_gf_PlayStorymodeScene("Korhal02Debrief", false);
    }
    else if (auto1A49526C_val == "PPurifier01") {
        libVCST_gf_PlayStorymodeScene("Purifier01Debrief", false);
    }
    else if (auto1A49526C_val == "PUlnar01") {
    }
    else if (auto1A49526C_val == "PUlnar02") {
        libVCST_gf_PlayStorymodeScene("Ulnar02Debrief", false);
    }
    else if (auto1A49526C_val == "PUlnar03") {
        libVCST_gf_PlayStorymodeScene("Ulnar03Debrief", false);
    }
    else if (auto1A49526C_val == "PTaldarim01") {
        libVCST_gf_PlayStorymodeScene("Taldarim01Debrief", false);
    }
    else if (auto1A49526C_val == "PTaldarim02") {
        libVCST_gf_PlayStorymodeScene("Taldarim02Debrief", false);
        if ((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) == 16)) {
            libVCST_gf_PlayStorymodeScene("AiurUnlock", false);
        }
        else {
        }
    }
    else if (auto1A49526C_val == "PMoebius01") {
        libVCST_gf_PlayStorymodeScene("Moebius01Debrief", false);
        if ((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) == 16)) {
            libVCST_gf_PlayStorymodeScene("AiurUnlock", false);
        }
        else {
        }
    }
    else if (auto1A49526C_val == "PPurifier02") {
    }
    else if (auto1A49526C_val == "PPurifier03") {
        libVCST_gf_PlayStorymodeScene("Purifier03Debrief", false);
        if ((libVoiC_gf_NumberOfMissions(libVoiC_ge_MissionCountOptions_Completed) == 16)) {
            libVCST_gf_PlayStorymodeScene("AiurUnlock", false);
        }
        else {
        }
    }
    else if (auto1A49526C_val == "PAiur04") {
    }
    else if (auto1A49526C_val == "PAiur05") {
    }
    else if (auto1A49526C_val == "PAiur06") {
        libVCST_gf_PlayStorymodeScene("Liberation", false);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPlayStorymodeEntry_Init () {
    gt_ScenesPlayStorymodeEntry = TriggerCreate("gt_ScenesPlayStorymodeEntry_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Play Departure
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPlayDeparture_Func (bool testConds, bool runActions) {
    string auto99E8C618_val;

    // Actions
    if (!runActions) {
        return true;
    }

    auto99E8C618_val = (libVoiC_gf_CampaignEventParameter(libVoiC_ge_PC_Event_StoryTravelDeparture, 1));
    if (auto99E8C618_val == "PurifierA") {
    }
    else if (auto99E8C618_val == "PurifierB") {
    }
    else if (auto99E8C618_val == "Ulnar") {
    }
    else if (auto99E8C618_val == "Korhal") {
    }
    else if (auto99E8C618_val == "Shakuras") {
    }
    else if (auto99E8C618_val == "AiurB") {
    }
    else if (auto99E8C618_val == "Moebius") {
    }
    else if (auto99E8C618_val == "Taldarim") {
    }
    else {
    }
    TriggerExecute(gt_UpdateUnitRoomsClickables, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPlayDeparture_Init () {
    gt_ScenesPlayDeparture = TriggerCreate("gt_ScenesPlayDeparture_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Play Arrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPlayArrival_Func (bool testConds, bool runActions) {
    string auto1F662D4A_val;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1F662D4A_val = libVoiC_gf_CurrentLocation();
    if (auto1F662D4A_val == "PurifierA") {
        libVCST_gf_PlayStorymodeScene("Purifier01Travel", false);
    }
    else if (auto1F662D4A_val == "PurifierB") {
        libVCST_gf_PlayStorymodeScene("Purifier02Arrival", false);
    }
    else if (auto1F662D4A_val == "Ulnar") {
        libVCST_gf_PlayStorymodeScene("UlnarArrival", false);
    }
    else if (auto1F662D4A_val == "Korhal") {
        libVCST_gf_PlayStorymodeScene("KorhalTravel", false);
    }
    else if (auto1F662D4A_val == "Shakuras") {
        libVCST_gf_PlayStorymodeScene("ShakurasTravel", false);
    }
    else if (auto1F662D4A_val == "AiurB") {
        libVCST_gf_PlayStorymodeScene("Aiur04Briefing", false);
    }
    else if (auto1F662D4A_val == "Moebius") {
        libVCST_gf_PlayStorymodeScene("MoebiusArrival", false);
    }
    else if (auto1F662D4A_val == "Taldarim") {
        libVCST_gf_PlayStorymodeScene("TaldarimTravel", false);
    }
    else {
    }
    TriggerExecute(gt_UpdateUnitRoomsClickables, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPlayArrival_Init () {
    gt_ScenesPlayArrival = TriggerCreate("gt_ScenesPlayArrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - CampaignIntro
//--------------------------------------------------------------------------------------------------
bool gt_ScenesCampaignIntro_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("CampaignIntro", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesCampaignIntro_Init () {
    gt_ScenesCampaignIntro = TriggerCreate("gt_ScenesCampaignIntro_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Discord
//--------------------------------------------------------------------------------------------------
bool gt_ScenesDiscord_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_relativeItem;

    // Variable Initialization
    lv_relativeItem = c_invalidDialogControlId;

    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("AiurIntro", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesDiscord_Init () {
    gt_ScenesDiscord = TriggerCreate("gt_ScenesDiscord_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Protoss02
//--------------------------------------------------------------------------------------------------
bool gt_ScenesProtoss02_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("Protoss02", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesProtoss02_Init () {
    gt_ScenesProtoss02 = TriggerCreate("gt_ScenesProtoss02_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("Aiur01Debrief", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur01Debrief_Init () {
    gt_ScenesAiur01Debrief = TriggerCreate("gt_ScenesAiur01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur02Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur02Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("Aiur02Debrief", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur02Debrief_Init () {
    gt_ScenesAiur02Debrief = TriggerCreate("gt_ScenesAiur02Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur03Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur03Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_AiurComplete", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur03Debrief_Init () {
    gt_ScenesAiur03Debrief = TriggerCreate("gt_ScenesAiur03Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - PreserverIntro
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPreserverIntro_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_DisplayBackground(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_AddRemoveClickableFromRoom(true, "Smith", libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_CinematicFade(true, 0.0, Color(0.00, 0.00, 0.00), true);
    libVCST_gf_PlayScriptedConversation("pCutscene_PreserverIntro", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    UISetCursorVisible(PlayerGroupAll(), true);
    libVCST_gf_HideBackground(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_AddRemoveClickableFromRoom(false, "Smith", libVCST_ge_Rooms_StoryRoomVoid);
    TriggerExecute(gt_UpdateUnitRoomsClickables, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPreserverIntro_Init () {
    gt_ScenesPreserverIntro = TriggerCreate("gt_ScenesPreserverIntro_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - ShipRoomIntro
//--------------------------------------------------------------------------------------------------
bool gt_ScenesShipRoomIntro_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_DisplayBackground(libVCST_ge_Rooms_StoryRoomShip);
    libVoiC_gf_CinematicFade(true, 0.0, Color(0.00, 0.00, 0.00), true);
    libVCST_gf_PlayScriptedConversation("pCutscene_ShipIntro", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesShipRoomIntro_Init () {
    gt_ScenesShipRoomIntro = TriggerCreate("gt_ScenesShipRoomIntro_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - CoreUlnar03Post
//--------------------------------------------------------------------------------------------------
bool gt_ScenesCoreUlnar03Post_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    if ((libVoiC_gf_CurrentLocation() == "Taldarim")) {
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(libVCST_gf_ClickableUnit("XelNagaKeystone")), "::Baseline", "Stand", c_animFlagPlayForever, 0.0);
    }
    else {
    }
    libVCST_gf_PlayScriptedConversation("pCutscene_CoreUlnar03Post", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesCoreUlnar03Post_Init () {
    gt_ScenesCoreUlnar03Post = TriggerCreate("gt_ScenesCoreUlnar03Post_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - KorhalEnd
//--------------------------------------------------------------------------------------------------
bool gt_ScenesKorhalEnd_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("KorhalEnd", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesKorhalEnd_Init () {
    gt_ScenesKorhalEnd = TriggerCreate("gt_ScenesKorhalEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - KorhalTravel
//--------------------------------------------------------------------------------------------------
bool gt_ScenesKorhalTravel_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_KorhalArrival", c_conversationSkipSimple, "BridgeConsole", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesKorhalTravel_Init () {
    gt_ScenesKorhalTravel = TriggerCreate("gt_ScenesKorhalTravel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Korhal01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesKorhal01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Korhal01Post", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesKorhal01Debrief_Init () {
    gt_ScenesKorhal01Debrief = TriggerCreate("gt_ScenesKorhal01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Korhal02Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesKorhal02Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_DisplayBackground(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_PlayScriptedConversation("pCutscene_Korhal02Post", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    libVCST_gf_HideBackground(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVoiC_gf_DisplayTimestamp("Korhal02DebriefEnd", true);
    if ((libVoiC_gf_StoryScenePlayed("ShipRoomIntro") == true)) {
        libVCST_gf_StoryCutsceneFade(true, 0.5, false);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesKorhal02Debrief_Init () {
    gt_ScenesKorhal02Debrief = TriggerCreate("gt_ScenesKorhal02Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - ShakurasTravel
//--------------------------------------------------------------------------------------------------
bool gt_ScenesShakurasTravel_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_AddRemoveClickableFromRoom(true, "Smith", libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_ShowHideUnitAbs(false, libVCST_gf_ClickableUnit("Smith"));
    libVCST_gf_PlayScriptedConversation("pCutscene_ShakurasArrival", c_conversationSkipSimple, "BridgeConsole", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    libVCST_gf_ShowHideUnitAbs(true, libVCST_gf_ClickableUnit("Smith"));
    libVCST_gf_AddRemoveClickableFromRoom(false, "Smith", libVCST_ge_Rooms_StoryRoomVoid);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesShakurasTravel_Init () {
    gt_ScenesShakurasTravel = TriggerCreate("gt_ScenesShakurasTravel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Shakuras01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesShakuras01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Shakuras01Post", c_conversationSkipSimple, "DTLeader", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesShakuras01Debrief_Init () {
    gt_ScenesShakuras01Debrief = TriggerCreate("gt_ScenesShakuras01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Shakuras02Briefing
//--------------------------------------------------------------------------------------------------
bool gt_ScenesShakuras02Briefing_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Shakuras02Before", c_conversationSkipSimple, "DTLeader", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesShakuras02Briefing_Init () {
    gt_ScenesShakuras02Briefing = TriggerCreate("gt_ScenesShakuras02Briefing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - ShakurasEnd
//--------------------------------------------------------------------------------------------------
bool gt_ScenesShakurasEnd_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("ShakurasEnd", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesShakurasEnd_Init () {
    gt_ScenesShakurasEnd = TriggerCreate("gt_ScenesShakurasEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Purifier01Arrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPurifier01Arrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BookmarkPurifier01ArrivalTimestampA, true);
    TriggerEnable(gt_BookmarkPurifier01ArrivalTimestampB, true);
    TriggerEnable(TriggerGetCurrent(), false);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    if ((libVoiC_gf_MissionStatusCheck("PKorhal02", libVoiC_ge_MissionStatus_Completed) == true)) {
        CutsceneAddGlobalFilter("Capsule");
    }
    else {
    }
    libVCST_gf_PlayScriptedConversation("pCutscene_PurifierArrival", c_conversationSkipSimple, "BridgeConsole", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    CutsceneRemoveGlobalFilter("Capsule");
    libVoiC_gf_HaltTimestamp();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPurifier01Arrival_Init () {
    gt_ScenesPurifier01Arrival = TriggerCreate("gt_ScenesPurifier01Arrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - Purifier01Arrival TimestampA
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkPurifier01ArrivalTimestampA_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("Purifier01ArrivalA", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkPurifier01ArrivalTimestampA_Init () {
    gt_BookmarkPurifier01ArrivalTimestampA = TriggerCreate("gt_BookmarkPurifier01ArrivalTimestampA_Func");
    TriggerEnable(gt_BookmarkPurifier01ArrivalTimestampA, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkPurifier01ArrivalTimestampA, c_cutsceneNone, "Timestamp A");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - Purifier01Arrival TimestampB
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkPurifier01ArrivalTimestampB_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("Purifier01ArrivalB", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkPurifier01ArrivalTimestampB_Init () {
    gt_BookmarkPurifier01ArrivalTimestampB = TriggerCreate("gt_BookmarkPurifier01ArrivalTimestampB_Func");
    TriggerEnable(gt_BookmarkPurifier01ArrivalTimestampB, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkPurifier01ArrivalTimestampB, c_cutsceneNone, "Timestamp B");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Purifier01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPurifier01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Purifier01Post", c_conversationSkipSimple, "ProtossAI", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPurifier01Debrief_Init () {
    gt_ScenesPurifier01Debrief = TriggerCreate("gt_ScenesPurifier01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - UlnarArrival Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkUlnarArrivalTimestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("UlnarArrival", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkUlnarArrivalTimestamp_Init () {
    gt_BookmarkUlnarArrivalTimestamp = TriggerCreate("gt_BookmarkUlnarArrivalTimestamp_Func");
    TriggerEnable(gt_BookmarkUlnarArrivalTimestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkUlnarArrivalTimestamp, c_cutsceneNone, "Timestamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - KerriganIntro
//--------------------------------------------------------------------------------------------------
bool gt_ScenesKerriganIntro_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("KerriganIntro", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesKerriganIntro_Init () {
    gt_ScenesKerriganIntro = TriggerCreate("gt_ScenesKerriganIntro_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Protoss06 - Entombed
//--------------------------------------------------------------------------------------------------
bool gt_ScenesProtoss06Entombed_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("Protoss06", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesProtoss06Entombed_Init () {
    gt_ScenesProtoss06Entombed = TriggerCreate("gt_ScenesProtoss06Entombed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - UlnarArrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnarArrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BookmarkUlnarArrivalTimestamp, true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_UlnarArrival", c_conversationSkipSimple, "Artanis", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    TriggerEnable(gt_BookmarkUlnarArrivalTimestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnarArrival_Init () {
    gt_ScenesUlnarArrival = TriggerCreate("gt_ScenesUlnarArrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - UlnarTravel
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnarTravel_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetCursorVisible(PlayerGroupAll(), false);
    libVoiC_gf_DisplayTimestamp("UlnarUnlock", true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_UlnarTravel", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    UISetCursorVisible(PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnarTravel_Init () {
    gt_ScenesUlnarTravel = TriggerCreate("gt_ScenesUlnarTravel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Ulnar02Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnar02Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Ulnar02Post", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnar02Debrief_Init () {
    gt_ScenesUlnar02Debrief = TriggerCreate("gt_ScenesUlnar02Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Ulnar03Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnar03Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Ulnar03Post", c_conversationSkipSimple, "Artanis", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    libVoiC_gf_HaltTimestamp();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnar03Debrief_Init () {
    gt_ScenesUlnar03Debrief = TriggerCreate("gt_ScenesUlnar03Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - UlnarComplete
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnarComplete_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetCursorVisible(PlayerGroupAll(), false);
    libVoiC_gf_DisplayTimestamp("UlnarComplete", true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_UlnarComplete", c_conversationSkipSimple, "Artanis", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    UISetCursorVisible(PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnarComplete_Init () {
    gt_ScenesUlnarComplete = TriggerCreate("gt_ScenesUlnarComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - RohanaUlnar03
//--------------------------------------------------------------------------------------------------
bool gt_ScenesRohanaUlnar03_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_AddRemoveUnitForRoom(true, gv_uNITWarCouncilSet02Possessed, libVCST_ge_Rooms_StoryRoomVoid);
    libNtve_gf_ShowHideUnit(gv_uNITWarCouncilSet02Possessed, false);
    libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_DisplayBackground(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_PlayScriptedConversation("pCutscene_RohanaUlnar03", c_conversationSkipSimple, "DTLeader", libVCST_ge_PS_FadeStyle_FadeOutOnSkip, null);
    gf_UpdatePossessedRohanaState();
    libVCST_gf_EnterRoom(libVCST_ge_Rooms_StoryRoomWarCouncil);
    libVCST_gf_AddRemoveUnitForRoom(false, gv_uNITWarCouncilSet02Possessed, libVCST_ge_Rooms_StoryRoomVoid);
    CutsceneFade(true, 0.2, Color(0,0,0), 100.0, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesRohanaUlnar03_Init () {
    gt_ScenesRohanaUlnar03 = TriggerCreate("gt_ScenesRohanaUlnar03_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Ulnar03MissionEnd
//--------------------------------------------------------------------------------------------------
bool gt_ScenesUlnar03MissionEnd_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    TriggerEnable(gt_BookmarkUlnar03MissionEndTimestamp, true);
    libVoiC_gf_PlayCinematic("Ulnar03MissionEnd", false);
    TriggerEnable(gt_BookmarkUlnar03MissionEndTimestamp, false);
    libVoiC_gf_HaltTimestamp();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesUlnar03MissionEnd_Init () {
    gt_ScenesUlnar03MissionEnd = TriggerCreate("gt_ScenesUlnar03MissionEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - Ulnar03MissionEnd Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkUlnar03MissionEndTimestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("Ulnar03MissionEnd", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkUlnar03MissionEndTimestamp_Init () {
    gt_BookmarkUlnar03MissionEndTimestamp = TriggerCreate("gt_BookmarkUlnar03MissionEndTimestamp_Func");
    TriggerEnable(gt_BookmarkUlnar03MissionEndTimestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkUlnar03MissionEndTimestamp, c_cutsceneNone, "Timestamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - TaldarimArrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesTaldarimArrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BookmarkTaldarimArrivalTimestamp, true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_TaldarimArrival", c_conversationSkipSimple, "TaldarimHero", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    TriggerEnable(gt_BookmarkTaldarimArrivalTimestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesTaldarimArrival_Init () {
    gt_ScenesTaldarimArrival = TriggerCreate("gt_ScenesTaldarimArrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - TaldarimArrival Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkTaldarimArrivalTimestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("TaldarimArrival", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkTaldarimArrivalTimestamp_Init () {
    gt_BookmarkTaldarimArrivalTimestamp = TriggerCreate("gt_BookmarkTaldarimArrivalTimestamp_Func");
    TriggerEnable(gt_BookmarkTaldarimArrivalTimestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkTaldarimArrivalTimestamp, c_cutsceneNone, "Timestamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Taldarim01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesTaldarim01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Taldarim02Before", c_conversationSkipSimple, "TaldarimHero", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesTaldarim01Debrief_Init () {
    gt_ScenesTaldarim01Debrief = TriggerCreate("gt_ScenesTaldarim01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Taldarim02Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesTaldarim02Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Taldarim03Post", c_conversationSkipSimple, "TaldarimHero", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesTaldarim02Debrief_Init () {
    gt_ScenesTaldarim02Debrief = TriggerCreate("gt_ScenesTaldarim02Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Purifier Arc 2 Arrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPurifierArc2Arrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BookmarkPurifierArc2ArrivalTimestamp, true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_PurifierArc2Arrival", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    TriggerEnable(gt_BookmarkPurifierArc2ArrivalTimestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPurifierArc2Arrival_Init () {
    gt_ScenesPurifierArc2Arrival = TriggerCreate("gt_ScenesPurifierArc2Arrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - PurifierArc2Arrival Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkPurifierArc2ArrivalTimestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("Purifier02Arrival", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkPurifierArc2ArrivalTimestamp_Init () {
    gt_BookmarkPurifierArc2ArrivalTimestamp = TriggerCreate("gt_BookmarkPurifierArc2ArrivalTimestamp_Func");
    TriggerEnable(gt_BookmarkPurifierArc2ArrivalTimestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkPurifierArc2ArrivalTimestamp, c_cutsceneNone, "Timestamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Purifier03MissionEnd
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPurifier03MissionEnd_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("Purifier03MissionEnd", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPurifier03MissionEnd_Init () {
    gt_ScenesPurifier03MissionEnd = TriggerCreate("gt_ScenesPurifier03MissionEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Purifier03 Debriefing
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPurifier03Debriefing_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Purifier03Post", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPurifier03Debriefing_Init () {
    gt_ScenesPurifier03Debriefing = TriggerCreate("gt_ScenesPurifier03Debriefing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MoebiusArrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMoebiusArrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_ShadowArrival", c_conversationSkipSimple, "BridgeConsole", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMoebiusArrival_Init () {
    gt_ScenesMoebiusArrival = TriggerCreate("gt_ScenesMoebiusArrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bookmark - MoebiusArrival Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_BookmarkMoebiusArrivalTimestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVoiC_gf_DisplayTimestamp("MoebiusArrival", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BookmarkMoebiusArrivalTimestamp_Init () {
    gt_BookmarkMoebiusArrivalTimestamp = TriggerCreate("gt_BookmarkMoebiusArrivalTimestamp_Func");
    TriggerEnable(gt_BookmarkMoebiusArrivalTimestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_BookmarkMoebiusArrivalTimestamp, c_cutsceneNone, "Timestamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Moebius01Debrief
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMoebius01Debrief_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Shadow02Post", c_conversationSkipSimple, "Smith", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter | libVCST_ge_PS_FadeStyle_FadeOutAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMoebius01Debrief_Init () {
    gt_ScenesMoebius01Debrief = TriggerCreate("gt_ScenesMoebius01Debrief_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - AiurUnlocks
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiurUnlocks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetCursorVisible(PlayerGroupAll(), false);
    libVoiC_gf_DisplayTimestamp("AiurUnlock", true);
    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_AiurUnlock", c_conversationSkipSimple, "BridgeConsole", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    UISetCursorVisible(PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiurUnlocks_Init () {
    gt_ScenesAiurUnlocks = TriggerCreate("gt_ScenesAiurUnlocks_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur04Briefing
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur04Briefing_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Aiur04Before", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur04Briefing_Init () {
    gt_ScenesAiur04Briefing = TriggerCreate("gt_ScenesAiur04Briefing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur05Briefing
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur05Briefing_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Aiur05Before", c_conversationSkipSimple, "Artanis", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur05Briefing_Init () {
    gt_ScenesAiur05Briefing = TriggerCreate("gt_ScenesAiur05Briefing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Aiur06Briefing
//--------------------------------------------------------------------------------------------------
bool gt_ScenesAiur06Briefing_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVCST_gf_PlayScriptedConversation("pCutscene_Aiur06Before", c_conversationSkipSimple, "Preserver", libVCST_ge_PS_FadeStyle_FadeOutOnSkip | libVCST_ge_PS_FadeStyle_FadeInAfter, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesAiur06Briefing_Init () {
    gt_ScenesAiur06Briefing = TriggerCreate("gt_ScenesAiur06Briefing_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Liberation
//--------------------------------------------------------------------------------------------------
bool gt_ScenesLiberation_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("Liberation", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesLiberation_Init () {
    gt_ScenesLiberation = TriggerCreate("gt_ScenesLiberation_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Protoss08
//--------------------------------------------------------------------------------------------------
bool gt_ScenesProtoss08_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("XelNagaKerrigan", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesProtoss08_Init () {
    gt_ScenesProtoss08 = TriggerCreate("gt_ScenesProtoss08_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Protoss09
//--------------------------------------------------------------------------------------------------
bool gt_ScenesProtoss09_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVoiC_gf_PlayCinematic("EpilogueEnd", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesProtoss09_Init () {
    gt_ScenesProtoss09 = TriggerCreate("gt_ScenesProtoss09_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - ProtossStinger
//--------------------------------------------------------------------------------------------------
bool gt_ScenesProtossStinger_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("ProtossStinger", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesProtossStinger_Init () {
    gt_ScenesProtossStinger = TriggerCreate("gt_ScenesProtossStinger_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Epilogue01Arrival
//--------------------------------------------------------------------------------------------------
bool gt_ScenesEpilogue01Arrival_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("EpilogueStart", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesEpilogue01Arrival_Init () {
    gt_ScenesEpilogue01Arrival = TriggerCreate("gt_ScenesEpilogue01Arrival_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Epilogue01MissionStart
//--------------------------------------------------------------------------------------------------
bool gt_ScenesEpilogue01MissionStart_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("Epilogue01MissionStart", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesEpilogue01MissionStart_Init () {
    gt_ScenesEpilogue01MissionStart = TriggerCreate("gt_ScenesEpilogue01MissionStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Epilogue01Post
//--------------------------------------------------------------------------------------------------
bool gt_ScenesEpilogue01Post_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libVCST_gf_ChangeRoom(libVCST_ge_Rooms_StoryRoomVoid);
    libVoiC_gf_PlayCinematic("Epilogue01Debrief", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesEpilogue01Post_Init () {
    gt_ScenesEpilogue01Post = TriggerCreate("gt_ScenesEpilogue01Post_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEBUG - Hide Set
//--------------------------------------------------------------------------------------------------
bool gt_DEBUGHideSet_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitUnloadModel(gv_uNITBridgeSet00);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DEBUGHideSet_Init () {
    gt_DEBUGHideSet = TriggerCreate("gt_DEBUGHideSet_Func");
    TriggerAddEventChatMessage(gt_DEBUGHideSet, c_playerAny, "dbghideset", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEBUG - Release Cam
//--------------------------------------------------------------------------------------------------
bool gt_DEBUGReleaseCam_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(1, CameraInfoDefault(), 0.0, -1, 10.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DEBUGReleaseCam_Init () {
    gt_DEBUGReleaseCam = TriggerCreate("gt_DEBUGReleaseCam_Func");
    TriggerAddEventChatMessage(gt_DEBUGReleaseCam, c_playerAny, "dbgnocam", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEBUG - Army room visited?
//--------------------------------------------------------------------------------------------------
bool gt_DEBUGArmyroomvisited_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/AE9FE1F9", "A", IntToText(UserDataGetInt("StoryStates", "Army Room Visited", "Value", 1)));
    TriggerDebugOutput(1, TextExpressionAssemble("Param/Expression/AE9FE1F9"), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DEBUGArmyroomvisited_Init () {
    gt_DEBUGArmyroomvisited = TriggerCreate("gt_DEBUGArmyroomvisited_Func");
    TriggerAddEventChatMessage(gt_DEBUGArmyroomvisited, c_playerAny, "armytest", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_MapInit_Init();
    gt_Init01StoryData_Init();
    gt_Init02Rooms_Init();
    gt_Init02RoomsBridge_Init();
    gt_Init02RoomsWarCouncil_Init();
    gt_Init02RoomsSolarCore_Init();
    gt_Init03Scenes_Init();
    gt_Init04Clickables_Init();
    gt_BeginStorymode_Init();
    gt_RoomPrepareBridge_Init();
    gt_RoomPrepareWarCouncil_Init();
    gt_RoomPrepareSolarCore_Init();
    gt_RoomPrepareVoid_Init();
    gt_RoomViewBridge_Init();
    gt_RoomViewWarCouncil_Init();
    gt_RoomViewSolarCore_Init();
    gt_RoomViewVoid_Init();
    gt_RoomViewStopBridge_Init();
    gt_RoomViewStopWarCouncil_Init();
    gt_RoomViewStopSolarCore_Init();
    gt_RoomViewStopVoid_Init();
    gt_BottomBarClicked_Init();
    gt_RoomEntered_Init();
    gt_MovingToRoom_Init();
    gt_StarmapClicked_Init();
    gt_ArmyConsoleClicked_Init();
    gt_ShipConsoleClicked_Init();
    gt_ArchivesClicked_Init();
    gt_PylonClicked_Init();
    gt_GreetingEnds_Init();
    gt_Debug_PlayGreeting_Init();
    gt_UpdateUnitRooms_Init();
    gt_UpdateUnitRoomsClickables_Init();
    gt_MissionLaunch_Init();
    gt_TravelArrival_Init();
    gt_ConvoCommunicatorPre_Init();
    gt_ConvoCommunicatorBookmarkFired_Init();
    gt_ConvoCommunicatorPost_Init();
    gt_ConvoCommunicatorLine_Init();
    gt_ConvoKaraxPre_Init();
    gt_ConvoKaraxPost_Init();
    gt_ConvoRohannaPre_Init();
    gt_ConvoRohannaPost_Init();
    gt_ConvoAlarakPre_Init();
    gt_ConvoAlarakPost_Init();
    gt_ConvoFenixPre_Init();
    gt_ConvoFenixPost_Init();
    gt_ConvoVorazunPre_Init();
    gt_ConvoVorazunPost_Init();
    gt_ScenesPlayStorymodeEntry_Init();
    gt_ScenesPlayDeparture_Init();
    gt_ScenesPlayArrival_Init();
    gt_ScenesCampaignIntro_Init();
    gt_ScenesDiscord_Init();
    gt_ScenesProtoss02_Init();
    gt_ScenesAiur01Debrief_Init();
    gt_ScenesAiur02Debrief_Init();
    gt_ScenesAiur03Debrief_Init();
    gt_ScenesPreserverIntro_Init();
    gt_ScenesShipRoomIntro_Init();
    gt_ScenesCoreUlnar03Post_Init();
    gt_ScenesKorhalEnd_Init();
    gt_ScenesKorhalTravel_Init();
    gt_ScenesKorhal01Debrief_Init();
    gt_ScenesKorhal02Debrief_Init();
    gt_ScenesShakurasTravel_Init();
    gt_ScenesShakuras01Debrief_Init();
    gt_ScenesShakuras02Briefing_Init();
    gt_ScenesShakurasEnd_Init();
    gt_ScenesPurifier01Arrival_Init();
    gt_BookmarkPurifier01ArrivalTimestampA_Init();
    gt_BookmarkPurifier01ArrivalTimestampB_Init();
    gt_ScenesPurifier01Debrief_Init();
    gt_BookmarkUlnarArrivalTimestamp_Init();
    gt_ScenesKerriganIntro_Init();
    gt_ScenesProtoss06Entombed_Init();
    gt_ScenesUlnarArrival_Init();
    gt_ScenesUlnarTravel_Init();
    gt_ScenesUlnar02Debrief_Init();
    gt_ScenesUlnar03Debrief_Init();
    gt_ScenesUlnarComplete_Init();
    gt_ScenesRohanaUlnar03_Init();
    gt_ScenesUlnar03MissionEnd_Init();
    gt_BookmarkUlnar03MissionEndTimestamp_Init();
    gt_ScenesTaldarimArrival_Init();
    gt_BookmarkTaldarimArrivalTimestamp_Init();
    gt_ScenesTaldarim01Debrief_Init();
    gt_ScenesTaldarim02Debrief_Init();
    gt_ScenesPurifierArc2Arrival_Init();
    gt_BookmarkPurifierArc2ArrivalTimestamp_Init();
    gt_ScenesPurifier03MissionEnd_Init();
    gt_ScenesPurifier03Debriefing_Init();
    gt_ScenesMoebiusArrival_Init();
    gt_BookmarkMoebiusArrivalTimestamp_Init();
    gt_ScenesMoebius01Debrief_Init();
    gt_ScenesAiurUnlocks_Init();
    gt_ScenesAiur04Briefing_Init();
    gt_ScenesAiur05Briefing_Init();
    gt_ScenesAiur06Briefing_Init();
    gt_ScenesLiberation_Init();
    gt_ScenesProtoss08_Init();
    gt_ScenesProtoss09_Init();
    gt_ScenesProtossStinger_Init();
    gt_ScenesEpilogue01Arrival_Init();
    gt_ScenesEpilogue01MissionStart_Init();
    gt_ScenesEpilogue01Post_Init();
    gt_DEBUGHideSet_Init();
    gt_DEBUGReleaseCam_Init();
    gt_DEBUGArmyroomvisited_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
