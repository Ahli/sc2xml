//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: P05 Back Shard
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"

//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] ai99448CFF_defGather;
string[17] ai99448CFF_customData;
wave[17] ai99448CFF_lastWave;

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 1 - BIG WAVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave5_enabled;
wave[17] ai99448CFF_wave5_lastWave;
trigger ai99448CFF_wave5_trigger = null;
int ai99448CFF_wave5_runPlayer;
playergroup ai99448CFF_wave5_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave5_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave5_enabled[init_i] = true;
        ai99448CFF_wave5_lastWave[init_i] = null;
    }

    ai99448CFF_wave5_trigger = TriggerCreate("ai99448CFF_wave5_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave5_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave5_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave5_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave5_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave5_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave5_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave5_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave5_runPlayer;
    playergroup target = ai99448CFF_wave5_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave5_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 360; }
    if (d == 2) { ta = 360; }
    if (d == 3) { ta = 360; }
    if (d == 4) { ta = 360; }
    tg = 0;
    if (d == 1) { tg = 210; }
    if (d == 2) { tg = 210; }
    if (d == 3) { tg = 210; }
    if (d == 4) { tg = 210; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_SendBigWave_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave5_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave5_runPlayer = p;
    ai99448CFF_wave5_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave5_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 2 - INTRO BONUS OBJECTIVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave8_enabled;
wave[17] ai99448CFF_wave8_lastWave;
trigger ai99448CFF_wave8_trigger = null;
int ai99448CFF_wave8_runPlayer;
playergroup ai99448CFF_wave8_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave8_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave8_enabled[init_i] = true;
        ai99448CFF_wave8_lastWave[init_i] = null;
    }

    ai99448CFF_wave8_trigger = TriggerCreate("ai99448CFF_wave8_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave8_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave8_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave8_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave8_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave8_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave8_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave8_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave8_runPlayer;
    playergroup target = ai99448CFF_wave8_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave8_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 165; }
    if (d == 2) { ta = 165; }
    if (d == 3) { ta = 165; }
    if (d == 4) { ta = 165; }
    tg = 0;
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    TriggerExecute(TriggerFind("gt_TransmissionIntroBonusObjectiveQ_Func"), true, false);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave8_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave8_runPlayer = p;
    ai99448CFF_wave8_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave8_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 3 - BIG WAVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave11_enabled;
wave[17] ai99448CFF_wave11_lastWave;
trigger ai99448CFF_wave11_trigger = null;
int ai99448CFF_wave11_runPlayer;
playergroup ai99448CFF_wave11_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave11_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave11_enabled[init_i] = true;
        ai99448CFF_wave11_lastWave[init_i] = null;
    }

    ai99448CFF_wave11_trigger = TriggerCreate("ai99448CFF_wave11_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave11_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave11_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave11_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave11_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave11_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave11_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave11_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave11_runPlayer;
    playergroup target = ai99448CFF_wave11_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave11_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 235; }
    if (d == 2) { ta = 235; }
    if (d == 3) { ta = 235; }
    if (d == 4) { ta = 235; }
    tg = 0;
    if (d == 1) { tg = 210; }
    if (d == 2) { tg = 210; }
    if (d == 3) { tg = 210; }
    if (d == 4) { tg = 210; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_SendBigWave_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave11_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave11_runPlayer = p;
    ai99448CFF_wave11_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave11_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 4 - BIG WAVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave16_enabled;
wave[17] ai99448CFF_wave16_lastWave;
trigger ai99448CFF_wave16_trigger = null;
int ai99448CFF_wave16_runPlayer;
playergroup ai99448CFF_wave16_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave16_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave16_enabled[init_i] = true;
        ai99448CFF_wave16_lastWave[init_i] = null;
    }

    ai99448CFF_wave16_trigger = TriggerCreate("ai99448CFF_wave16_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave16_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave16_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave16_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave16_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave16_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave16_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave16_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave16_runPlayer;
    playergroup target = ai99448CFF_wave16_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave16_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 370; }
    if (d == 2) { ta = 370; }
    if (d == 3) { ta = 370; }
    if (d == 4) { ta = 370; }
    tg = 0;
    if (d == 1) { tg = 210; }
    if (d == 2) { tg = 210; }
    if (d == 3) { tg = 210; }
    if (d == 4) { tg = 210; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_SendBigWave_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave16_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave16_runPlayer = p;
    ai99448CFF_wave16_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave16_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 5 - BIG WAVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave20_enabled;
wave[17] ai99448CFF_wave20_lastWave;
trigger ai99448CFF_wave20_trigger = null;
int ai99448CFF_wave20_runPlayer;
playergroup ai99448CFF_wave20_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave20_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave20_enabled[init_i] = true;
        ai99448CFF_wave20_lastWave[init_i] = null;
    }

    ai99448CFF_wave20_trigger = TriggerCreate("ai99448CFF_wave20_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave20_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave20_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave20_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave20_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave20_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave20_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave20_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave20_runPlayer;
    playergroup target = ai99448CFF_wave20_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave20_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 370; }
    if (d == 2) { ta = 370; }
    if (d == 3) { ta = 370; }
    if (d == 4) { ta = 370; }
    tg = 0;
    if (d == 1) { tg = 210; }
    if (d == 2) { tg = 210; }
    if (d == 3) { tg = 210; }
    if (d == 4) { tg = 210; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_SendBigWave_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave20_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave20_runPlayer = p;
    ai99448CFF_wave20_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave20_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave: Wave 6 - BIG WAVE
//--------------------------------------------------------------------------------------------------
bool[17] ai99448CFF_wave24_enabled;
wave[17] ai99448CFF_wave24_lastWave;
trigger ai99448CFF_wave24_trigger = null;
int ai99448CFF_wave24_runPlayer;
playergroup ai99448CFF_wave24_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave24_init () {
    int init_i;

    for (init_i = 0; init_i <= 16; init_i += 1) {
        ai99448CFF_wave24_enabled[init_i] = true;
        ai99448CFF_wave24_lastWave[init_i] = null;
    }

    ai99448CFF_wave24_trigger = TriggerCreate("ai99448CFF_wave24_runFunc");
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave24_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_wave24_enabled[p] = val;
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave24_isEnabled (int p) {
    if (p < 0 || p >= 16) {
        return false;
    }
    return ai99448CFF_wave24_enabled[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave24_createdWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_wave24_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave24_runFunc (bool c, bool a) {
    int p = ai99448CFF_wave24_runPlayer;
    playergroup target = ai99448CFF_wave24_runTarget;
    int d;
    point gatherPoint = null;
    int ta = 0;
    int tg = 0;
    int ts = 0;
    int tf = 0;
    int td = 0;

    if (p < 0 || p >= 16) {
        return false;
    }
    d = PlayerDifficulty(p);
    if (!ai99448CFF_wave24_enabled[p]) {
        td = 0;
        if (td > 0) {
            Wait(td, c_timeAI);
        }
        return true;
    }

    ai99448CFF_customData[p] = "";

    ta = 0;
    if (d == 1) { ta = 370; }
    if (d == 2) { ta = 370; }
    if (d == 3) { ta = 370; }
    if (d == 4) { ta = 370; }
    tg = 0;
    if (d == 1) { tg = 210; }
    if (d == 2) { tg = 210; }
    if (d == 3) { tg = 210; }
    if (d == 4) { tg = 210; }
    ts = ta;
    if (tg > 0 && tg < ta) {
        Wait(ta - tg, c_timeAI);
        ts = tg;
    }
    TriggerExecute(TriggerFind("gt_SendBigWave_Func"), true, false);
    AIAttackWaveSetTargetPlayer(p, target);

    gatherPoint = ai99448CFF_defGather[p];
    AIAttackWaveSetGatherPoint(p, gatherPoint);

    AIAttackWaveClearWaypoints(p);

    Wait(ts, c_timeAI);
    tf = 0;
    if (tf > 0) {
        Wait(tf, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave24_run (int p, playergroup target, bool wait) {
    ai99448CFF_wave24_runPlayer = p;
    ai99448CFF_wave24_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_wave24_trigger, false, wait);
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave_enable (int w, int p, bool val) {
    if (w == 5) { ai99448CFF_wave5_enable(p, val); }
    if (w == 8) { ai99448CFF_wave8_enable(p, val); }
    if (w == 11) { ai99448CFF_wave11_enable(p, val); }
    if (w == 16) { ai99448CFF_wave16_enable(p, val); }
    if (w == 20) { ai99448CFF_wave20_enable(p, val); }
    if (w == 24) { ai99448CFF_wave24_enable(p, val); }
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_wave_isEnabled (int w, int p) {
    if (w == 5) { return ai99448CFF_wave5_isEnabled(p); }
    if (w == 8) { return ai99448CFF_wave8_isEnabled(p); }
    if (w == 11) { return ai99448CFF_wave11_isEnabled(p); }
    if (w == 16) { return ai99448CFF_wave16_isEnabled(p); }
    if (w == 20) { return ai99448CFF_wave20_isEnabled(p); }
    if (w == 24) { return ai99448CFF_wave24_isEnabled(p); }
    return false;
}

//--------------------------------------------------------------------------------------------------
unitgroup ai99448CFF_wave_createdUnits (int w, int p) {
    return null;
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_wave_createdWave (int w, int p) {
    if (w == 5) { return ai99448CFF_wave5_createdWave(p); }
    if (w == 8) { return ai99448CFF_wave8_createdWave(p); }
    if (w == 11) { return ai99448CFF_wave11_createdWave(p); }
    if (w == 16) { return ai99448CFF_wave16_createdWave(p); }
    if (w == 20) { return ai99448CFF_wave20_createdWave(p); }
    if (w == 24) { return ai99448CFF_wave24_createdWave(p); }
    return null;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_wave_run (int w, int p, playergroup target, bool wait) {
    if (w == 5) { ai99448CFF_wave5_run(p, target, wait); }
    if (w == 8) { ai99448CFF_wave8_run(p, target, wait); }
    if (w == 11) { ai99448CFF_wave11_run(p, target, wait); }
    if (w == 16) { ai99448CFF_wave16_run(p, target, wait); }
    if (w == 20) { ai99448CFF_wave20_run(p, target, wait); }
    if (w == 24) { ai99448CFF_wave24_run(p, target, wait); }
}

//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger ai99448CFF_waves_trigger = null;
int ai99448CFF_waves_runPlayer;
playergroup ai99448CFF_waves_runTarget;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_waves_init () {
    ai99448CFF_waves_trigger = TriggerCreate("ai99448CFF_waves_runFunc");
}

//--------------------------------------------------------------------------------------------------
bool ai99448CFF_waves_runFunc (bool c, bool a) {
    int p = ai99448CFF_waves_runPlayer;
    playergroup target = ai99448CFF_waves_runTarget;

    if (p < 0 || p >= 16) {
        return false;
    }

    ai99448CFF_wave5_run(p, target, true);
    ai99448CFF_wave8_run(p, target, true);
    ai99448CFF_wave11_run(p, target, true);
    ai99448CFF_wave16_run(p, target, true);
    ai99448CFF_wave20_run(p, target, true);
    ai99448CFF_wave24_run(p, target, true);

    while (true) {
        ai99448CFF_wave20_run(p, target, true);
        ai99448CFF_wave24_run(p, target, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_waves_run (int p, playergroup target) {
    ai99448CFF_waves_runPlayer = p;
    ai99448CFF_waves_runTarget = PlayerGroupCopy(target);

    TriggerExecute(ai99448CFF_waves_trigger, false, false);
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }

    ai99448CFF_wave5_enable(p, val);
    ai99448CFF_wave8_enable(p, val);
    ai99448CFF_wave11_enable(p, val);
    ai99448CFF_wave16_enable(p, val);
    ai99448CFF_wave20_enable(p, val);
    ai99448CFF_wave24_enable(p, val);
}

//--------------------------------------------------------------------------------------------------
void ai99448CFF_waves_stop () {
    TriggerStop(ai99448CFF_waves_trigger);

    TriggerStop(ai99448CFF_wave5_trigger);
    TriggerStop(ai99448CFF_wave8_trigger);
    TriggerStop(ai99448CFF_wave11_trigger);
    TriggerStop(ai99448CFF_wave16_trigger);
    TriggerStop(ai99448CFF_wave20_trigger);
    TriggerStop(ai99448CFF_wave24_trigger);
}

//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void ai99448CFF_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai99448CFF_defGather[p] = val;
}

//--------------------------------------------------------------------------------------------------
string ai99448CFF_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_customData[p];
}

//--------------------------------------------------------------------------------------------------
wave ai99448CFF_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai99448CFF_lastWave[p];
}

//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool ai99448CFF_initialized = false;

//--------------------------------------------------------------------------------------------------
void ai99448CFF_start (int p) {
    int init_i;

    if (p < 0 || p >= 16) {
        return;
    }
    if (!ai99448CFF_initialized) {
        ai99448CFF_wave5_init();
        ai99448CFF_wave8_init();
        ai99448CFF_wave11_init();
        ai99448CFF_wave16_init();
        ai99448CFF_wave20_init();
        ai99448CFF_wave24_init();
        ai99448CFF_waves_init();

        for (init_i = 0; init_i <= 16; init_i += 1) {
            ai99448CFF_defGather[init_i] = PointFromId(1256);
        }

        ai99448CFF_initialized = true;
    }

    AICampaignStart(p);
}
