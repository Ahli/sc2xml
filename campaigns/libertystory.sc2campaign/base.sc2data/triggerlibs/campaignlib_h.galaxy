include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library: Campaign
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCamp_ge_UnitSelectionStoreOption_ClearUnitSelection = 0;
const int libCamp_ge_UnitSelectionStoreOption_DoNotClearUnitSelection = 1;
const int libCamp_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libCamp_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libCamp_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libCamp_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libCamp_ge_CampaignMessageType_MissionFailed = 0;
const int libCamp_ge_CampaignMessageType_Hint = 1;
const int libCamp_ge_CampaignMessageType_SimpleHint = 2;
const int libCamp_ge_CampaignMessageType_Secret = 3;
const int libCamp_ge_CampaignMessageType_Warning = 4;
const int libCamp_ge_CampaignMessageType_NewUnitAcquired = 5;
const int libCamp_ge_CampaignMessageType_NewUnitAvailable = 6;
const int libCamp_ge_CampaignMessageType_NewTechAvailable = 7;
const int libCamp_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libCamp_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libCamp_ge_DropPodRace_Terran = 0;
const int libCamp_ge_DropPodRace_Zerg = 1;
const int libCamp_ge_ChatBubbleColorOption_Text = 0;
const int libCamp_ge_ChatBubbleColorOption_Background = 1;
const int libCamp_ge_GRIDDLG_HV_Horizontal = 0;
const int libCamp_ge_GRIDDLG_HV_Vertical = 1;
const int libCamp_ge_GRIDDLG_HV2_ClientPosition = 0;
const int libCamp_ge_GRIDDLG_HV2_ClientSize = 1;
const int libCamp_ge_GRIDDLG_HV2_NoneClient = 2;
const int libCamp_ge_MapID_MapNone = 0;
const int libCamp_ge_MapID_MapTRaynor01 = 1;
const int libCamp_ge_MapID_MapTRaynor02 = 2;
const int libCamp_ge_MapID_MapTRaynor03 = 3;
const int libCamp_ge_MapID_MapTHanson01 = 4;
const int libCamp_ge_MapID_MapTHanson02 = 5;
const int libCamp_ge_MapID_MapTHanson03A = 6;
const int libCamp_ge_MapID_MapTHanson03B = 7;
const int libCamp_ge_MapID_MapTTosh01 = 8;
const int libCamp_ge_MapID_MapTTosh02 = 9;
const int libCamp_ge_MapID_MapTTosh03A = 10;
const int libCamp_ge_MapID_MapTTosh03B = 11;
const int libCamp_ge_MapID_MapTHorner01 = 12;
const int libCamp_ge_MapID_MapTHorner02 = 13;
const int libCamp_ge_MapID_MapTHorner03 = 14;
const int libCamp_ge_MapID_MapTHorner04 = 15;
const int libCamp_ge_MapID_MapTHorner05S = 16;
const int libCamp_ge_MapID_MapTTychus01 = 17;
const int libCamp_ge_MapID_MapTTychus02 = 18;
const int libCamp_ge_MapID_MapTTychus03 = 19;
const int libCamp_ge_MapID_MapTTychus04 = 20;
const int libCamp_ge_MapID_MapTTychus05 = 21;
const int libCamp_ge_MapID_MapTZeratul01 = 22;
const int libCamp_ge_MapID_MapTZeratul02 = 23;
const int libCamp_ge_MapID_MapTZeratul03 = 24;
const int libCamp_ge_MapID_MapTZeratul04 = 25;
const int libCamp_ge_MapID_MapTValerian01 = 26;
const int libCamp_ge_MapID_MapTValerian02A = 27;
const int libCamp_ge_MapID_MapTValerian02B = 28;
const int libCamp_ge_MapID_MapTValerian03 = 29;
const int libCamp_ge_MapID_MapTSecret01 = 30;
const int libCamp_ge_MapID_MapTStory01 = 31;
const int libCamp_ge_MapID_MapTArcade = 32;
const int libCamp_ge_MapID_MapTSimulator = 33;
const int libCamp_ge_MapID_MapLast = 34;
const int libCamp_ge_MapType_None = 0;
const int libCamp_ge_MapType_Mission = 1;
const int libCamp_ge_MapType_StoryMode = 2;
const int libCamp_ge_MapType_MiniGame = 3;
const int libCamp_ge_MissionStatus_Locked = 0;
const int libCamp_ge_MissionStatus_Available = 1;
const int libCamp_ge_MissionStatus_Completed = 2;
const int libCamp_ge_MissionCountOptions_All = 0;
const int libCamp_ge_MissionCountOptions_Locked = 1;
const int libCamp_ge_MissionCountOptions_Available = 2;
const int libCamp_ge_MissionCountOptions_Completed = 3;
const int libCamp_ge_MissionCondition_Successful = 0;
const int libCamp_ge_MissionCondition_Simulation = 1;
const int libCamp_ge_ContactID_ContactNone = 0;
const int libCamp_ge_ContactID_ContactAdjutant = 1;
const int libCamp_ge_ContactID_ContactAdjutantConfederate = 2;
const int libCamp_ge_ContactID_ContactAmon = 3;
const int libCamp_ge_ContactID_ContactAnnabelle = 4;
const int libCamp_ge_ContactID_ContactArcturusMengsk = 5;
const int libCamp_ge_ContactID_ContactBanshee = 6;
const int libCamp_ge_ContactID_ContactBralik = 7;
const int libCamp_ge_ContactID_ContactBattlecruiser = 8;
const int libCamp_ge_ContactID_ContactBones = 9;
const int libCamp_ge_ContactID_ContactBubba = 10;
const int libCamp_ge_ContactID_ContactCade = 11;
const int libCamp_ge_ContactID_ContactCarrier = 12;
const int libCamp_ge_ContactID_ContactCivilianFemale1 = 13;
const int libCamp_ge_ContactID_ContactCivilianFemale2 = 14;
const int libCamp_ge_ContactID_ContactCivilianMale1 = 15;
const int libCamp_ge_ContactID_ContactCivilianMale2 = 16;
const int libCamp_ge_ContactID_ContactCivilianMale3 = 17;
const int libCamp_ge_ContactID_ContactCivilianMale4 = 18;
const int libCamp_ge_ContactID_ContactCivilianMale5 = 19;
const int libCamp_ge_ContactID_ContactCivilianMale6 = 20;
const int libCamp_ge_ContactID_ContactCooper = 21;
const int libCamp_ge_ContactID_ContactDarkTemplar = 22;
const int libCamp_ge_ContactID_ContactDominionMarine1 = 23;
const int libCamp_ge_ContactID_ContactDominionMarine2 = 24;
const int libCamp_ge_ContactID_ContactDominionMarine3 = 25;
const int libCamp_ge_ContactID_ContactDominionMarine4 = 26;
const int libCamp_ge_ContactID_ContactDominionMarine5 = 27;
const int libCamp_ge_ContactID_ContactDominionMarine6 = 28;
const int libCamp_ge_ContactID_ContactDominionMarine7 = 29;
const int libCamp_ge_ContactID_ContactDominionMarine8 = 30;
const int libCamp_ge_ContactID_ContactDominionMarine9 = 31;
const int libCamp_ge_ContactID_ContactDominionOfficer1 = 32;
const int libCamp_ge_ContactID_ContactDominionOfficer2 = 33;
const int libCamp_ge_ContactID_ContactDominionOfficer3 = 34;
const int libCamp_ge_ContactID_ContactDominionOfficer4 = 35;
const int libCamp_ge_ContactID_ContactDuke = 36;
const int libCamp_ge_ContactID_ContactDutch = 37;
const int libCamp_ge_ContactID_ContactEarl = 38;
const int libCamp_ge_ContactID_ContactExecutor = 39;
const int libCamp_ge_ContactID_ContactFirebat = 40;
const int libCamp_ge_ContactID_ContactGoliathMercenary = 41;
const int libCamp_ge_ContactID_ContactHall = 42;
const int libCamp_ge_ContactID_ContactHan = 43;
const int libCamp_ge_ContactID_ContactHanson = 44;
const int libCamp_ge_ContactID_ContactHellion = 45;
const int libCamp_ge_ContactID_ContactHighTemplar = 46;
const int libCamp_ge_ContactID_ContactHorner = 47;
const int libCamp_ge_ContactID_ContactKerrigan = 48;
const int libCamp_ge_ContactID_ContactMarine = 49;
const int libCamp_ge_ContactID_ContactMedic = 50;
const int libCamp_ge_ContactID_ContactMedivac = 51;
const int libCamp_ge_ContactID_ContactMiraHan = 52;
const int libCamp_ge_ContactID_ContactNarud = 53;
const int libCamp_ge_ContactID_ContactNova = 54;
const int libCamp_ge_ContactID_ContactRaynor = 55;
const int libCamp_ge_ContactID_ContactRaynorMarine = 56;
const int libCamp_ge_ContactID_ContactReaper = 57;
const int libCamp_ge_ContactID_ContactSCV = 58;
const int libCamp_ge_ContactID_ContactSelendis = 59;
const int libCamp_ge_ContactID_ContactSiegeTank = 60;
const int libCamp_ge_ContactID_ContactSwann = 61;
const int libCamp_ge_ContactID_ContactTosh = 62;
const int libCamp_ge_ContactID_ContactTychus = 63;
const int libCamp_ge_ContactID_ContactValerianMengsk = 64;
const int libCamp_ge_ContactID_ContactViking = 65;
const int libCamp_ge_ContactID_ContactWarfield = 66;
const int libCamp_ge_ContactID_ContactZealot = 67;
const int libCamp_ge_ContactID_ContactZeratul = 68;
const int libCamp_ge_ContactID_ContactOrlan = 69;
const int libCamp_ge_StoryMercID_MercNone = 0;
const int libCamp_ge_StoryMercID_MercKelmorianMercenaries = 1;
const int libCamp_ge_StoryMercID_MercDevilDogs = 2;
const int libCamp_ge_StoryMercID_MercHammerSecurities = 3;
const int libCamp_ge_StoryMercID_MercSpartanCompany = 4;
const int libCamp_ge_StoryMercID_MercSiegeBreakers = 5;
const int libCamp_ge_StoryMercID_MercHelsAngels = 6;
const int libCamp_ge_StoryMercID_MercDuskWing = 7;
const int libCamp_ge_StoryMercID_MercDukesRevenge = 8;
const int libCamp_ge_StoryMercID_MercLast = 9;
const int libCamp_ge_StoryMercStatus_Locked = 0;
const int libCamp_ge_StoryMercStatus_Available = 1;
const int libCamp_ge_StoryMercStatus_Purchased = 2;
const int libCamp_ge_StoryMercStatus_New = 3;
const int libCamp_ge_MissionObjective_MissionObjectiveNone = 0;
const int libCamp_ge_MissionObjective_TRaynor01Objective1 = 1;
const int libCamp_ge_MissionObjective_TRaynor01Objective2 = 2;
const int libCamp_ge_MissionObjective_TRaynor02Objective1 = 3;
const int libCamp_ge_MissionObjective_TRaynor02Objective2 = 4;
const int libCamp_ge_MissionObjective_TRaynor03Objective1 = 5;
const int libCamp_ge_MissionObjective_TRaynor03Objective2 = 6;
const int libCamp_ge_MissionObjective_THanson01Objective1 = 7;
const int libCamp_ge_MissionObjective_THanson01Objective2 = 8;
const int libCamp_ge_MissionObjective_THanson01Objective3 = 9;
const int libCamp_ge_MissionObjective_THanson01Objective4 = 10;
const int libCamp_ge_MissionObjective_THanson02Objective1 = 11;
const int libCamp_ge_MissionObjective_THanson02Objective2 = 12;
const int libCamp_ge_MissionObjective_THanson03AObjective1 = 13;
const int libCamp_ge_MissionObjective_THanson03AObjective2 = 14;
const int libCamp_ge_MissionObjective_THanson03AObjective3 = 15;
const int libCamp_ge_MissionObjective_THanson03AObjective4 = 16;
const int libCamp_ge_MissionObjective_THanson03AObjective5 = 17;
const int libCamp_ge_MissionObjective_THanson03BObjective1 = 18;
const int libCamp_ge_MissionObjective_TTosh01Objective1 = 19;
const int libCamp_ge_MissionObjective_TTosh01Objective2 = 20;
const int libCamp_ge_MissionObjective_TTosh01Objective3 = 21;
const int libCamp_ge_MissionObjective_TTosh02Objective1 = 22;
const int libCamp_ge_MissionObjective_TTosh02Objective2 = 23;
const int libCamp_ge_MissionObjective_TTosh02Objective3 = 24;
const int libCamp_ge_MissionObjective_TTosh03AObjective1 = 25;
const int libCamp_ge_MissionObjective_TTosh03AObjective2 = 26;
const int libCamp_ge_MissionObjective_TTosh03AObjective3 = 27;
const int libCamp_ge_MissionObjective_TTosh03AObjective4 = 28;
const int libCamp_ge_MissionObjective_TTosh03BObjective1 = 29;
const int libCamp_ge_MissionObjective_TTosh03BObjective2 = 30;
const int libCamp_ge_MissionObjective_TTosh03BObjective3 = 31;
const int libCamp_ge_MissionObjective_TTosh03BObjective4 = 32;
const int libCamp_ge_MissionObjective_TTosh03BObjective5 = 33;
const int libCamp_ge_MissionObjective_THorner01Objective1 = 34;
const int libCamp_ge_MissionObjective_THorner01Objective2 = 35;
const int libCamp_ge_MissionObjective_THorner01Objective3 = 36;
const int libCamp_ge_MissionObjective_THorner01Objective32 = 37;
const int libCamp_ge_MissionObjective_THorner02Objective1 = 38;
const int libCamp_ge_MissionObjective_THorner02Objective2 = 39;
const int libCamp_ge_MissionObjective_THorner02Objective3 = 40;
const int libCamp_ge_MissionObjective_THorner03Objective1 = 41;
const int libCamp_ge_MissionObjective_THorner03Objective2 = 42;
const int libCamp_ge_MissionObjective_THorner03Objective3 = 43;
const int libCamp_ge_MissionObjective_THorner03Objective4 = 44;
const int libCamp_ge_MissionObjective_THorner03Objective5 = 45;
const int libCamp_ge_MissionObjective_THorner03Objective6 = 46;
const int libCamp_ge_MissionObjective_THorner04Objective1 = 47;
const int libCamp_ge_MissionObjective_THorner04Objective2 = 48;
const int libCamp_ge_MissionObjective_THorner04Objective3 = 49;
const int libCamp_ge_MissionObjective_THorner05Objective1 = 50;
const int libCamp_ge_MissionObjective_THorner05Objective2 = 51;
const int libCamp_ge_MissionObjective_THorner05Objective3 = 52;
const int libCamp_ge_MissionObjective_THorner05Objective4 = 53;
const int libCamp_ge_MissionObjective_THorner05Objective5 = 54;
const int libCamp_ge_MissionObjective_THorner05Objective52 = 55;
const int libCamp_ge_MissionObjective_TTychus01Objective1 = 56;
const int libCamp_ge_MissionObjective_TTychus01Objective2 = 57;
const int libCamp_ge_MissionObjective_TTychus01Objective3 = 58;
const int libCamp_ge_MissionObjective_TTychus02Objective1 = 59;
const int libCamp_ge_MissionObjective_TTychus02Objective2 = 60;
const int libCamp_ge_MissionObjective_TTychus02Objective3 = 61;
const int libCamp_ge_MissionObjective_TTychus02Objective32 = 62;
const int libCamp_ge_MissionObjective_TTychus03Objective1 = 63;
const int libCamp_ge_MissionObjective_TTychus03Objective2 = 64;
const int libCamp_ge_MissionObjective_TTychus03Objective3 = 65;
const int libCamp_ge_MissionObjective_TTychus04Objective1 = 66;
const int libCamp_ge_MissionObjective_TTychus04Objective2 = 67;
const int libCamp_ge_MissionObjective_TTychus04Objective3 = 68;
const int libCamp_ge_MissionObjective_TTychus05Objective1 = 69;
const int libCamp_ge_MissionObjective_TTychus05Objective2 = 70;
const int libCamp_ge_MissionObjective_TTychus05Objective3 = 71;
const int libCamp_ge_MissionObjective_TTychus05Objective4 = 72;
const int libCamp_ge_MissionObjective_TZeratul01Objective1 = 73;
const int libCamp_ge_MissionObjective_TZeratul01Objective2 = 74;
const int libCamp_ge_MissionObjective_TZeratul01Objective3 = 75;
const int libCamp_ge_MissionObjective_TZeratul01EscapetotheVoidSeeker = 76;
const int libCamp_ge_MissionObjective_TZeratul02Objective1 = 77;
const int libCamp_ge_MissionObjective_TZeratul02Objective2 = 78;
const int libCamp_ge_MissionObjective_TZeratul02Objective3 = 79;
const int libCamp_ge_MissionObjective_TZeratul03Objective1 = 80;
const int libCamp_ge_MissionObjective_TZeratul03Objective2 = 81;
const int libCamp_ge_MissionObjective_TZeratul02Objective42 = 82;
const int libCamp_ge_MissionObjective_TZeratul03Objective4 = 83;
const int libCamp_ge_MissionObjective_TZeratul04Objective1 = 84;
const int libCamp_ge_MissionObjective_TZeratul04Objective2 = 85;
const int libCamp_ge_MissionObjective_TZeratul04Objective3 = 86;
const int libCamp_ge_MissionObjective_TValerian01Objective1 = 87;
const int libCamp_ge_MissionObjective_TValerian01Objective2 = 88;
const int libCamp_ge_MissionObjective_TValerian01Objective3 = 89;
const int libCamp_ge_MissionObjective_TValerian01Objective4 = 90;
const int libCamp_ge_MissionObjective_TValerian02AObjective1 = 91;
const int libCamp_ge_MissionObjective_TValerian02AObjective2 = 92;
const int libCamp_ge_MissionObjective_TValerian02BObjective1 = 93;
const int libCamp_ge_MissionObjective_TValerian02BObjective2 = 94;
const int libCamp_ge_MissionObjective_TValerian02BObjective3 = 95;
const int libCamp_ge_MissionObjective_TValerian03Objective1 = 96;
const int libCamp_ge_MissionObjective_MissionObjectiveLast = 97;
const int libCamp_ge_MissionObjectiveState_ObjectiveUndiscovered = 0;
const int libCamp_ge_MissionObjectiveState_ObjectiveAvailable = 1;
const int libCamp_ge_MissionObjectiveState_ObjectiveCompleted = 2;
const int libCamp_ge_StoryResearchID_ResearchNone = 0;
const int libCamp_ge_StoryResearchID_ResearchP11UltraCapacitors = 1;
const int libCamp_ge_StoryResearchID_ResearchP12VanadiumPlating = 2;
const int libCamp_ge_StoryResearchID_ResearchP21OrbitalDepots = 3;
const int libCamp_ge_StoryResearchID_ResearchP22MicroFiltering = 4;
const int libCamp_ge_StoryResearchID_ResearchP31AutomatedRefinery = 5;
const int libCamp_ge_StoryResearchID_ResearchP32CommandCenterReactor = 6;
const int libCamp_ge_StoryResearchID_ResearchP41Raven = 7;
const int libCamp_ge_StoryResearchID_ResearchP42ScienceVessel = 8;
const int libCamp_ge_StoryResearchID_ResearchP51TechReactor = 9;
const int libCamp_ge_StoryResearchID_ResearchP52OrbitalStrike = 10;
const int libCamp_ge_StoryResearchID_ResearchZ11ShrikeTurret = 11;
const int libCamp_ge_StoryResearchID_ResearchZ12FortifiedBunker = 12;
const int libCamp_ge_StoryResearchID_ResearchZ21PlanetaryFortress = 13;
const int libCamp_ge_StoryResearchID_ResearchZ22PerditionTurret = 14;
const int libCamp_ge_StoryResearchID_ResearchZ31Predator = 15;
const int libCamp_ge_StoryResearchID_ResearchZ32Hercules = 16;
const int libCamp_ge_StoryResearchID_ResearchZ41CellularReactors = 17;
const int libCamp_ge_StoryResearchID_ResearchZ42RegenerativeBioSteel = 18;
const int libCamp_ge_StoryResearchID_ResearchZ51HiveMindEmulator = 19;
const int libCamp_ge_StoryResearchID_ResearchZ52SigmaProjector = 20;
const int libCamp_ge_StoryResearchID_ResearchLast = 21;
const int libCamp_ge_StoryResearchCategory_ResearchCategoryNone = 0;
const int libCamp_ge_StoryResearchCategory_ResearchCategoryProtoss = 1;
const int libCamp_ge_StoryResearchCategory_ResearchCategoryZerg = 2;
const int libCamp_ge_StoryResearchObject_ResearchObjectNone = 0;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindProtossRelics = 1;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindProtossRelicContraband = 2;
const int libCamp_ge_StoryResearchObject_ResearchObjectPowertheAbandonedStructure = 3;
const int libCamp_ge_StoryResearchObject_ResearchObjectPowertheObelisks = 4;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindtheProtossPsiElements = 5;
const int libCamp_ge_StoryResearchObject_ResearchObjectVisittheShrines = 6;
const int libCamp_ge_StoryResearchObject_ResearchObjectProtecttheArchive = 7;
const int libCamp_ge_StoryResearchObject_ResearchObjectRescuePrisoners = 8;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindChrysalisDNA = 9;
const int libCamp_ge_StoryResearchObject_ResearchObjectKilltheInfestors = 10;
const int libCamp_ge_StoryResearchObject_ResearchObjectDestroyHatcheries = 11;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindDefilerBoneSamples = 12;
const int libCamp_ge_StoryResearchObject_ResearchObjectFindDevourerTissueSamples = 13;
const int libCamp_ge_StoryResearchObject_ResearchObjectDestroytheSporeCannons = 14;
const int libCamp_ge_StoryResearchObject_ResearchObjectDestroythePreserverPrisons = 15;
const int libCamp_ge_StoryResearchObject_ResearchObjectOvermindTendrils = 16;
const int libCamp_ge_StoryResearchObject_ResearchObjectKill1500Zerg = 17;
const int libCamp_ge_StoryResearchObject_ResearchObjectKilltheBrutalisk = 18;
const int libCamp_ge_StoryResearchState_ResearchStateLocked = 0;
const int libCamp_ge_StoryResearchState_ResearchStateAvailable = 1;
const int libCamp_ge_StoryResearchState_ResearchStatePurchased = 2;
const int libCamp_ge_StoryResearchPointOption_Current = 0;
const int libCamp_ge_StoryResearchPointOption_Earned = 1;
const int libCamp_ge_StoryResearchPointOption_Spent = 2;
const int libCamp_ge_StoryResearchObjectiveTextStyle_Multipart = 0;
const int libCamp_ge_StoryResearchObjectiveTextStyle_Lumpsum = 1;
const int libCamp_ge_RoomPanelButtonState_Locked = 0;
const int libCamp_ge_RoomPanelButtonState_Disable = 1;
const int libCamp_ge_RoomPanelButtonState_Enable = 2;
const int libCamp_ge_SceneID_SceneNone = 0;
const int libCamp_ge_SceneID_SceneTerran01RaynorIntro = 1;
const int libCamp_ge_SceneID_SceneTerran02ArmoryIntro = 2;
const int libCamp_ge_SceneID_SceneTerran03ZeratulsWarning = 3;
const int libCamp_ge_SceneID_SceneTerran04TychusIntro = 4;
const int libCamp_ge_SceneID_SceneTerran05HornerBridgeIntro = 5;
const int libCamp_ge_SceneID_SceneTerran06ValerianIntro = 6;
const int libCamp_ge_SceneID_SceneTerran07BarFight = 7;
const int libCamp_ge_SceneID_SceneTerran08HansonEndA = 8;
const int libCamp_ge_SceneID_SceneTerran09ToshEndA = 9;
const int libCamp_ge_SceneID_SceneTerran10RaynorsDream = 10;
const int libCamp_ge_SceneID_SceneTerran11CharBatltefield = 11;
const int libCamp_ge_SceneID_SceneTerran12HornerVictory = 12;
const int libCamp_ge_SceneID_SceneTerran13HansonEndB = 13;
const int libCamp_ge_SceneID_SceneTerran14ToshEndB = 14;
const int libCamp_ge_SceneID_SceneTerran15KerriganIntro = 15;
const int libCamp_ge_SceneID_SceneTerran16CharIntro = 16;
const int libCamp_ge_SceneID_SceneTerran17CharBattlefieldEnd = 17;
const int libCamp_ge_SceneID_ScenePreRenderedOldRivals = 18;
const int libCamp_ge_SceneID_ScenePreRenderedBetterMarine = 19;
const int libCamp_ge_SceneID_ScenePreRenderedTheDream = 20;
const int libCamp_ge_SceneID_ScenePreRenderedEnd = 21;
const int libCamp_ge_SceneID_SceneLast = 22;
const int libCamp_ge_StoryStateID_StoryStateNone = 0;
const int libCamp_ge_StoryStateID_StoryStateAchievementDisabled = 1;
const int libCamp_ge_StoryStateID_StoryStateArmoryIntroDone = 2;
const int libCamp_ge_StoryStateID_StoryStateCantinaIntroDone = 3;
const int libCamp_ge_StoryStateID_StoryStateLabIntroDone = 4;
const int libCamp_ge_StoryStateID_StoryStateHanson02DebriefingDone = 5;
const int libCamp_ge_StoryStateID_StoryStateValerian01DebriefingDone = 6;
const int libCamp_ge_StoryStateID_StoryStateFirstMissionMercBought = 7;
const int libCamp_ge_StoryStateID_StoryStateFirstMissionLabResearchObjective = 8;
const int libCamp_ge_StoryStateID_StoryStateArmoryOpened = 9;
const int libCamp_ge_StoryStateID_StoryStateArmoryVisited = 10;
const int libCamp_ge_StoryStateID_StoryStateCantinaOpened = 11;
const int libCamp_ge_StoryStateID_StoryStateCantinaVisited = 12;
const int libCamp_ge_StoryStateID_StoryStateLabOpened = 13;
const int libCamp_ge_StoryStateID_StoryStateLabVisited = 14;
const int libCamp_ge_StoryStateID_StoryStateTychusOn = 15;
const int libCamp_ge_StoryStateID_StoryStateHansonOn = 16;
const int libCamp_ge_StoryStateID_StoryStateToshOn = 17;
const int libCamp_ge_StoryStateID_StoryStateSwannOn = 18;
const int libCamp_ge_StoryStateID_StoryStateHornerOn = 19;
const int libCamp_ge_StoryStateID_StoryStateYabarraOn = 20;
const int libCamp_ge_StoryStateID_StoryStateStetmannOn = 21;
const int libCamp_ge_StoryStateID_StoryStateWarfieldOn = 22;
const int libCamp_ge_StoryStateID_StoryStateBattleReportCurrentSelected = 23;
const int libCamp_ge_StoryStateID_StoryStateCharInvasionStarted = 24;
const int libCamp_ge_StoryStateID_StoryStateLabHornerLinePlayed = 25;
const int libCamp_ge_StoryStateID_StoryStateCantinaHornerLinePlayed = 26;
const int libCamp_ge_StoryStateID_StoryStateHorner05sUnlocked = 27;
const int libCamp_ge_StoryStateID_StoryStateResearchCappedNoticeProtoss = 28;
const int libCamp_ge_StoryStateID_StoryStateResearchCappedNoticeZerg = 29;
const int libCamp_ge_StoryStateID_StoryStateLastMissionisZeratul02orZeratul03 = 30;
const int libCamp_ge_StoryStateID_StoryStateLabArtifactCount = 31;
const int libCamp_ge_StoryStateID_StoryStateTipFactoryPlayed = 32;
const int libCamp_ge_StoryStateID_StoryStateTipStarportPlayed = 33;
const int libCamp_ge_StoryStateID_StoryStateTipVisitLabPlayed = 34;
const int libCamp_ge_StoryStateID_StoryStateTipNewProtossResearchPlayed = 35;
const int libCamp_ge_StoryStateID_StoryStateTipNewZergResearchPlayed = 36;
const int libCamp_ge_StoryStateID_StoryStateTipZergCreepPlayed = 37;
const int libCamp_ge_StoryStateID_StoryStateTaurenOutHouseActivated = 38;
const int libCamp_ge_StoryStateID_StoryStateIsStoryTransitionSave = 39;
const int libCamp_ge_StoryStateID_StoryStateLast = 40;
const int libCamp_ge_PlanetID_PlanetNone = 0;
const int libCamp_ge_PlanetID_PlanetAgria = 1;
const int libCamp_ge_PlanetID_PlanetAiur = 2;
const int libCamp_ge_PlanetID_PlanetAntigaPrime = 3;
const int libCamp_ge_PlanetID_PlanetAvernus = 4;
const int libCamp_ge_PlanetID_PlanetBekharRo = 5;
const int libCamp_ge_PlanetID_PlanetBelShir = 6;
const int libCamp_ge_PlanetID_PlanetBountiful = 7;
const int libCamp_ge_PlanetID_PlanetBraken = 8;
const int libCamp_ge_PlanetID_PlanetBraxis = 9;
const int libCamp_ge_PlanetID_PlanetBrontes = 10;
const int libCamp_ge_PlanetID_PlanetCastanar = 11;
const int libCamp_ge_PlanetID_PlanetChar = 12;
const int libCamp_ge_PlanetID_PlanetDeadmansPort = 13;
const int libCamp_ge_PlanetID_PlanetDylar = 14;
const int libCamp_ge_PlanetID_PlanetHalcyon = 15;
const int libCamp_ge_PlanetID_PlanetHaven = 16;
const int libCamp_ge_PlanetID_PlanetHydrax = 17;
const int libCamp_ge_PlanetID_PlanetJotun = 18;
const int libCamp_ge_PlanetID_PlanetKorhal = 19;
const int libCamp_ge_PlanetID_PlanetMarSara = 20;
const int libCamp_ge_PlanetID_PlanetMeinhoff = 21;
const int libCamp_ge_PlanetID_PlanetMonlyth = 22;
const int libCamp_ge_PlanetID_PlanetMoria = 23;
const int libCamp_ge_PlanetID_PlanetNewFolsom = 24;
const int libCamp_ge_PlanetID_PlanetNewSydney = 25;
const int libCamp_ge_PlanetID_PlanetOctarus = 26;
const int libCamp_ge_PlanetID_PlanetPridewater = 27;
const int libCamp_ge_PlanetID_PlanetPU72516J = 28;
const int libCamp_ge_PlanetID_PlanetRedstone = 29;
const int libCamp_ge_PlanetID_PlanetUlnar = 30;
const int libCamp_ge_PlanetID_PlanetSigmaQuadrant = 31;
const int libCamp_ge_PlanetID_PlanetTarsonis = 32;
const int libCamp_ge_PlanetID_PlanetTorus = 33;
const int libCamp_ge_PlanetID_PlanetTyphon = 34;
const int libCamp_ge_PlanetID_PlanetTyrador = 35;
const int libCamp_ge_PlanetID_PlanetUlaan = 36;
const int libCamp_ge_PlanetID_PlanetUmoja = 37;
const int libCamp_ge_PlanetID_PlanetValhalla = 38;
const int libCamp_ge_PlanetID_PlanetVyctorV = 39;
const int libCamp_ge_PlanetID_PlanetWotan = 40;
const int libCamp_ge_PlanetID_PlanetXil = 41;
const int libCamp_ge_PlanetID_PlanetZhakul = 42;
const int libCamp_ge_PlanetID_PlanetLast = 43;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryNone = 0;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryBase = 1;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryInfantry = 2;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryVehicles = 3;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryStarships = 4;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryDominion = 5;
const int libCamp_ge_StoryTechCategory_StoryTechCategoryLast = 6;
const int libCamp_ge_StoryTechGroup_StoryTechGroupNone = 0;
const int libCamp_ge_StoryTechGroup_StoryTechGroupBaseBunker = 1;
const int libCamp_ge_StoryTechGroup_StoryTechGroupBaseMissileTurret = 2;
const int libCamp_ge_StoryTechGroup_StoryTechGroupBaseSCV = 3;
const int libCamp_ge_StoryTechGroup_StoryTechGroupBaseCommandCenter = 4;
const int libCamp_ge_StoryTechGroup_StoryTechGroupInfantryMarine = 5;
const int libCamp_ge_StoryTechGroup_StoryTechGroupInfantryMedic = 6;
const int libCamp_ge_StoryTechGroup_StoryTechGroupInfantryFirebat = 7;
const int libCamp_ge_StoryTechGroup_StoryTechGroupInfantryMarauder = 8;
const int libCamp_ge_StoryTechGroup_StoryTechGroupInfantryReaper = 9;
const int libCamp_ge_StoryTechGroup_StoryTechGroupVehiclesHellion = 10;
const int libCamp_ge_StoryTechGroup_StoryTechGroupVehiclesVulture = 11;
const int libCamp_ge_StoryTechGroup_StoryTechGroupVehiclesGoliath = 12;
const int libCamp_ge_StoryTechGroup_StoryTechGroupVehiclesDiamondback = 13;
const int libCamp_ge_StoryTechGroup_StoryTechGroupVehiclesSiegeTank = 14;
const int libCamp_ge_StoryTechGroup_StoryTechGroupStarshipsMedivac = 15;
const int libCamp_ge_StoryTechGroup_StoryTechGroupStarshipsWrath = 16;
const int libCamp_ge_StoryTechGroup_StoryTechGroupStarshipsViking = 17;
const int libCamp_ge_StoryTechGroup_StoryTechGroupStarshipsBanshee = 18;
const int libCamp_ge_StoryTechGroup_StoryTechGroupStarshipsBattlecruiser = 19;
const int libCamp_ge_StoryTechGroup_StoryTechGroupDominionGhost = 20;
const int libCamp_ge_StoryTechGroup_StoryTechGroupDominionSpectre = 21;
const int libCamp_ge_StoryTechGroup_StoryTechGroupDominionThor = 22;
const int libCamp_ge_StoryTechGroup_StoryTechGroupxxxReactor = 23;
const int libCamp_ge_StoryTechGroup_StoryTechGroupxxxSensorTower = 24;
const int libCamp_ge_StoryTechGroup_StoryTechGroupLast = 25;
const int libCamp_ge_StoryTech_StoryTechNone = 0;
const int libCamp_ge_StoryTech_StoryTechSCVDualFusionWelder = 1;
const int libCamp_ge_StoryTech_StoryTechSCVAdvancedConstruction = 2;
const int libCamp_ge_StoryTech_StoryTechBunkerProjectileAccelerators = 3;
const int libCamp_ge_StoryTech_StoryTechBunkerNeosteelFrame = 4;
const int libCamp_ge_StoryTech_StoryTechMissileTurretReinforcedSuperstructure = 5;
const int libCamp_ge_StoryTech_StoryTechMissileTurretHellstormMissileBatteries = 6;
const int libCamp_ge_StoryTech_StoryTechCOCEOrbitalRelay = 7;
const int libCamp_ge_StoryTech_StoryTechCOCEFireSuppressionSystems = 8;
const int libCamp_ge_StoryTech_StoryTechMarineStimpacks = 9;
const int libCamp_ge_StoryTech_StoryTechMarineCombatShield = 10;
const int libCamp_ge_StoryTech_StoryTechMedicAdvancedMedicTraining = 11;
const int libCamp_ge_StoryTech_StoryTechMedicStabilizerMedPacks = 12;
const int libCamp_ge_StoryTech_StoryTechFirebatBearclawNozzles = 13;
const int libCamp_ge_StoryTech_StoryTechFirebatJuggernautPlating = 14;
const int libCamp_ge_StoryTech_StoryTechMarauderJackhammerConcussionGrenade = 15;
const int libCamp_ge_StoryTech_StoryTechMarauderAblativeScales = 16;
const int libCamp_ge_StoryTech_StoryTechReaperD8Charges = 17;
const int libCamp_ge_StoryTech_StoryTechReaperU238Rounds = 18;
const int libCamp_ge_StoryTech_StoryTechHellionInfernalPreIgniter = 19;
const int libCamp_ge_StoryTech_StoryTechHellionTwinLinkedFlameThrowers = 20;
const int libCamp_ge_StoryTech_StoryTechGoliathStabilizers = 21;
const int libCamp_ge_StoryTech_StoryTechGoliathAresClassTargetingSystem = 22;
const int libCamp_ge_StoryTech_StoryTechVultureCerberusMines = 23;
const int libCamp_ge_StoryTech_StoryTechVultureNanoConstructors = 24;
const int libCamp_ge_StoryTech_StoryTechDiamondbackTriLithiumPowerCells = 25;
const int libCamp_ge_StoryTech_StoryTechDiamondbackHyperfluxor = 26;
const int libCamp_ge_StoryTech_StoryTechSiegeTankMaelstromRounds = 27;
const int libCamp_ge_StoryTech_StoryTechSiegeTankShapedBlast = 28;
const int libCamp_ge_StoryTech_StoryTechMedivacRapidDeployment = 29;
const int libCamp_ge_StoryTech_StoryTechMedivacAdvancedHealingAI = 30;
const int libCamp_ge_StoryTech_StoryTechWraithSingularityAnchor = 31;
const int libCamp_ge_StoryTech_StoryTechWraithCloakDistortionField = 32;
const int libCamp_ge_StoryTech_StoryTechVikingAresClassTargetingSystem = 33;
const int libCamp_ge_StoryTech_StoryTechVikingRipwaveMissiles = 34;
const int libCamp_ge_StoryTech_StoryTechBansheeCrossSpectrumDampeners = 35;
const int libCamp_ge_StoryTech_StoryTechBansheeShockwaveMissilePattern = 36;
const int libCamp_ge_StoryTech_StoryTechBattlecruiserMissilePods = 37;
const int libCamp_ge_StoryTech_StoryTechBattlecruiserDefensiveMatrix = 38;
const int libCamp_ge_StoryTech_StoryTechGhostOcularImplants = 39;
const int libCamp_ge_StoryTech_StoryTechGhostPermaCloak = 40;
const int libCamp_ge_StoryTech_StoryTechSpectreUltrasonicPulse = 41;
const int libCamp_ge_StoryTech_StoryTechSpectrePermaCloak = 42;
const int libCamp_ge_StoryTech_StoryTechThor330mmBarrageCannons = 43;
const int libCamp_ge_StoryTech_StoryTechThorImmortalityProtocol = 44;
const int libCamp_ge_StoryTech_StoryTechLast = 45;
const int libCamp_ge_StoryTechStates_TechLocked = 0;
const int libCamp_ge_StoryTechStates_TechAvailable = 1;
const int libCamp_ge_StoryTechStates_TechPurchased = 2;
const int libCamp_ge_StoryTechStates_TechUnavailable = 3;
const int libCamp_ge_StoryTechStates_TechNew = 4;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyCampaignDifficulty = 0;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyRoomStates = 1;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageMarSara = 2;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageHyperion = 3;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageLab = 4;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageCantina = 5;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageArmory = 6;
const int libCamp_ge_TS_BankStoryMiscKey_TStoryBankMiscKeyLoadingImageChar = 7;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyIsSimulation = 0;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyIsVictoryPlayAgain = 1;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastMap = 2;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastMapSuccess = 3;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastMission = 4;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastMissionSuccess = 5;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastMissionSimulation = 6;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyLastSuccessfulMission = 7;
const int libCamp_ge_TS_BankStoryStageKey_TStoryBankStoryStageKeyCredits = 8;
const int libCamp_ge_TS_BankSavingType_Normal = 0;
const int libCamp_ge_TS_BankSavingType_CreateMissionBank = 1;
const int libCamp_ge_TS_BankSavingType_SaveSimulation = 2;
const int libCamp_ge_TS_StoryRoom_RoomNone = 0;
const int libCamp_ge_TS_StoryRoom_RoomMarSaraBar = 1;
const int libCamp_ge_TS_StoryRoom_RoomBridge = 2;
const int libCamp_ge_TS_StoryRoom_RoomCantina = 3;
const int libCamp_ge_TS_StoryRoom_RoomLab = 4;
const int libCamp_ge_TS_StoryRoom_RoomArmory = 5;
const int libCamp_ge_TS_StoryRoom_RoomChar = 6;
const int libCamp_ge_TS_StoryRoom_RoomCorridor = 7;
const int libCamp_ge_TS_StoryRoom_RoomFlagship = 8;
const int libCamp_ge_TS_StoryRoom_RoomObservatory = 9;
const int libCamp_ge_TS_StoryActor_ActorNone = 0;
const int libCamp_ge_TS_StoryActor_ActorAdjutant = 1;
const int libCamp_ge_TS_StoryActor_ActorAdjutantConfederate = 2;
const int libCamp_ge_TS_StoryActor_ActorAnnabelle = 3;
const int libCamp_ge_TS_StoryActor_ActorBralik = 4;
const int libCamp_ge_TS_StoryActor_ActorCade = 5;
const int libCamp_ge_TS_StoryActor_ActorCooperBarTender = 6;
const int libCamp_ge_TS_StoryActor_ActorStetmann = 7;
const int libCamp_ge_TS_StoryActor_ActorEarl = 8;
const int libCamp_ge_TS_StoryActor_ActorHanson = 9;
const int libCamp_ge_TS_StoryActor_ActorHall = 10;
const int libCamp_ge_TS_StoryActor_ActorHillMercContact = 11;
const int libCamp_ge_TS_StoryActor_ActorHorner = 12;
const int libCamp_ge_TS_StoryActor_ActorKachinsky = 13;
const int libCamp_ge_TS_StoryActor_ActorRaynor = 14;
const int libCamp_ge_TS_StoryActor_ActorRaynorMarine = 15;
const int libCamp_ge_TS_StoryActor_ActorSwann = 16;
const int libCamp_ge_TS_StoryActor_ActorTosh = 17;
const int libCamp_ge_TS_StoryActor_ActorTychus = 18;
const int libCamp_ge_TS_StoryActor_ActorValerian = 19;
const int libCamp_ge_TS_StoryActor_ActorWarfield = 20;
const int libCamp_ge_TS_StoryActor_ActorWarfieldAOD = 21;
const int libCamp_ge_TS_StoryActor_ActorYbarraMiscMerc = 22;
const int libCamp_ge_TS_StoryActor_ActorZeratul = 23;
const int libCamp_ge_TS_StoryActor_ActorBridgeBG1 = 24;
const int libCamp_ge_TS_StoryActor_ActorBridgeBG2 = 25;
const int libCamp_ge_TS_StoryActor_ActorArmoryBG1 = 26;
const int libCamp_ge_TS_StoryActor_ActorLast = 27;
const int libCamp_ge_TS_DebugProgressMissionPathType_None = 0;
const int libCamp_ge_TS_DebugProgressMissionPathType_Early = 1;
const int libCamp_ge_TS_DebugProgressMissionPathType_Average = 2;
const int libCamp_ge_TS_DebugProgressMissionPathType_Late = 3;
const int libCamp_ge_TS_DebugTechCheatOption_None = 0;
const int libCamp_ge_TS_DebugTechCheatOption_Early = 1;
const int libCamp_ge_TS_DebugTechCheatOption_Average = 2;
const int libCamp_ge_TS_DebugTechCheatOption_Late = 3;
const int libCamp_ge_TS_DebugTechCheatOption_Custom = 4;

// Constants
const fixed libCamp_gv_campaignObjectiveDelay = 2.0;
const fixed libCamp_gv_campaignHintDelay = 2.0;
const fixed libCamp_gv_campaignSecretDelay = 5.0;
const fixed libCamp_gv_campaignAchievementDelay = 2.0;
const int libCamp_gv__CBC_LINEMAX = 500;
const fixed libCamp_gv__CBC_LINE_DEFAULT_DURATION = 8.0;
const fixed libCamp_gv__CBC_LINE_DEFAULT_TEXTSIZE = 10.0;
const color libCamp_gv__CBC_LINE_DEFAULT_TEXTCOLOR = Color(0,0,0);
const color libCamp_gv__CBC_LINE_DEFAULT_BGCOLOR = Color(100,100,100);
const int libCamp_gv__CBC_UNITMAX = 100;
const int libCamp_gv__CBC_PLAYERMAX = 16;
const fixed libCamp_gv__CBC_UNIT_DEFAULT_ACTIVATIONDISTANCE = 12.0;
const int libCamp_gv__CBC_WAITSOUNDCOUNTMAX = 30;
const fixed libCamp_gv_gRIDDLG_GRID = 60.0;
const fixed libCamp_gv_gRIDDLG_GRIDGAP_X = 10.0;
const fixed libCamp_gv_gRIDDLG_GRIDGAP_Y = 10.0;
const fixed libCamp_gv_gRIDDLG_MARGINE_X = 50.0;
const fixed libCamp_gv_gRIDDLG_MARGINE_Y = 40.0;
const int libCamp_gv_tSC_MAXMAPACHIEVEMENT = 4;
const int libCamp_gv_tS_RecentTechMax = 6;
const int libCamp_gv_tS_RecentMercMax = 2;
const int libCamp_gv_tS_RecentResearchMax = 2;
const int libCamp_gv_TSC_MAP_FIRST = 1;
const int libCamp_gv_TSC_MISSIONOBJECTIVECOUNT = 5;
const int libCamp_gv_TSC_MERC_FIRST = 1;
const int libCamp_gv_TSC_MERC_LAST2 = 3;
const int libCamp_gv_TSC_MERC_LAST22 = 2;
const int libCamp_gv_TSC_OBJECTIVE_FIRST = 1;
const int libCamp_gv_TSC_RESEARCH_FIRST = 1;
const int libCamp_gv_tSC_RESEARCH_MISSIONCOUNT = 3;
const int libCamp_gv_tSC_RESEARCH_TIERLEVEL = 5;
const int libCamp_gv_TSC_SCENE_FIRST = 1;
const int libCamp_gv_TSC_STORYSTATE_FIRST = 1;
const int libCamp_gv_tSC_PLANET_FIRST = 1;
const int libCamp_gv_TSC_TECHCATEGORY_FIRST = 1;
const int libCamp_gv_TSC_TECHGROUP_FIRST = 1;
const int libCamp_gv_TSC_TECH_FIRST = 1;
const int libCamp_gv_tSC_TECH_AC_COUNT = 4;
const int libCamp_gv_tSC_TECH_UG_COUNT = 2;
const int libCamp_gv_tSC_HelpUnitsPanel_EnabledUnitTypesCountMax = 100;
const string libCamp_gv_tS_BankName = "TCampaign";
const string libCamp_gv_cPC_BANKNAME = "CampaignPS";
const bool libCamp_gv_cPC_CAMPAIGNBANKREADY = false;
const int libCamp_gv_tSC_Tutorial_HistoryMaxCount = 100;

// Variable Declarations
point libCamp_gv__TP_DropPod_Location;
unitgroup libCamp_gv__TP_DropPod_Units;
bool libCamp_gv_tS_MissionVictoryActionQueyeEmpty;
int libCamp_gv_tS_MissionCompleteTime;
int libCamp_gv_tS_MissionAutoSaveIndex;
int libCamp_gv_zS_ObjectivePanel;
text[501] libCamp_gv__CB_Line;
color[501] libCamp_gv__CB_Line_TextColor;
color[501] libCamp_gv__CB_Line_BGColor;
string[501] libCamp_gv__CB_Line_AnimationStart;
int[501] libCamp_gv__CB_Line_AnimationStartOptions;
string[501] libCamp_gv__CB_Line_AnimationEnd;
int[501] libCamp_gv__CB_Line_AnimationEndOptions;
soundlink[501] libCamp_gv__CB_Line_Sound;
fixed[501] libCamp_gv__CB_Line_Duration;
int[501] libCamp_gv__CB_Line_DurationType;
bool[501] libCamp_gv__CB_Line_FaceOption;
point[501] libCamp_gv__CB_Line_FaceLocation;
trigger[501] libCamp_gv__CB_Line_TriggerStart;
trigger[501] libCamp_gv__CB_Line_TriggerEnd;
int libCamp_gv__CB_Line_Last;
unit[101] libCamp_gv__CB_Unit;
int libCamp_gv__CB_Unit_Count;
fixed[101] libCamp_gv__CB_Unit_OriginalFacing;
playergroup[101] libCamp_gv__CB_Unit_ActivationPlayerGroup;
fixed[101][17] libCamp_gv__CB_Unit_ActivationDistance;
int[101][17] libCamp_gv__CB_Unit_LineCount;
int[101][17] libCamp_gv__CB_Unit_LineCurrent;
int[101][17] libCamp_gv__CB_Unit_UnitLine_StartIndex;
int[501] libCamp_gv__CB_UnitLine;
int libCamp_gv__CB_UnitLine_Count;
unit[33] libCamp_gv__CB_Current_ChatBubbleTarget;
int[33] libCamp_gv__CB_Current_ChatBubble;
sound[33] libCamp_gv__CB_Current_Sound;
int[33] libCamp_gv__CB_Current_UnitIndex;
int[33] libCamp_gv__CB_Current_LineIndex;
unit libCamp_gv__CB_TP_UNIT;
int libCamp_gv__CB_TP_PLAYER;
bool libCamp_gv__CB_TP_FORCED;
text libCamp_gv__CB_TP_TEXT;
soundlink libCamp_gv__CB_TP_SOUNDLINK;
fixed libCamp_gv__CB_TP_DURATION;
int libCamp_gv__CB_TP_DURATIONTYPE;
int libCamp_gv__CB_TP_TEXTTAG;
bool[101] libCamp_gv__CB_WaitSoundDone;
int libCamp_gv__CB_WaitSoundID;
int libCamp_gv__CB_TP_WAITSOUND_ID;
sound libCamp_gv__CB_TP_WAITSOUND;
fixed libCamp_gv__CB_TP_WAITSOUND_DURATION;
int libCamp_gv__CB_TP_WAITSOUND_DURATIONTYPE;
int libCamp_gv__MsgDlg;
int libCamp_gv__MsgDlgButton;
bool libCamp_gv__MsgDlgOpened;
int libCamp_gv_zS_CampaignTrialEndDialog;
int libCamp_gv_zS_CampaignTrialEndPanel;
int libCamp_gv_zS_CampaignTrialEndUpgradeButton;
int libCamp_gv_zS_CampaignTrialEndQuitButton;
string[36][5] libCamp_gv_tS_MapAchievements;
int[11] libCamp_gv_tSX_RecentTech;
int[3] libCamp_gv_tSX_RecentMerc;
int[3] libCamp_gv_tSX_RecentResearch;
int libCamp_gv_tS_ConvoCount;
string[51] libCamp_gv_tS_Convos;
int libCamp_gv_TSC_MAP_LAST;
int libCamp_gv_TSC_MISSION_FIRST;
int libCamp_gv_TSC_MISSION_LAST;
int libCamp_gv_tS_CurrentMap;
int[36] libCamp_gv_tS_MapID;
int[36] libCamp_gv_tS_MapType;
string[36] libCamp_gv_tS_MapConvoID;
text[36] libCamp_gv_tS_MapSubtitle;
string[36] libCamp_gv_tS_MapFile;
text[36] libCamp_gv_tS_MapProgressCheatName;
string[36] libCamp_gv_tS_MapLoadingScreenImage;
string[36] libCamp_gv_tS_MapBackLoadingImage;
string[36] libCamp_gv_tS_MapBackDefeatLoadingImage;
text[36] libCamp_gv_tS_MissionSummary;
int[36] libCamp_gv_tS_MissionLocation;
int[36] libCamp_gv_tS_MissionContact;
bool[36] libCamp_gv_tS_MissionIsRequired;
text[36] libCamp_gv_tS_MissionEnemyForces;
int[36][6] libCamp_gv_tS_MissionObjectives;
string[36] libCamp_gv_tS_MissionPitches;
int[36][4] libCamp_gv_tS_MissionTechUnitsEnabled;
trigger[36] libCamp_gv_tS_MissionBriefing;
trigger[36] libCamp_gv_tS_MissionBriefingPreload;
trigger[36] libCamp_gv_tS_MissionBriefingPreloadRough;
trigger[36] libCamp_gv_tS_MissionABChoice;
string[36] libCamp_gv_tS_MissionBattleReportImage;
string[36] libCamp_gv_tS_MissionBattleReportIcon;
int[36] libCamp_gv_tS_ExpectedCreditsPoor;
int[36] libCamp_gv_tS_ExpectedCreditsAvg;
int[36] libCamp_gv_tS_ExpectedCreditsRich;
text[151] libCamp_gv_tS_ContactName;
string[151] libCamp_gv_tS_ContactPortrait;
string[151] libCamp_gv_tS_ContactStateIndex;
int[36] libCamp_gv_tSX_MissionDoneAge;
int[36] libCamp_gv_tSX_MissionSkipAge;
bool[36][6] libCamp_gv_tSX_MissionDifficultyCompleted;
int[36][6] libCamp_gv_tSX_MissionDifficultyBestTime;
int libCamp_gv_tSX_LastMap;
bool libCamp_gv_tSX_LastMapSuccess;
int libCamp_gv_tSX_LastMission;
bool libCamp_gv_tSX_LastMissionSuccess;
bool libCamp_gv_tSX_LastMissionSimulation;
int libCamp_gv_tS_MissionABChoiceResult;
int libCamp_gv_TSC_MERC_LAST;
int[17] libCamp_gv_tS_MercID;
text[17] libCamp_gv_tS_MercNames;
text[17] libCamp_gv_tS_MercDescriptions;
int[17] libCamp_gv_tS_MercCost;
int[17][3] libCamp_gv_tS_MercTechSubGroup;
int[17][3] libCamp_gv_tS_MercUnitCount;
text[17] libCamp_gv_tS_MercUnitText;
string[17] libCamp_gv_tS_MercUnitType;
text[17] libCamp_gv_tS_MercAvailabilityText;
text[17] libCamp_gv_tS_MercSpecialText;
string[17] libCamp_gv_tS_MercPortrait;
string[17] libCamp_gv_tS_MercVideo;
abilcmd[17][4] libCamp_gv_tS_MercAbilityCommands;
string[17] libCamp_gv_tS_MercUpgrade;
string[17] libCamp_gv_tS_MercHiredImage;
string[17] libCamp_gv_tS_MercNoCreditImage;
int[17] libCamp_gv_tSX_MercStatus;
bool libCamp_gv_tS_MercUICreated;
int[11] libCamp_gv_tS_MercUIMercenaries;
trigger libCamp_gv_tS_MercUIExitCallback;
int[51] libCamp_gv_tS_BattleReportMissions;
int[31] libCamp_gv_tS_BattleReportScenes;
bool libCamp_gv_tS_BattleReportReady;
trigger libCamp_gv_tS_BattleReportSceneFinishCallback;
trigger libCamp_gv_tS_BattleReportPanelLeaveCallback;
trigger[36] libCamp_gv_tS_MissionDebriefingCallbacks;
int libCamp_gv_TSC_OBJECTIVE_LAST;
int[101] libCamp_gv_tSX_MissionObjState;
text[101] libCamp_gv_tSX_MissionObjName;
bool[101] libCamp_gv_tSX_MissionObjIsPrimary;
bool[101] libCamp_gv_tS_MissionObjIsRegistered;
int[101] libCamp_gv_tS_MissionObjObjective;
int[101] libCamp_gv_tS_MissionObjMap;
int[101] libCamp_gv_tS_MissionObjIDs;
string[101] libCamp_gv_tS_MissionObjConvoID;
int[101] libCamp_gv_tS_MissionObjProgressCurrent;
int libCamp_gv_tSX_MissionObjRewardsEarnedCurrent;
int libCamp_gv_TSC_RESEARCH_LAST;
int[31] libCamp_gv_tS_ResearchID;
int[4][11][4] libCamp_gv_tS_ResearchIDInUIStructure;
string[31] libCamp_gv_tS_ResearchConvoID;
int[31] libCamp_gv_tS_ResearchCategory;
int[31] libCamp_gv_tS_ResearchSlot;
int[31] libCamp_gv_tS_ResearchUIItem;
text[31] libCamp_gv_tS_ResearchConfirmationText;
int[26] libCamp_gv_tS_ResearchObjID;
string[26] libCamp_gv_tS_ResearchObjConvoID;
int[31] libCamp_gv_tSX_ResearchState;
int[36][3] libCamp_gv_tS_ResearchMissionObjects;
int[36][3] libCamp_gv_tS_ResearchMissionObjectCount;
int[36][3] libCamp_gv_tSX_ResearchMissionProgress;
int[3] libCamp_gv_tS_ResearchMissionProgressCurrent;
int[3] libCamp_gv_tSX_ResearchPointsConverted;
int[3] libCamp_gv_tSX_ResearchPointsOld;
bool libCamp_gv_tS_ResearchUICreated;
int[3] libCamp_gv_tS_ResearchUICategories;
int[3][6] libCamp_gv_tS_ResearchUITiers;
trigger libCamp_gv_tS_ResearchUIExitCallback;
bool libCamp_gv_tS_ResearchUIExitEnabled;
int[3] libCamp_gv_tSX_ResearchUIOldPoints;
int libCamp_gv_tS_RoomChangeDialog;
int libCamp_gv_tS_RoomChangeDialogBorder;
int libCamp_gv_tS_RoomChangeDialogSubtitle;
int[11] libCamp_gv_tS_RoomChangeButtonCustomData;
int[11] libCamp_gv_tS_RoomChangeButtons;
int[11] libCamp_gv_tS_RoomChangeButtonText;
text[11] libCamp_gv_tS_RoomChangeButtonNames;
int[11] libCamp_gv_tS_RoomChangeButtonBG;
bool[11] libCamp_gv_tS_RoomChangeButtonFlashing;
trigger[11] libCamp_gv_tS_RoomChangeButtonCallbackClick;
trigger[11] libCamp_gv_tS_RoomChangeButtonCallbackUpdate;
int libCamp_gv_tS_RoomChangeButtonCount;
int libCamp_gv_tS_RoomChangeButtonCurrent;
int libCamp_gv_TSC_SCENE_LAST;
int[31] libCamp_gv_tS_SceneIDs;
text[31] libCamp_gv_tS_SceneNames;
string[31] libCamp_gv_tS_SceneImages;
string[31] libCamp_gv_tS_SceneIcon;
trigger[31] libCamp_gv_tS_SceneCallback;
bool[31] libCamp_gv_tSX_ScenePlayed;
string libCamp_gv_tS_CurrentAmbienceLink;
bool libCamp_gv_tS_InStoryMode;
int libCamp_gv_TSC_STORYSTATE_LAST;
int libCamp_gv_tSX_CampaignDifficulty;
string[41] libCamp_gv_tS_StoryStateConvoID;
int libCamp_gv_tSC_PLANET_LAST;
int[51] libCamp_gv_tS_PlanetID;
int[51] libCamp_gv_tS_PlanetMission;
soundlink[51] libCamp_gv_tS_PlanetAmbientSound;
string[51] libCamp_gv_tS_PlanetModel;
string[51] libCamp_gv_tS_PlanetButtonModel;
string[51] libCamp_gv_tS_PlanetLighting;
text[51] libCamp_gv_tS_PlanetSubtitle;
text[51] libCamp_gv_tS_PlanetName;
string[51] libCamp_gv_tS_PlanetImage;
trigger libCamp_gv_tS_TechLimitsCallback;
trigger libCamp_gv_tS_TechExitCallback;
int libCamp_gv_TSC_TECHCATEGORY_LAST;
int[11] libCamp_gv_tS_TechCategoryID;
text[11] libCamp_gv_tS_TechCategoryName;
int[11] libCamp_gv_tS_TechCategorySlot;
int[11] libCamp_gv_tS_TechCategory_UI;
int[11] libCamp_gv_tSX_TechCategoryCount;
int libCamp_gv_TSC_TECHGROUP_LAST;
int[51] libCamp_gv_tS_TechGroupID;
int[51] libCamp_gv_tS_TechGroupCategoryID;
string[51] libCamp_gv_tS_TechGroupUnitType;
text[51] libCamp_gv_tS_TechGroupName;
text[51] libCamp_gv_tS_TechGroupDescription;
text[51] libCamp_gv_tS_TechGroupTooltip;
string[51] libCamp_gv_tS_TechGroupIcon;
string[51] libCamp_gv_tS_TechGroupIconBig;
bool[51] libCamp_gv_tS_TechGroupShowOnReport;
int[51] libCamp_gv_tS_TechGroupState;
int[51] libCamp_gv_tS_TechGroup_UI;
bool[51] libCamp_gv_tSX_TechGroup_UI_New;
int libCamp_gv_TSC_TECH_LAST;
int[101] libCamp_gv_tS_TechID;
int[101] libCamp_gv_tS_Tech_GroupID;
string[101] libCamp_gv_tS_Tech_ConvoID;
int[101] libCamp_gv_tS_Tech_Requires;
int[101] libCamp_gv_tS_Tech_UI;
int[101] libCamp_gv_tSX_Tech_Status;
int libCamp_gv_tSX_HelpUnitsPanel_EnabledUnitTypesCount;
string[101] libCamp_gv_tSX_HelpUnitsPanel_EnabledUnitTypes;
bool libCamp_gv_tS_UpgradeInfantry2;
bool libCamp_gv_tS_UpgradeInfantry3;
bool libCamp_gv_tS_UpgradeVehicle2;
bool libCamp_gv_tS_UpgradeVehicle3;
bool libCamp_gv_tS_UpgradeShip2;
bool libCamp_gv_tS_UpgradeShip3;
bool libCamp_gv_tSX_IsSimulation;
bool libCamp_gv_tSX_IsVictoryPlayAgain;
string libCamp_gv_tSX_RoomStates;
trigger libCamp_gv_tS_RoomStatesDefaultCallback;
int libCamp_gv_debug_MapIDForPerfTest;
bank[36] libCamp_gv_tS_MissionBanks;
int[101] libCamp_gv_tS_NonSnapShotObjectiveStates;
int[101] libCamp_gv_tS_NonSnapShotObjectiveProgress;
bool libCamp_gv_tS_NonSnapShotMissionDifficultyCompleted;
int libCamp_gv_tS_NonSnapShotMissionBestTime;
int[3] libCamp_gv_tS_NonSnapShotMissionResearchProgress;
bool libCamp_gv_tS_Horner05sSimulationBeforeCompleted;
string[11][41] libCamp_gv_tS_StoryRoomUnitTypes;
int[11] libCamp_gv_tS_StoryRoomUnitTypeCount;
string[41] libCamp_gv_tS_StoryActorUnitTypes;
int libCamp_gv_tSX_LoadingImageCurrentHyperion;
string[11] libCamp_gv_tS_LoadingImagesLab;
int libCamp_gv_tS_LoadingImageCountLab;
int libCamp_gv_tSX_LoadingImageCurrentLab;
string[11] libCamp_gv_tS_LoadingImagesCantina;
int libCamp_gv_tS_LoadingImageCountCantina;
int libCamp_gv_tSX_LoadingImageCurrentCantina;
string[11] libCamp_gv_tS_LoadingImagesArmory;
int libCamp_gv_tS_LoadingImageCountArmory;
int libCamp_gv_tSX_LoadingImageCurrentArmory;
string[11] libCamp_gv_tS_LoadingImagesChar;
int libCamp_gv_tS_LoadingImageCountChar;
int libCamp_gv_tSX_LoadingImageCurrentChar;
int libCamp_gv_tS_LoadingImageCountHyperion;
string[11] libCamp_gv_tS_LoadingImagesHyperion;
int libCamp_gv_tSX_LoadingImageCurrentMarSara;
int libCamp_gv_tS_LoadingImageCountMarSara;
string[11] libCamp_gv_tS_LoadingImagesMarSara;
bool libCamp_gv_cPX_CampaignCompleted;
bank libCamp_gv_cP_Bank;
int libCamp_gv_tSX_Tutorial_HistoryCount;
text[101] libCamp_gv_tSX_Tutorial_HistoryTitle;
text[101] libCamp_gv_tSX_Tutorial_HistoryDescription;
string[101] libCamp_gv_tSX_Tutorial_HistoryIcon;
string[101] libCamp_gv_tSX_Tutorial_HistoryMovie;
bool[21] libCamp_gv_tS_StoryUIVisibility_Menu;
bool[21] libCamp_gv_tS_StoryUIVisibility_Cash;
bool[21] libCamp_gv_tS_StoryUIVisibility_RoomChange;
bool[21] libCamp_gv_tS_StoryUIVisibility_Tip;
int libCamp_gv_tS_StoryUIVisibilityCounter;
bool libCamp_gv_tS_EndCinematicFinished;
bool libCamp_gv_tS_EndCreditFinished;
bool[36][36] libCamp_gv_tS_DebugProgressMissionPathEarly;
bool[36][36] libCamp_gv_tS_DebugProgressMissionPathAverage;
bool[36][36] libCamp_gv_tS_DebugProgressMissionPathLate;
int libCamp_gv_tS_DebugProgressDialog;
int libCamp_gv_tS_DebugProgressImageCurrent;
int libCamp_gv_tS_DebugProgressImageOK;
int libCamp_gv_tS_DebugProgressButtonOK;
int libCamp_gv_tS_DebugProgressLabelWarning;
int libCamp_gv_tS_DebugProgressLabelsCompleted;
int libCamp_gv_tS_DebugProgressButtonCancel;
int libCamp_gv_tS_DebugProgressButtonReset;
int libCamp_gv_tS_DebugProgressButtonResetTech;
int libCamp_gv_tS_DebugProgressButtonLaunchMission;
int[51] libCamp_gv_tS_DebugProgressMissionButtons;
int libCamp_gv_tS_DebugProgressMissionButtonUnlockSecret;
int[51] libCamp_gv_tS_DebugProgressMissionLabelsStates;
int[51] libCamp_gv_tS_DebugProgressMissionLabelsUnits;
int[51] libCamp_gv_tS_DebugProgressMissionLabelsCredits;
int[51] libCamp_gv_tS_DebugProgressMissionLabelsRequirement;
int libCamp_gv_tS_DebugProgressMissionLabelsUnlocked;
int libCamp_gv_tS_DebugProgressLastMission;
int libCamp_gv_tS_DebugProgressLastCreditMission;
int libCamp_gv_tS_DebugProgressCurrentMission;
trigger libCamp_gv_tS_DebugProgressExitCallbackOK;
trigger libCamp_gv_tS_DebugProgressExitCallbackCancel;
bool libCamp_gv_tS_DebugProgressDialogOpened;
bool libCamp_gv_tS_DebugProgressCheating;
bool libCamp_gv_tS_DebugProgressResetUsed;
int[8] libCamp_gv_tS_DebugProgressMissionOptions;
int[8] libCamp_gv_tS_DebugProgressMissionLaunchButtons;
int libCamp_gv_tS_DebugProgressMissionLaunchCancel;
int libCamp_gv_tS_DebugProgressMissionLaunchDialog;
bool libCamp_gv_tS_DebugProgressLaunchingMission;
bank libCamp_gv_tS_DebugProgressBank;
int libCamp_gv_tS_DebugResearchDialogProtoss;
int libCamp_gv_tS_DebugResearchButtonProtossPlus;
int libCamp_gv_tS_DebugResearchButtonProtossMinus;
int libCamp_gv_tS_DebugResearchButtonProtossReset;
int libCamp_gv_tS_DebugResearchDialogZerg;
int libCamp_gv_tS_DebugResearchButtonZergPlus;
int libCamp_gv_tS_DebugResearchButtonZergMinus;
int libCamp_gv_tS_DebugResearchButtonZergReset;
int[3] libCamp_gv_tSX_DebugResearchLevel;
int libCamp_gv_tS_DebugMercenaryDialog;
int libCamp_gv_tS_DebugMercenaryButtonReset;
int libCamp_gv_tS_DebugMercenaryButtonCredits;
bool libCamp_gv_tS_DebugBuyTechActive;
int libCamp_gv_tS_DebugBuyTechDialog;
int libCamp_gv_tS_DebugBuyTechTitleUnitCredits;
int libCamp_gv_tS_DebugBuyTechButtonUnitsUnlock;
int libCamp_gv_tS_DebugBuyTechButtonUnitsUnlockAll;
int libCamp_gv_tS_DebugBuyTechButtonUnitsReset;
int libCamp_gv_tS_DebugBuyTechLabelUnitsUnlocked;
int libCamp_gv_tS_DebugBuyTechLabelCreditsEarned;
int libCamp_gv_tS_DebugBuyTechLabelMissionNotUnlocked;
int libCamp_gv_tS_DebugBuyTechLabelMissionExtraSelected;
int libCamp_gv_tS_DebugBuyTechTitleUpgrades;
int libCamp_gv_tS_DebugBuyTechButtonUpgradeBuy;
int libCamp_gv_tS_DebugBuyTechButtonUpgradeBuyAll;
int libCamp_gv_tS_DebugBuyTechButtonUpgradeReset;
int libCamp_gv_tS_DebugBuyTechButtonCreditsIncrease;
int libCamp_gv_tS_DebugBuyTechLabelUpgradeBought;
int libCamp_gv_tS_DebugBuyTechLabelCreditsSpent;
int libCamp_gv_tS_DebugBuyTechLabelUpgradeAvailable;
int libCamp_gv_tS_DebugBuyTechLabelCreditsAvailable;
int libCamp_gv_tS_DebugBuyTechButtonAverage;
int libCamp_gv_tS_DebugBuyTechButtonEarly;
int libCamp_gv_tS_DebugBuyTechButtonLate;
int libCamp_gv_tS_DebugBuyTechButtonSave;
int libCamp_gv_tS_DebugBuyTechButtonCancel;
int libCamp_gv_tS_DebugBuyTechTotalCredits;
bool[36][11] libCamp_gv_tS_DebugBuyTechMercEarly;
bool[36][11] libCamp_gv_tS_DebugBuyTechMercAverage;
bool[36][11] libCamp_gv_tS_DebugBuyTechMercLate;
bool[36][101] libCamp_gv_tS_DebugBuyTechPurchasableEarly;
bool[36][101] libCamp_gv_tS_DebugBuyTechPurchasableAverage;
bool[36][101] libCamp_gv_tS_DebugBuyTechPurchasableLate;
int libCamp_gv_tSX_DebugTechCheatOption;
int libCamp_gv_tS_DebugTechCustomButton;
int libCamp_gv_tS_DebugTechCustomDialog;
trigger libCamp_gv_tS_FootageRecordingCallback;
string libCamp_gv_mapMusicTrack;

// Function Declarations
void libCamp_gf_DisplayCampaignMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
void libCamp_gf__ZergDropPod (point lp_location, unitgroup lp_units);
void libCamp_gf__TerranDropPod (point lp_location, unitgroup lp_units);
void libCamp_gf_CreateDropPod (int lp_race, point lp_location, unitgroup lp_units, bool lp_waitDontWait);
void libCamp_gf_TS_SaveMissionCompletion ();
void libCamp_gf_TS_GameOver ();
void libCamp_gf_EndCampaignMission (int lp_player, int lp_type);
void libCamp_gf_RunMissionVictorySequence (trigger lp_victoryCinematic);
void libCamp_gf_CreateStorymodeTips ();
void libCamp_gf_CreateNewStructureTips ();
void libCamp_gf_TS_CreateNewUpgradeTips ();
void libCamp_gf_CreateTipFromConversationState (string lp_convoState, int lp_tipType, playergroup lp_players);
void libCamp_gf_CreateMissionAutosavePoint (text lp_description);
void libCamp_gf_SendTransmissionCampaign (unit lp_unit, soundlink lp_sound, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone);
void libCamp_gf_SetAllSoundChannelVolumesCampaign (int lp_mode);
void libCamp_gf_ResearchAIUpgrade (int lp_count, string lp_upgrade, int lp_player);
void libCamp_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, int lp_player);
void libCamp_gf_DisplayResearchPointsGiventoPlayer (int lp_researchObject, unit lp_researchUnit, int lp_player);
int libCamp_gf_LastAddedChatBubble ();
void libCamp_gf_ShowChatBubble (unit lp_unit, int lp_player);
void libCamp_gf_AddChatBubbleLine2 (int lp_player, unit lp_unit, soundlink lp_sound, text lp_text, fixed lp_duration, int lp_durationType, bool lp_faceOption);
void libCamp_gf_ClearChatBubble (int lp_player);
void libCamp_gf_RandomlyShuffleChatBubbleLines (unit lp_unit, int lp_player);
void libCamp_gf_ClearAllChatBubbleLinesFromUnit (unit lp_unit, int lp_player);
void libCamp_gf_SetChatBubbleActivationDistance (unit lp_unit, int lp_player, fixed lp_distance);
void libCamp_gf_SetChatBubbleColor (int lp_chatBubble, color lp_color, color lp_backgroundColor);
void libCamp_gf_SetChatBubbleAnimation2 (int lp_chatBubble, string lp_animation1, int lp_animation1Option, string lp_animation2, int lp_animation2Option);
void libCamp_gf_SetChatBubbleTrigger (int lp_chatBubble, trigger lp_triggerStart, trigger lp_triggerEnd);
void libCamp_gf_SetChatBubbleFacingPoint (int lp_chatBubble, point lp_point);
void libCamp_gf_ShowChatBubbleOnUnit (int lp_player, unit lp_unit, soundlink lp_sound, text lp_message, fixed lp_duration, int lp_durationType, bool lp_WaitUntilDone);
void libCamp_gf_TurnChatBubbleOnOff (unit lp_unit, bool lp_onOff, int lp_player);
text libCamp_gf_TextOfSound (soundlink lp_soundLink);
bool libCamp_gf__CB_Line_IsValid (int lp_lineIndex);
int libCamp_gf__CB_Line_Add (text lp_line, color lp_textColor, color lp_bGColor, string lp_animationStart, int lp_animationStartOption, string lp_animationEnd, int lp_animationEndOption, soundlink lp_sound, fixed lp_duration, int lp_durationType, bool lp_faceOption, trigger lp_triggerStart, trigger lp_triggerEnd);
void libCamp_gf__CB_Line_Remove (int lp_lineIndex);
int libCamp_gf__CB_Unit_GetIndex (unit lp_unit);
int libCamp_gf__CB_Unit_GetLineEndIndex (int lp_unitIndex, int lp_playerIndex);
int libCamp_gf__CB_Unit_GetLineCurrentIndex (int lp_unitIndex, int lp_playerIndex);
int libCamp_gf__CB_Unit_Add (unit lp_unit);
void libCamp_gf__CB_Unit_Remove (unit lp_unit);
void libCamp_gf__CB_Unit_RemoveByIndex (int lp_unitIndex);
void libCamp_gf__CB_UnitLine_Add (int lp_unitIndex, int lp_playerIndex, int lp_lineIndex);
void libCamp_gf__CB_UnitLine_RemoveUnit (int lp_unitIndex, int lp_playerIndex);
void libCamp_gf__CB_Current_Create (int lp_unitIndex, int lp_playerIndex, unit lp_target);
void libCamp_gf__CB_Current_Remove (int lp_playerIndex);
int libCamp_gf__CB_LastWaitSound ();
void libCamp_gf__CB_StarWaitingSound (sound lp_sound, fixed lp_duration, int lp_durationType);
fixed libCamp_gf_GD_Gap (int lp_hV);
fixed libCamp_gf_GD_GridToReal (fixed lp_grid, int lp_hV, int lp_sizeOrPos);
int libCamp_gf_GD_GridToInteger (fixed lp_grid, int lp_hV, int lp_sizeOrPos);
fixed libCamp_gf_GD_RealToGrid (fixed lp_value, int lp_hV, int lp_sizeOrPos);
fixed libCamp_gf_GD_IntegerToGrid (int lp_value, int lp_hV, int lp_sizeOrPos);
fixed libCamp_gf_DialogWidthInGrid (int lp_dialog);
fixed libCamp_gf_DialogHeightInGrid (int lp_dialog);
fixed libCamp_gf_DialogOffsetXInGrid (int lp_dialog);
fixed libCamp_gf_DialogOffsetYInGrid (int lp_dialog);
fixed libCamp_gf_DialogItemWidthInGrid (int lp_dialogItem, int lp_player);
fixed libCamp_gf_DialogItemHeightInGrid (int lp_dialogItem, int lp_player);
fixed libCamp_gf_DialogItemOffsetXInGrid (int lp_dialogItem, int lp_player);
fixed libCamp_gf_DialogItemOffsetYInGrid (int lp_dialogItem, int lp_player);
void libCamp_gf_CreateDialogInGrid (fixed lp_width, fixed lp_height, int lp_anchor, fixed lp_offsetX, fixed lp_offsetY, bool lp_modal);
void libCamp_gf_MoveDialogInGrid (int lp_dialog, int lp_anchor, fixed lp_offsetX, fixed lp_offsetY);
void libCamp_gf_MoveDialogInGridRelative (int lp_dialog, int lp_anchor, int lp_relativeDialog, int lp_relativeAnchor, fixed lp_offsetX, fixed lp_offsetY);
void libCamp_gf_SetDialogSizeInGrid (int lp_dialog, fixed lp_width, fixed lp_height);
void libCamp_gf_CreateDialogItemInGrid (int lp_dialog, int lp_type, int lp_anchor, fixed lp_offsetX, fixed lp_offsetY, fixed lp_width, fixed lp_height, text lp_label);
void libCamp_gf_MoveDialogItemInGrid (int lp_dialogItem, playergroup lp_players, int lp_anchor, fixed lp_offsetX, fixed lp_offsetY);
void libCamp_gf_MoveDialogItemInGridRelative (int lp_item, playergroup lp_players, int lp_anchor, int lp_relativeItem, int lp_relativeAnchor, fixed lp_offsetX, fixed lp_offsetY);
void libCamp_gf_SetDialogItemSizeInGrid (int lp_dialogItem, playergroup lp_players, fixed lp_width, fixed lp_height);
void libCamp_gf_DisplayMessageDialog (text lp_title, string lp_titleStyle, text lp_body1, string lp_bodyStyle1, text lp_body2, string lp_bodyStyle2, int lp_width, int lp_height, text lp_buttonText);
text libCamp_gf_FormatTimeCampaign (int lp_second);
void libCamp_gf_ZS_DisplayCampaignTrialDialog (bool lp_showBackground);
void libCamp_gf_ZS_CloseCampaignTrialDialog ();
bool libCamp_gf_ZS_TrialEnd ();
void libCamp_gf_TS_InitializeMapAchievementDataSingle (int lp_map, string lp_achievement1, string lp_achievement2, string lp_achievement3, string lp_achievement4);
void libCamp_gf_TS_InitializeMapAchievementData ();
int libCamp_gf_TS_CampaignMissionShortestTime ();
int libCamp_gf_TS_MissionCompletionCountOnDifficulty (int lp_difficulty);
int libCamp_gf_TS_MissionDifficultyComparison (int lp_difficulty1, int lp_difficulty2);
void libCamp_gf_TS_CheckAchievementUnlocking ();
void libCamp_gf_TS_CompletionistCheck (int lp_map, string lp_normal, string lp_hard, string lp_brutal);
void libCamp_gf_TS_UpdateCharacterSheepPanel ();
void libCamp_gf_TS_AddRecentTech (int lp_tech);
void libCamp_gf_TS_AddRecentMerc (int lp_merc);
void libCamp_gf_TS_AddRecentResearch (int lp_research);
void libCamp_gf_TS_ResetRecentlyPurchasedData ();
void libCamp_gf_TS_InitizlizeStoryConversationSingle (string lp_conversation);
void libCamp_gf_TS_InitizlizeStoryConversations ();
string libCamp_gf_ContactPortraitModel (int lp_contactID);
int libCamp_gf_CountMissions (int lp_status);
int libCamp_gf_LastMap ();
bool libCamp_gf_LastMapConditionCheck (int lp_condition);
int libCamp_gf_LastMission ();
bool libCamp_gf_LastMissionConditionCheck (int lp_condition);
int libCamp_gf_LastSuccessfulMission ();
bool libCamp_gf_MapTypeCheck (int lp_mapId, int lp_mapType);
string libCamp_gf_MapFile (int lp_map);
trigger libCamp_gf_MissionBriefing (int lp_mapID);
trigger libCamp_gf_MissionBriefingPreload (int lp_mapID);
trigger libCamp_gf_MissionBriefingRoughPreload (int lp_mapID);
int libCamp_gf_MissionContact (int lp_mapID);
int libCamp_gf_MissionPlanet (int lp_mission);
int libCamp_gf_MissionStatusAge (int lp_mission, int lp_status);
bool libCamp_gf_MissionDifficultyCompleted (int lp_mission, int lp_difficulty);
int libCamp_gf_MissionCompleteBestTime (int lp_mission, int lp_difficulty);
int libCamp_gf_MissionStatus (int lp_missionID);
bool libCamp_gf_MissionStatusCheck (int lp_missionID, int lp_status);
int libCamp_gf_MissionReward (int lp_mission);
text libCamp_gf_MissionName (int lp_mission);
text libCamp_gf_MissionNameInUpperCase (int lp_mission);
text libCamp_gf_MissionEpilogue (int lp_mission);
text libCamp_gf_MissionPlanetInfo (int lp_mission);
text libCamp_gf_MissionObjectivesText (int lp_mission);
string libCamp_gf_MissionPitches (int lp_mission);
int libCamp_gf_MissionUnlockedTechSubgorup (int lp_mission, int lp_index);
string libCamp_gf_MissionUnlockedUnitType (int lp_mission, int lp_index);
string libCamp_gf_MissionLoadingScreenImage (int lp_mission);
int libCamp_gf_NumberOfMissions (int lp_options);
int libCamp_gf_TS_MissionRewardResearchPoints (int lp_mission, int lp_researchCategory);
int libCamp_gf_TS_TertiaryIntegerOp (bool lp_condition, int lp_trueValue, int lp_falseValue);
bool libCamp_gf_TS_MapIsMission (int lp_map);
int libCamp_gf_TS_MapIDFromIndex (int lp_mapIndex);
string libCamp_gf_TS_MapConvoID (int lp_map);
text libCamp_gf_FormatCredits (int lp_credits, bool lp_withDollarSign);
int libCamp_gf_CurrentMap ();
void libCamp_gf_UpdateMissionFlow ();
void libCamp_gf_SetMissionBriefing (int lp_mapID, trigger lp_briefing, trigger lp_briefingPreload, trigger lp_briefingPreloadRough);
void libCamp_gf_SetMissionABChoiceCallback (int lp_mapID, trigger lp_aBChoice);
void libCamp_gf_SetMissionABChoiceResult (int lp_mapID);
void libCamp_gf_TS_MarkMissionAsStatus (int lp_missionID, int lp_status);
void libCamp_gf_TS_SetMissionStatusAge (int lp_mission, int lp_status, int lp_age);
void libCamp_gf_TS_SetMissionDifficultyCompleted (int lp_mission, int lp_difficulty, bool lp_completed);
void libCamp_gf_TS_SetMissionCompleteBestTime (int lp_mission, int lp_difficulty, int lp_time);
void libCamp_gf_TS_CompleteMission (int lp_mission);
void libCamp_gf_TS_IncreaseMissionAge (int lp_mission);
void libCamp_gf_TS_InitializeMapDataSingle (int lp_mapID, string lp_map, text lp_progressCheatName, int lp_type, string lp_convoID, text lp_subtitle, string lp_loadingScreenImage, string lp_backLoadingScreenImage, string lp_backDefeatLoadingScreenImage, text lp_summary, int lp_location, bool lp_isRequired, int lp_contact, int lp_creditsPoor, int lp_creditsAvg, int lp_creditsRich, int lp_enabedTechUnit1, int lp_enabedTechUnit2, int lp_enabedTechUnit3, string lp_pitches, text lp_enemyForces, string lp_battleReportImage, string lp_battleReportIcon);
void libCamp_gf_TS_InitializeMapData ();
void libCamp_gf_TS_InitializeContactDataSingle (int lp_contactID, text lp_name, string lp_convoStateIndex, string lp_portrait);
void libCamp_gf_TS_InitializeContactData ();
void libCamp_gf_TS_LockUnlockMissionIfCondition (bool lp_lockUnlockOption, int lp_mission, bool lp_condition);
void libCamp_gf_TS_SetLastSuccessfulMission (int lp_mission);
void libCamp_gf_TS_UpdateNewMissionOpened ();
void libCamp_gf_LaunchMission (int lp_mission, bool lp_simulationOnOff, int lp_difficulty);
text libCamp_gf_MercName (int lp_mercID);
text libCamp_gf_MercDescription (int lp_mercID);
int libCamp_gf_MercCost (int lp_mercID);
int libCamp_gf_MercTechSubgroup (int lp_mercID, int lp_index);
int libCamp_gf_MercCount (int lp_mercID, int lp_index);
text libCamp_gf_MercUnitText (int lp_mercID);
string libCamp_gf_MercUnitText2 (int lp_mercID);
text libCamp_gf_MercAvailablityText (int lp_mercID);
text libCamp_gf_MercSpecialText (int lp_mercID);
string libCamp_gf_MercPortraitModel (int lp_mercID);
string libCamp_gf_MercVideo (int lp_mercID);
string libCamp_gf_MercUpgrade (int lp_mercID);
bool libCamp_gf_MercStatusCheck (int lp_mercID, int lp_status);
int libCamp_gf_CostofPurchasedMerc ();
abilcmd libCamp_gf_TS_MercAbilityCommand (int lp_mercID, int lp_index);
void libCamp_gf_SetMercStatus (int lp_mercID, int lp_status);
void libCamp_gf_TS_InitializeMercDataSingle (int lp_iD, text lp_name, text lp_description, int lp_cost, int lp_techSubgroup1, int lp_unitCount1, int lp_techSubgroup2, int lp_unitCount2, text lp_unitText, string lp_unitType, text lp_availabilityText, text lp_specialText, string lp_portrait, string lp_video, abilcmd lp_command1, abilcmd lp_command2, abilcmd lp_command3, string lp_upgrade, string lp_hiredImage, string lp_noCreditImage);
void libCamp_gf_TS_InitializeMercData ();
void libCamp_gf_TS_ResetMercData ();
void libCamp_gf_TS_ApplyMercenaryTech (int lp_player);
void libCamp_gf_TS_UpdateMercStatus ();
void libCamp_gf_TS_ApplyMercUpgrades (int lp_player);
void libCamp_gf_DisplayMercenaryPanel (trigger lp_exitCallback);
void libCamp_gf_TS_MercUIUpdateUI ();
void libCamp_gf_TS_MercUIGift (int lp_mercGifted);
void libCamp_gf_TS_BattleReportUpdate ();
text libCamp_gf_TS_BattleReportFormatObjectives (int lp_mission);
text libCamp_gf_TS_BattleReportFormatBestTime (int lp_mission, int lp_difficulty);
bool libCamp_gf_TS_BattleReportMissionCompleted (int lp_mission);
void libCamp_gf_TS_BattleReportAddMission (int lp_mission, int lp_state, int lp_priority);
void libCamp_gf_TS_BattleReportAddScene (int lp_scene, int lp_priority);
void libCamp_gf_TS_BattleReportHide ();
void libCamp_gf_DisplayBattleReport (trigger lp_sceneFinishCallback, trigger lp_leaveCallback);
void libCamp_gf_RefreshBattleReport ();
bool libCamp_gf_TS_GameFullyDownloaded ();
void libCamp_gf_RegisterMissionDebriefingCallback (int lp_mission, trigger lp_callback);
trigger libCamp_gf_MissionDebriefingCallback (int lp_mission);
bool libCamp_gf_MissionObjectiveStateCheck (int lp_objective, int lp_state);
bool libCamp_gf_MissionObjectiveIsPrimary (int lp_objective);
text libCamp_gf_MissionObjectiveName (int lp_objective);
int libCamp_gf_MissionObjectiveMap (int lp_objective);
int libCamp_gf_MissionObjectiveRewardsEarned (int lp_objective);
int libCamp_gf_MissionObjectiveRewardsEarnedLastMission ();
int libCamp_gf_MissionObjectiveItemCount (int lp_objective);
int libCamp_gf_MissionObjectiveCreditsPerItem (int lp_objective);
int libCamp_gf_MissionObjectiveProgress (int lp_objective);
bool libCamp_gf_TS_AllObjectivesCompletedForMission (int lp_mission);
string libCamp_gf_TS_MissionObjectiveConvoID (int lp_objective);
void libCamp_gf_RegisterMissionObjective (int lp_objectiveID, int lp_objective, text lp_objectiveName);
void libCamp_gf_SetMissionObjectiveState (int lp_objective, int lp_state);
void libCamp_gf_SetMissionObjectiveProgress (int lp_objective, int lp_progress);
void libCamp_gf_AddProgressToStoryObjective (int lp_progress, int lp_objective);
void libCamp_gf_TS_InitializeMissionObjectiveDataSingle (int lp_obj, int lp_map, string lp_convoID);
void libCamp_gf_TS_InitializeMissionObjectiveData ();
void libCamp_gf_TS_UpdateMissionObjectives ();
text libCamp_gf_StoryResearchName (int lp_researchID);
text libCamp_gf_StoryResearchDescription (int lp_researchID);
int libCamp_gf_StoryResearchCategory (int lp_researchID);
string libCamp_gf_StoryResearchIcon (int lp_researchID);
text libCamp_gf_StoryResearchTooltip (int lp_researchID);
text libCamp_gf_StoryResearchConfirmationText (int lp_researchID);
string libCamp_gf_StoryResearchMovie (int lp_researchID);
int libCamp_gf_StoryResearchLevelRequirement (int lp_researchID);
int libCamp_gf_StoryResearchMissionObject (int lp_missionID);
int libCamp_gf_StoryResearchMissionProgress (int lp_missionID, int lp_researchCat);
bool libCamp_gf_StoryResearchStateCheck (int lp_researchID, int lp_state);
int libCamp_gf_StoryResearchPoints (int lp_categeory);
int libCamp_gf_StoryResearchPointsOld (int lp_categeory);
int libCamp_gf_StoryResearchPointsConverted (int lp_categeory);
int libCamp_gf_StoryResearchPointCap (int lp_categeory);
int libCamp_gf_StoryResearchCreditsPerPoint ();
int libCamp_gf_TS_StoryResearchUIItem (int lp_researchID);
string libCamp_gf_TS_StoryResearchRewardUpgrade1 (int lp_researchID);
string libCamp_gf_TS_StoryResearchRewardUpgrade2 (int lp_researchID);
abilcmd libCamp_gf_TS_StoryResearchRewardAC1 (int lp_researchID);
abilcmd libCamp_gf_TS_StoryResearchRewardAC2 (int lp_researchID);
int libCamp_gf_TS_StoryResearchMissionProgressCurrent (int lp_categeory);
int libCamp_gf_TS_StoryResearchMissionObject (int lp_mission, int lp_index);
int libCamp_gf_TS_StoryResearchMissionObjectCount (int lp_mission, int lp_index);
int libCamp_gf_TS_StoryResearchMissionMainObjectiveReward (int lp_mission, int lp_category);
int libCamp_gf_TS_StoryResearchMissionOpportunities (int lp_mission, int lp_category);
int libCamp_gf_TS_StoryResearchTier (int lp_research);
int libCamp_gf_TS_StoryResearchSlot (int lp_research);
int libCamp_gf_TS_StoryResearchTheOtherOfTheSameTier (int lp_research);
int libCamp_gf_StoryResearchObjectReward (int lp_researchObject, int lp_category);
text libCamp_gf_StoryResearchSupplementTextForObjective (int lp_researchObject, int lp_style, int lp_total, int lp_progress);
void libCamp_gf_TS_InitializeResearchDataSingle (int lp_iD, string lp_convoID);
void libCamp_gf_TS_InitializeResearchData ();
void libCamp_gf_TS_InitializeResearchObjDataSingle (int lp_iD, string lp_convoID);
void libCamp_gf_TS_InitializeResearchObjData ();
void libCamp_gf_TS_ResetResearchData ();
void libCamp_gf_TS_ApplyResearchesTech (int lp_player);
void libCamp_gf_TS_UpdateResearchUnitHelpPanel (int lp_player);
void libCamp_gf_AddProgressToStoryResearch (int lp_researchObject, int lp_count);
void libCamp_gf_SetStoryResearchPurchased (int lp_researchID);
void libCamp_gf_SetStoryResearchPointsConverted (int lp_category, int lp_points);
void libCamp_gf_SetStoryResearchPointsOld (int lp_category, int lp_points);
int libCamp_gf_TS_StoryResearchPointsOld (int lp_categeory);
int libCamp_gf_TS_ResearchUIResearchID (int lp_researchItem);
void libCamp_gf_DisplayResearchPanel (trigger lp_exitCallback);
void libCamp_gf_TS_ResearchUICreate ();
void libCamp_gf_TS_ResearchUIUpdate ();
void libCamp_gf_TS_ResearchUIClearProtossConfirmationText ();
void libCamp_gf_TS_ResearchUIClearZergConfirmationText ();
void libCamp_gf_TS_RoomChangePanelCreate ();
void libCamp_gf_AddRoomChangePanelButton (text lp_roomName, trigger lp_clickCallback, trigger lp_updateCallback, int lp_custonData, text lp_tip);
int libCamp_gf_LastAddRoomChangePanelButton ();
int libCamp_gf_RoomChangePanelButtonCount ();
int libCamp_gf_RoomChangePanelCurrentButton ();
int libCamp_gf_RoomChangePanelButtonCustomData (int lp_buttonId);
bool libCamp_gf_RoomChangePanelIsVisible ();
void libCamp_gf_HideRoomChangePanel (bool lp_showHide);
void libCamp_gf_UpdateRoomChangePanel ();
void libCamp_gf_DisableRoomChangePanelButton (bool lp_enableDisable, int lp_buttonId);
void libCamp_gf_SetRoomChangePanelButtonState (int lp_buttonId, int lp_state);
void libCamp_gf_FlashRoomChangePanelButton (int lp_buttonId);
void libCamp_gf_StopFlashingRoomChangePanelButton (int lp_buttonId);
void libCamp_gf_TS_InitializeSceneDataSingle (int lp_iD, text lp_name, string lp_image, string lp_icon);
void libCamp_gf_TS_InitializeSceneData ();
void libCamp_gf_RegisterSceneCallback (int lp_scene, trigger lp_callback);
trigger libCamp_gf_SceneCallback (int lp_scene);
bool libCamp_gf_ScenePlayed (int lp_scene);
text libCamp_gf_SceneName (int lp_scene);
void libCamp_gf_SetScenePlayed (int lp_scene, bool lp_played);
void libCamp_gf_ChangeAmbience (string lp_ambience);
int libCamp_gf_StoryState (int lp_stateID);
int libCamp_gf_StoryCredits ();
int libCamp_gf_TS_CampaignDifficulty ();
void libCamp_gf_SetStoryState (int lp_stateID, int lp_value);
void libCamp_gf_SetStoryCredits (int lp_value);
void libCamp_gf_TS_SetCampaignDifficulty (int lp_difficulty);
void libCamp_gf_TS_InitializeStateData ();
void libCamp_gf_TS_UpdateStoryStates ();
text libCamp_gf_PlanetName (int lp_planetID);
int libCamp_gf_PlanetID (int lp_index);
text libCamp_gf_PlanetSubtitle (int lp_planetID);
int libCamp_gf_PlanetMission (int lp_planetID);
string libCamp_gf_PlanetLighting (int lp_planetID);
string libCamp_gf_PlanetIconModel (int lp_planetID);
string libCamp_gf_PlanetModel (int lp_planetID);
text libCamp_gf_PlanetMissionResearchOpportunitiesText (int lp_mission, text lp_protossStyle, text lp_zergStyle);
int libCamp_gf_FirstPlanet ();
int libCamp_gf_LastPlanet ();
void libCamp_gf_TS_InitializePlanetDataSingle (int lp_planetID, text lp_name, text lp_subtitle, string lp_model, string lp_buttonModel, string lp_lighting, string lp_image, soundlink lp_ambientSound);
void libCamp_gf_TS_InitializePlanetData ();
int libCamp_gf_AddPlanet (int lp_planet);
int libCamp_gf_TechPurchasableTechID (int lp_techPurchasable);
bool libCamp_gf_CanAffordTech (int lp_techID);
int libCamp_gf_CostofPurchasedTech ();
int libCamp_gf_NumberofPurchasedTech ();
int libCamp_gf_NumberofAvailableTech ();
string libCamp_gf_TS_StoryTechConvoID (int lp_tech);
text libCamp_gf_StoryTechName (int lp_tech);
text libCamp_gf_StoryTechTooltip (int lp_tech);
text libCamp_gf_StoryTechDescription (int lp_tech);
int libCamp_gf_StoryTechCost (int lp_tech);
int libCamp_gf_StoryTechSlot (int lp_tech);
string libCamp_gf_StoryTechIcon (int lp_tech);
string libCamp_gf_StoryTechMovie (int lp_tech);
string libCamp_gf_StoryTechUpgrade (int lp_tech, int lp_index);
abilcmd libCamp_gf_StoryTechAbilityCommand (int lp_tech, int lp_index);
bool libCamp_gf_StoryTechUnitIsEnabled (string lp_techUnit);
string libCamp_gf_StoryTechGroupIcon (int lp_group);
string libCamp_gf_StoryTechGroupUnitType (int lp_group);
text libCamp_gf_StoryTechGroupDescription (int lp_group);
text libCamp_gf_StoryTechGroupTooltip (int lp_group);
bool libCamp_gf_StoryTechStateCheck (int lp_storyTech, int lp_state);
string libCamp_gf_TS_HelpUnitsPanel_UnitTypeStringID (string lp_unitType);
bool libCamp_gf_TS_HelpUnitsPanel_EnabledUnitTypeAlreadyExisted (string lp_unitType);
bool libCamp_gf_TS_StoryTechGroupUIUnlocked (int lp_group);
int libCamp_gf_TS_StoryTechPurchasedCountInCategory (int lp_category);
void libCamp_gf_SetTechRestrictionsCallback (trigger lp_callbackTrigger);
void libCamp_gf_DisplayTechConsole (trigger lp_exitTrigger);
void libCamp_gf_EnableCampaignTechUnit (bool lp_enableDisable, int lp_techUnit, int lp_player);
void libCamp_gf_AddUnitTypeToUnitHelpPanel (string lp_unitType, bool lp_saveInHistory, int lp_player);
void libCamp_gf_ApplyCampaignTech (int lp_player);
void libCamp_gf_TS_ApplyCampaignTechLimitsUnlockUnits (int lp_player);
void libCamp_gf_TS_ApplyCampaignTechLimitsProtoss ();
void libCamp_gf_TS_UpdateTechAddons (int lp_player);
void libCamp_gf_TS_UpdateTechUpgrades (int lp_player);
void libCamp_gf_TS_UpdateTechGroupStates ();
void libCamp_gf_TS_UpdateTechStates ();
void libCamp_gf_TS_InitializeTechCategorySingle (int lp_techGroup, text lp_name, int lp_slot);
void libCamp_gf_TS_InitializeTechCategory ();
void libCamp_gf_TS_InitializeTechGroundSingle (int lp_techSubGroup, int lp_category, string lp_unitType, text lp_name, text lp_description, text lp_tooltip, string lp_icon, string lp_iconBig, bool lp_showOnReport);
void libCamp_gf_TS_InitializeTechGroup ();
void libCamp_gf_TS_InitializeTechDataSingle (int lp_tech, int lp_group, string lp_convoID, int lp_requires);
void libCamp_gf_TS_InitializeTechData ();
void libCamp_gf_TS_ResetTechData ();
void libCamp_gf_TS_CreateTechCategoryUI ();
void libCamp_gf_TS_CreateTechGroupUI ();
void libCamp_gf_TS_CreateTechUI ();
void libCamp_gf_TS_UpdateTechGroupUI ();
void libCamp_gf_TS_UpdateTechUI ();
void libCamp_gf_TS_UpdateTechUINewGroups ();
void libCamp_gf_TS_UpdateTechVisuals ();
void libCamp_gf_TS_BuyAllTech ();
void libCamp_gf_TS_StoryCheckTechReqSingle (int lp_tech, int lp_requiredTech);
void libCamp_gf_TS_StoryCheckTechReqs ();
void libCamp_gf_TS_HelpUnitsPanel_AddEnabledUnitType (string lp_unitType);
void libCamp_gf_TS_HelpUnitsPanel_ResetEnabledUnitTypes ();
void libCamp_gf_TS_HelpUnitsPanel_UpdatePanel ();
void libCamp_gf_TS_HelpTechTree_UpdatePanel ();
string libCamp_gf_TS_BankSectionName (string lp_section);
string libCamp_gf_TS_BackToStoryModeLoadingImage (string lp_imageToDo);
text libCamp_gf_TS_FormatLoadingScreenText (int lp_mission);
string libCamp_gf_TS_MissionBankName (int lp_mission);
string libCamp_gf_StoryModeRoomStates ();
void libCamp_gf_LoadCampaignData (int lp_map);
void libCamp_gf_PrepareForMission (int lp_nextMission, bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, int lp_difficulty);
void libCamp_gf_TS_PrepareForMissionLoadingScreen (int lp_nextMission, bool lp_restart);
void libCamp_gf_PrepareForStoryMode (int lp_resultFromVictory, int lp_difficulty);
void libCamp_gf_PrepareForStoryModeTransitionalSave ();
void libCamp_gf_SetStoryModeRoomStates (string lp_roomStates);
void libCamp_gf_RegisterStoryModeRoomStatesDefaultCallback (trigger lp_defaultCallback);
void libCamp_gf_TS_LoadAllTransitionData (int lp_map);
void libCamp_gf_TS_SaveAllTransitionData (bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat);
void libCamp_gf_TS_DefaultTransitionVars (bool lp_includeTransitionDetails, bool lp_includeTech, bool lp_includeMissionFlow, bool lp_includeStates);
int libCamp_gf_TS_LoadTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_default);
bool libCamp_gf_TS_LoadTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_default);
string libCamp_gf_TS_LoadTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_default);
void libCamp_gf_TS_SaveTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_value, int lp_default);
void libCamp_gf_TS_SaveTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_value, bool lp_default);
void libCamp_gf_TS_SaveTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_value, string lp_default);
string libCamp_gf_TS_CampaignDifficultyBankKey (int lp_mission, int lp_difficulty);
void libCamp_gf_TS_LoadTransitionVars (bank lp_sourceBank, bool lp_simulation);
void libCamp_gf_TS_SaveTransitionVars (bank lp_targetBank, bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat, int lp_saveType);
void libCamp_gf_TS_UpdateTransitionVars ();
void libCamp_gf_TS_OpenCampaignBank ();
void libCamp_gf_TS_OpenMissionBanks ();
void libCamp_gf_TS_SaveMissionBanks ();
void libCamp_gf_CreateStoryModeTransitionSave (text lp_name, text lp_transition);
void libCamp_gf_SaveArcadeGameData ();
void libCamp_gf_TS_PrepareNextMissionPreloading (int lp_victoryStatus);
void libCamp_gf_TS_PrepareNextMissionRooms (int lp_victoryStatus);
void libCamp_gf_TS_PrepareNextMissionActors (int lp_victoryStatus);
void libCamp_gf_TS_PrepareRoomPreloading (int lp_room);
void libCamp_gf_TS_PrepareActorPreloading (int lp_actor);
int libCamp_gf_TS_NextMissionLocation (int lp_victoryStatus);
void libCamp_gf_TS_InitializeStoryRoomSingle (int lp_room, string lp_roomUnitString);
void libCamp_gf_TS_InitializeStoryRooms ();
void libCamp_gf_TS_InitializeStoryActorSingle (int lp_actor, string lp_unitType);
void libCamp_gf_TS_InitializeStoryActors ();
void libCamp_gf_TS_InitializeStoryModeLoadingImages ();
void libCamp_gf_CP_SetCampaignCompleted (bool lp_completed);
void libCamp_gf_CP_LoadVars ();
void libCamp_gf_CP_SaveVars ();
bool libCamp_gf_CampaignCompleted ();
void libCamp_gf_CreateCampaignTutorial (text lp_title, text lp_description, string lp_icon, string lp_movie);
string libCamp_gf_TS_Tutorial_ConvertMovieToString (string lp_movie);
string libCamp_gf_TS_Tutorial_ConvertImageToString (string lp_image);
string libCamp_gf_TS_Tutorial_ConvertStringToMovie (string lp_string);
string libCamp_gf_TS_Tutorial_ConvertStringToImage (string lp_string);
bool libCamp_gf_TS_Tutorial_AlreadyExisted (string lp_movie);
void libCamp_gf_TS_Tutorial_AddToHistory (text lp_title, text lp_description, string lp_icon, string lp_movie);
void libCamp_gf_TS_Tutorial_ResetHistory ();
void libCamp_gf_TS_Tutorial_RestoreHistoryToUI ();
void libCamp_gf_HideStoryUI (bool lp_showHide, bool lp_includeTip);
void libCamp_gf_DisplayCampaignVictoryScoreScreen (int lp_mission);
string libCamp_gf_TS_SetVictoryScreenBackground (int lp_map);
void libCamp_gf_TS_UpdateCampaignScreen (int lp_mission);
void libCamp_gf_TS_CampaignVictory ();
bool libCamp_gf_CampaignDebugModeIsOn (string lp_mode);
void libCamp_gf_TS_DebugProgressInitMissionPath ();
void libCamp_gf_TS_DebugProgressInitMissionPathEarly ();
void libCamp_gf_TS_DebugProgressInitMissionPathAverage ();
void libCamp_gf_TS_DebugProgressInitMissionPathLate ();
void libCamp_gf_TS_DebugProgressMissionPathRequireCopy (int lp_by, int lp_required, int lp_type);
void libCamp_gf_TS_DebugProgressMissionPathRequireSet (int lp_by, int lp_required, int lp_type);
void libCamp_gf_TS_DebugProgressAddMissionButton (int lp_mission, fixed lp_col, fixed lp_row);
void libCamp_gf_TS_DebugProgressCreateDialog ();
text libCamp_gf_TS_DebugProgressFormatRequirementsCount (int lp_missionCount, text lp_extraText, bool lp_met);
text libCamp_gf_TS_DebugProgressFormatRequirementsMission (int lp_mission, bool lp_met);
text libCamp_gf_TS_DebugProgressFormatMissionUnitUnlocked (int lp_mission);
text libCamp_gf_TS_DebugProgressFormatMissionCredits (int lp_mission);
void libCamp_gf_TS_DebugProgressUpdateDialog ();
void libCamp_gf_TS_DebugProgressDisplayDialog (int lp_currentMission, trigger lp_oKCallback, trigger lp_cancelCallback);
void libCamp_gf_TS_DebugProgressSaveStates ();
void libCamp_gf_TS_DebugProgressRestoreStates ();
void libCamp_gf_TS_DebugProgressMissionDialogShow ();
int libCamp_gf_TS_DebugBuyTechNumberOfUnitsUnlocked ();
void libCamp_gf_TS_DebugBuyTechAddPositionedDialogControl (int lp_type, int lp_anchor, int lp_offsetX, int lp_offsetY, int lp_width, int lp_height, text lp_label);
void libCamp_gf_TS_DebugBuyTechCreateDialog ();
void libCamp_gf_TS_DebugBuyTechCreateDialogMission ();
void libCamp_gf_TS_DebugBuyTechCreateDialogStory ();
void libCamp_gf_TS_DebugBuyTechUpdateCredits ();
void libCamp_gf_TS_DebugBuyTechUnitsUnlockAll ();
void libCamp_gf_TS_DebugBuyTechUnitsReset ();
void libCamp_gf_TS_DebugBuyTechUpgradesBuyAll ();
void libCamp_gf_TS_DebugBuyTechUpgradesReset ();
void libCamp_gf_TS_DebugBuyTechSaveMissionBank (int lp_mission);
void libCamp_gf_TS_DebugBuyTechInitPurchasableShortcut ();
void libCamp_gf_TS_DebugBuyTechInitPurchasableEarly ();
void libCamp_gf_TS_DebugBuyTechInitPurchasableAverage ();
void libCamp_gf_TS_DebugBuyTechInitPurchasableLate ();
void libCamp_gf_TS_DebugBuyTechEarly ();
void libCamp_gf_TS_DebugBuyTechAverage ();
void libCamp_gf_TS_DebugBuyTechLate ();
void libCamp_gf_PurchaseStorymodeTech ();
int libCamp_gf_TS_DebugConvertIntegerToTechCheatOption (int lp_option);
void libCamp_gf_TS_DebugSetTechCheatOption (int lp_option);
void libCamp_gf_TS_DebugUpdateTechCustomDialog ();
text libCamp_gf_TS_DebugBoolToText (bool lp_bool);
void libCamp_gf_RegisterFootageRecording (trigger lp_callback);
void libCamp_gf_TS_FootageRecording ();

// Trigger Declarations
trigger libCamp_gt__ZergDropPod;
trigger libCamp_gt__TerranDropPod;
trigger libCamp_gt_TS_MissionVictoryCallbackBlockActionQueueOneMinute;
trigger libCamp_gt_TS_MissionVictoryCallbackBlockActionQueue;
trigger libCamp_gt_TS_AbortMission;
trigger libCamp_gt__CB_ChatBubbleActivated;
trigger libCamp_gt__CB_ActivateChatBubble;
trigger libCamp_gt__CB_ChatBubbleUnitDied;
trigger libCamp_gt__CB_ShowChatBubbleOnUnit;
trigger libCamp_gt_chatbubbledebug;
trigger libCamp_gt__CB_WaitForSound;
trigger libCamp_gt__MsgDlgButtonClicked;
trigger libCamp_gt_ZS_CampaignTrialDialogQuitClicked;
trigger libCamp_gt_ZS_CampaignTrialDialogUpgradeClicked;
trigger libCamp_gt_TS_MercNewToAvailable;
trigger libCamp_gt_TS_MercUIPurchase;
trigger libCamp_gt_TS_MercUIExit;
trigger libCamp_gt_TS_BattleReportMissionReplay;
trigger libCamp_gt_TS_BattleReportSceneReplay;
trigger libCamp_gt_TS_BattleReportPanelLeave;
trigger libCamp_gt_TS_ResearchUIPurchase;
trigger libCamp_gt_TS_ResearchUIExit;
trigger libCamp_gt_TS_RoomChangeButtonResponse;
trigger libCamp_gt_TSTechConsoleExit;
trigger libCamp_gt_TSTechItemSelected;
trigger libCamp_gt_TSTechCategorySelected;
trigger libCamp_gt_TSTechConsolePurchase;
trigger libCamp_gt_TS_Tech_CalldownSupplyDepot;
trigger libCamp_gt_Debug_StartPerformanceLogging;
trigger libCamp_gt_Debug_Preloading;
trigger libCamp_gt_LoadingDone;
trigger libCamp_gt_TS_VSScreenContinue;
trigger libCamp_gt_TS_VSScreenPlayAgain;
trigger libCamp_gt_TS_EndCinematic;
trigger libCamp_gt_TS_EndCredits;
trigger libCamp_gt_TS_EndCreditsEnds;
trigger libCamp_gt_TS_CheatUsed;
trigger libCamp_gt_TS_FlyingOutHouse;
trigger libCamp_gt_TS_TerranUpTheNight;
trigger libCamp_gt_TS_Temp;
trigger libCamp_gt_TS_DebugProgressMissionButton;
trigger libCamp_gt_TS_DebugProgressUnlockSecretButton;
trigger libCamp_gt_TS_DebugProgressReset;
trigger libCamp_gt_TS_DebugProgressLaunchMission;
trigger libCamp_gt_TS_DebugProgressLaunchMissionPopup;
trigger libCamp_gt_TS_DebugProgressOK;
trigger libCamp_gt_TS_DebugProgressCancel;
trigger libCamp_gt_TS_DebugPROGRESS;
trigger libCamp_gt_TS_DebugPROGRESSDevelop;
trigger libCamp_gt_TS_DebugProgressOKCallback;
trigger libCamp_gt_TS_DebugResearchPanel;
trigger libCamp_gt_TS_DebugResearchPanelCloseButtonClicked;
trigger libCamp_gt_TS_DebugResearchPanelExit;
trigger libCamp_gt_TS_DebugResearchPanelButtonClicked;
trigger libCamp_gt_TS_DebugResearchPoint;
trigger libCamp_gt_TS_DebugMercenaryPanel;
trigger libCamp_gt_TS_DebugMercenaryPanelCloseButtonClicked;
trigger libCamp_gt_TS_DebugMercenaryPanelExit;
trigger libCamp_gt_TS_DebugMercenaryPanelButtonClicked;
trigger libCamp_gt_TS_DebugBuyTechButtonClicked;
trigger libCamp_gt_TS_DebugBuyTechConsoleExit;
trigger libCamp_gt_DebugBUYTECH;
trigger libCamp_gt_DebugDisplayTechCustomButton;
trigger libCamp_gt_DebugHideTechCustomButton;
trigger libCamp_gt_DebugTechCustomButtonClicked;
trigger libCamp_gt_DebugCREDITS;
trigger libCamp_gt_DebugDIFFICULTY;
trigger libCamp_gt_TS_DebugXDATA;
trigger libCamp_gt_TS_DebugXDEFAULT;
trigger libCamp_gt_TS_DebugXLOAD;
trigger libCamp_gt_TS_FootageRecording;
trigger libCamp_gt_TS_DebugVictorySequence;
trigger libCamp_gt_TS_DebugVictoryScoreScreen;
trigger libCamp_gt_DebugPerfTestGetFps;
trigger libCamp_gt_DebugSTARTFPS;
trigger libCamp_gt_DebugSTOPFPS;
trigger libCamp_gt_StartTensionMusic;
trigger libCamp_gt_StopTensionMusic;

// Library Initialization
void libCamp_InitVariables ();

