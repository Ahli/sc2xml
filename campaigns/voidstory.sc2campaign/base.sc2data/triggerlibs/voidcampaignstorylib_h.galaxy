include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Story (Void)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeNone = 0;
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeDebrief = 1;
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeBriefing = 2;
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeScriptedScene = 3;
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeConversation = 4;
const int libVCST_ge_PS_DebugStoryType_ZSS_DebugStoryTypeLast = 5;
const int libVCST_ge_Rooms_StoryRoomBridge = 0;
const int libVCST_ge_Rooms_StoryRoomWarCouncil = 1;
const int libVCST_ge_Rooms_StoryRoomShip = 2;
const int libVCST_ge_Rooms_StoryRoomChampionUpgrade = 3;
const int libVCST_ge_Rooms_StoryRoomAiur = 4;
const int libVCST_ge_Rooms_StoryRoomTravelScreen = 5;
const int libVCST_ge_Rooms_StoryRoomMissionScreen = 6;
const int libVCST_ge_Rooms_StoryRoomMissionArchives = 7;
const int libVCST_ge_Rooms_StoryRoomArmyUpgrade = 8;
const int libVCST_ge_Rooms_StoryRoomShipUpgrade = 9;
const int libVCST_ge_Rooms_StoryRoomDebugStoryCheat = 10;
const int libVCST_ge_Rooms_StoryRoomDebugProgressCheat = 11;
const int libVCST_ge_Rooms_StoryRoomVoid = 12;
const int libVCST_ge_StoryActivities_None = 0;
const int libVCST_ge_StoryActivities_ViewingRoom = 1;
const int libVCST_ge_StoryActivities_ViewingUI = 2;
const int libVCST_ge_StoryActivities_Cinematic = 3;
const int libVCST_ge_StoryActivities_ScriptedScene = 4;
const int libVCST_ge_StoryActivities_Conversation = 5;
const int libVCST_ge_PS_AmbientSceneStatusType_PS_AmbientSceneUnused = 0;
const int libVCST_ge_PS_AmbientSceneStatusType_PS_AmbientSceneFinished = 1;
const int libVCST_ge_PS_AmbientSceneStatusType_PS_AmbientScenePlaying = 2;
const int libVCST_ge_PS_SkipOptions_NoSkipping = 0;
const int libVCST_ge_PS_SkipOptions_SimpleSkipping = 1;
const int libVCST_ge_PS_SkipOptions_FullSkipping = 2;
const int libVCST_ge_PS_SkipOptions_SimpleSkippingWithFade = 3;
const int libVCST_ge_PS_SkipOptions_SimpleSkipOnlyFade = 4;
const int libVCST_ge_PS_FadeStyle_FadeOutOnSkip = 0x00000001;
const int libVCST_ge_PS_FadeStyle_FadeInAfter = 0x00000002;
const int libVCST_ge_PS_FadeStyle_InstantFadeInAfter = 0x00000004;
const int libVCST_ge_PS_FadeStyle_FadeOutAfter = 0x00000008;
const int libVCST_ge_PS_FadeStyle_FadeInAtStart = 0x00000010;
const int libVCST_ge_PS_FadeStyle_BlockingFadeInAtStart = 0x00000020;
const int libVCST_ge_ClickableType_Conversation = 0;
const int libVCST_ge_ClickableType_Ambient = 1;
const int libVCST_ge_ClickableType_Custom = 2;
const int libVCST_ge_ClickableType_RoomChange = 3;

// Constants
const int libVCST_gv_pSC_DEBUGSTORYMAXLISTLENGTH = 200;
const string libVCST_gv_pS_TransitionBankName = "PStoryTransition";
const int libVCST_gv_pS_AliasedUnitsMaxCount = 20;
const int libVCST_gv_pSC_RoomCount = libVCST_ge_Rooms_StoryRoomVoid;
const int libVCST_gv_pSC_MaxAmbientEvents = 4;
const int libVCST_gv_pSC_MaxAmbientScenes = 10;
const int libVCST_gv_pSC_MaxAmbientRooms = 3;
const int libVCST_gv_pS_AmbientConversationMinTimeToTrigger = 30;
const int libVCST_gv_pS_AmbientConversationMaxTimeToTrigger = 40;
const int libVCST_gv_pS_KaraxPickupMinTimeToTrigger = 30;
const int libVCST_gv_pS_KaraxPickupMaxTimeToTrigger = 40;
const string libVCST_gv_pS_LookAtMainCharacterActorRef = "::external.PFLookAtHead";
const string libVCST_gv_pS_LookAtCurrentCharacterActorRef = "::external.PFLookAtHeadCurrentCharacter";
const string libVCST_gv_pS_LookAtRohanaHairActorRef = "::external.PFRohanaLookAtHair";
const string libVCST_gv_pSC_REDIRECTPREFIX = "PSR_";
const fixed libVCST_gv_pSC_IdleLineWaitTime = 120.0;
const string libVCST_gv_pSC_ScriptedScenePrefix = "PScripted_";

// Structures
struct libVCST_gs_PS_Clickable {
    trigger lv_customCallback;
    trigger lv_preCallback;
    trigger lv_postCallback;
    trigger lv_lineCallback;
    string lv_user;
    string lv_stringID;
    unit lv_unit;
    unit lv_calloutUnit;
    bool lv_enabled;
    string lv_conversationLink;
    int lv_callout;
    int lv_calloutDialog;
    int lv_calloutSubtitle;
    int lv_calloutName;
    bool lv_new;
    int lv_lightingCutscene;
};

// Variable Declarations
string[libVCST_gv_pSC_DEBUGSTORYMAXLISTLENGTH + 1] libVCST_gv_pS_DebugStoryListInstance;
string[libVCST_gv_pSC_DEBUGSTORYMAXLISTLENGTH + 1] libVCST_gv_pS_DebugStoryListType;
int libVCST_gv_pS_DebugStorySelectedIndex;
int libVCST_gv_pS_DebugStoryListCount;
int libVCST_gv_pS_DebugStoryDialog;
int libVCST_gv_pS_DebugStoryTypeList;
int libVCST_gv_pS_DebugStorySceneList;
int libVCST_gv_pS_DebugStoryConvoTypeCheckbox;
int libVCST_gv_pS_DebugStoryConvoTypeLabel;
int libVCST_gv_pS_DebugStorySceneTypeCheckbox;
int libVCST_gv_pS_DebugStorySceneTypeLabel;
int libVCST_gv_pS_DebugStoryFilterEditBox;
int libVCST_gv_pS_DebugStoryPreviewList;
int libVCST_gv_pS_DebugStoryFilterLabel;
int libVCST_gv_pS_DebugStoryPlayButton;
int libVCST_gv_pS_DebugStoryCloseButton;
bank libVCST_gv_pS_DebugStoryBank;
int libVCST_gv_pS_DebugStoryOriginalRoom;
bool libVCST_gv_pS_InStoryCheat;
bool libVCST_gv_pS_IsLeavingMap;
bank libVCST_gv_pS_TempConvoBank;
bool libVCST_gv_pS_IsTransitionalLoad;
bank libVCST_gv_pS_TransitionBank;
int libVCST_gv_pS_CurrentSoundMode;
sound[3] libVCST_gv_pS_MainSetSounds;
string libVCST_gv_pS_CurrentAmbience;
unitgroup libVCST_gv_pS_PlanetSetUnits;
bool libVCST_gv_pS_Preloading;
bool libVCST_gv_pS_UnitsLoaded;
unit[libVCST_gv_pS_AliasedUnitsMaxCount + 1] libVCST_gv_pS_AliasedUnits;
string[libVCST_gv_pS_AliasedUnitsMaxCount + 1] libVCST_gv_pS_Aliases;
int libVCST_gv_pS_AliasedUnitCount;
unitgroup libVCST_gv_pS_VisibleUnits;
bool libVCST_gv_pS_StoryUnitsVisible;
int libVCST_gv_pS_StorySetLightingCutscene;
fixed libVCST_gv_pS_StoryFadeDuration;
bool libVCST_gv_pS_UIVisible;
bool libVCST_gv_pS_InteractionOn;
bool libVCST_gv_pS_FidgetsOn;
int libVCST_gv_pS_CurrentStoryActivity;
int libVCST_gv_pS_LastStoryActivity;
int libVCST_gv_pS_CurrentRoom;
int libVCST_gv_pS_LastUniqueRoom;
int libVCST_gv_pS_LastRoom;
trigger[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomPrepareCallbacks;
trigger[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomViewCallbacks;
trigger[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomViewStopCallbacks;
unitgroup[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomUnits;
string[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomConvoSceneFiles;
string[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_RoomUISceneFiles;
int libVCST_gv_pS_RoomUICutscene;
int libVCST_gv_pS_ActivityViewRoomTarget;
bool libVCST_gv_pS_InArchives;
int libVCST_gv_pS_RoomBeforeArchives;
trigger libVCST_gv_pS_MovingToRoomCallback;
trigger libVCST_gv_pS_RoomEnteredCallback;
int libVCST_gv_pS_NextRoom;
int[4] libVCST_gv_pS_Backgrounds;
int libVCST_gv_pS_ActiveBackground;
int[libVCST_gv_pSC_MaxAmbientRooms + 1][libVCST_gv_pSC_MaxAmbientScenes + 1][libVCST_gv_pSC_MaxAmbientEvents + 1] libVCST_gv_pS_AmbientEvents;
string[libVCST_gv_pSC_MaxAmbientRooms + 1][libVCST_gv_pSC_MaxAmbientScenes + 1] libVCST_gv_pS_AmbientSceneInstance;
timer[libVCST_gv_pSC_MaxAmbientRooms + 1][libVCST_gv_pSC_MaxAmbientScenes + 1] libVCST_gv_pS_AmbientSceneTimer;
int[libVCST_gv_pSC_MaxAmbientRooms + 1][libVCST_gv_pSC_MaxAmbientScenes + 1] libVCST_gv_pS_AmbientSceneStatus;
bool[libVCST_gv_pSC_MaxAmbientRooms + 1] libVCST_gv_pS_AmbientScenesHidden;
int[libVCST_gv_pSC_MaxAmbientRooms + 1] libVCST_gv_pS_AmbientSceneCountPerRoom;
bool libVCST_gv_pS_AmbientIsInConvoState;
timer libVCST_gv_pS_AmbientConversationTimer;
bool libVCST_gv_pS_AmbientConversationRunning;
bool[libVCST_gv_pSC_RoomCount + 1] libVCST_gv_pS_AmbientConversationValidRoom;
timer libVCST_gv_pS_KaraxPickupTimer;
bool libVCST_gv_pS_KaraxPickupEventRunning;
string libVCST_gv_pS_CurrentConvoChar;
bool libVCST_gv_pS_ConvoActive;
trigger libVCST_gv_pS_ScriptedLineCallback;
string libVCST_gv_pS_ResponseConversation;
string libVCST_gv_pS_AmbientLine;
string libVCST_gv_pS_AmbientCharacter;
string libVCST_gv_pS_ConvoListener;
int libVCST_gv_pS_ConversationScene;
point libVCST_gv_pS_ConversationCutscenePosition;
bool libVCST_gv_pS_LastConversationSkipped;
string libVCST_gv_pS_CurrentCamera;
string libVCST_gv_pS_CurrentSpeaker;
bool libVCST_gv_pS_SkipConversationCamera;
bool libVCST_gv_pS_SkipConversationLookAt;
string libVCST_gv_pS_ActiveConvoBookmarkToken;
libVCST_gs_PS_Clickable[41] libVCST_gv_pS_Clickable;
int libVCST_gv_pS_CutsceneStatEvent;
bool libVCST_gv_pS_LastScenePlayedFull;
int libVCST_gv_pS_Cutscene;

// Function Declarations
void libVCST_gf_PS_DebugStoryCheatDisplay ();
void libVCST_gf_PS_DebugStoryCheatHide ();
void libVCST_gf_PS_DebugStoryCheatUpdateList ();
void libVCST_gf_PS_DebugStoryCheatUpdateSelection ();
void libVCST_gf_PS_DebugStoryCheatPrepareConversation (string lp_convoInstance);
void libVCST_gf_PS_DebugStoryCheatCompleteMission (string lp_mission);
void libVCST_gf_PS_DebugStoryCheatSetConditionRecursive (string lp_conversationLink, string lp_groupID);
void libVCST_gf_PS_DebugStoryPreviewGroupRecursive (string lp_conversation, string lp_group);
void libVCST_gf_PS_DebugStoryPreviewLine (string lp_conversation, string lp_line);
bool libVCST_gf_PS_DebugStoryConditionPassed (string lp_userType, string lp_userInstance, string lp_userField, string lp_userIndex, string lp_compare, string lp_value);
void libVCST_gf_PS_DebugStoryAddListItem (string lp_name, string lp_listInstance, string lp_listType);
void libVCST_gf_PC_DebugProgressSaveStats ();
void libVCST_gf_PC_DebugProgressRestoreStats ();
int libVCST_gf_PS_DebugRoomFromString (string lp_roomString);
void libVCST_gf_InitializeVoidStorymode (string lp_storyMap);
void libVCST_gf_PS_ApplyStorymodeEnvironment ();
void libVCST_gf_PS_LoadStoryData ();
void libVCST_gf_PS_SaveStoryData ();
void libVCST_gf_PS_SaveConversations (bank lp_bank, string lp_section);
void libVCST_gf_PS_LoadConversations (bank lp_bank, string lp_section);
void libVCST_gf_PS_RestoreWriterStates ();
void libVCST_gf_PS_BackupSnapshotStates ();
void libVCST_gf_PS_SaveSnapshotStates ();
void libVCST_gf_PS_LoadSnapshotStates ();
bank libVCST_gf_PS_TempConversationBank ();
void libVCST_gf_PS_StartNewStorymodeEpisode ();
void libVCST_gf_PS_SaveForExit ();
void libVCST_gf_PS_TransitionalSave ();
void libVCST_gf_PS_TransitionalLoad ();
void libVCST_gf_StoryPlayMainSetSound (soundlink lp_soundLink, int lp_index);
void libVCST_gf_SetAllSoundChannelVolumesStory (int lp_mode, fixed lp_duration);
void libVCST_gf_PS_SoundMainSetStop ();
void libVCST_gf_PS_SoundFadeAll (fixed lp_duration, bool lp_wait);
void libVCST_gf_PS_SoundFadeAllExceptMusic (fixed lp_duration, bool lp_wait);
void libVCST_gf_ShowHideStoryUnits (bool lp_showHide);
void libVCST_gf_ShowHideUnitAbs (bool lp_showHide, unit lp_unit);
void libVCST_gf_StorySetUnitLocation (unit lp_unit, point lp_point);
void libVCST_gf_StoryCreateUnit (string lp_unitType, point lp_location, fixed lp_facing);
void libVCST_gf_StoryAddAliasedUnit (unit lp_unit, string lp_alias);
void libVCST_gf_StoryReplaceAliasedUnit (unit lp_oldUnit, unit lp_newUnit);
void libVCST_gf_PS_ApplyAliases ();
int libVCST_gf_PS_TravelAvailableCount ();
string libVCST_gf_NextAvailableMission (string lp_location);
string libVCST_gf_PS_SetLightingCutsceneFile ();
void libVCST_gf_PS_LightSetStopAll ();
void libVCST_gf_PS_LightSetPrimaryPlay ();
void libVCST_gf_PS_LightSetPrimaryStop ();
void libVCST_gf_PS_TipsInit ();
void libVCST_gf_PS_TipAddIf (string lp_tip, bool lp_condition);
void libVCST_gf_PS_SetCurrentLocation (string lp_newLocation, bool lp_newEpisode);
void libVCST_gf_PS_UpdateEpisodeFilter ();
void libVCST_gf_ToggleInteractives (bool lp_onOff);
void libVCST_gf_StoryCinematicMode (bool lp_onOff);
void libVCST_gf_TurnAnimationPropertiesOnOff (unit lp_unit, string lp_property, bool lp_onOff, fixed lp_blend);
void libVCST_gf_ClearAnimationwithblendtime (string lp_identifier, unit lp_unit, fixed lp_blendTime);
void libVCST_gf_FadeStoryUITransparency (fixed lp_transparency, fixed lp_time);
void libVCST_gf_StoryCutsceneFade (bool lp_fadeInOut, fixed lp_duration, bool lp_waitDontWait);
point libVCST_gf_StoryModeDefaultPosition ();
void libVCST_gf_StoryCreateUnitForCutsceneAliasing (string lp_unitType, string lp_alias);
void libVCST_gf_StoryCreateUnitForCutsceneAliasingForPlayer (string lp_unitType, string lp_alias, int lp_player);
void libVCST_gf_ShowHideStoryUI (bool lp_hideShow);
void libVCST_gf_PS_TurnAllFidgetsOnOff (bool lp_onOff);
void libVCST_gf_PS_TurnAllFidgetStatusOnOff (bool lp_onOff);
void libVCST_gf_PS_TurnAllAlternateStatusOnOff (bool lp_onOff);
void libVCST_gf_PS_ApplyAllFidgets ();
bool libVCST_gf_PS_CampaignCompleted ();
void libVCST_gf_PS_StopStoryActivitiy (int lp_activity);
void libVCST_gf_RegisterRoom (int lp_room, trigger lp_prepareCallback, trigger lp_viewCallback, trigger lp_viewStopCallback, string lp_conversationScene, string lp_uIScene);
void libVCST_gf_AddRemoveUnitForRoom (bool lp_addRemove, unit lp_unit, int lp_room);
void libVCST_gf_StartStoryActivity (int lp_activity);
int libVCST_gf_CurrentStoryActivity ();
void libVCST_gf_PS_StartActivityConversation ();
void libVCST_gf_PS_StopActivityConversation ();
void libVCST_gf_PS_StartActivityScriptedScene ();
void libVCST_gf_PS_StopActivityScriptedScene ();
void libVCST_gf_PS_StartActivityCinematic ();
void libVCST_gf_PS_StopActivityCinematic ();
void libVCST_gf_PS_StartActivityViewRoom ();
void libVCST_gf_PS_StopActivityViewRoom ();
void libVCST_gf_EnterRoom (int lp_room);
void libVCST_gf_ChangeRoom (int lp_room);
void libVCST_gf_ClearRoom (int lp_room);
void libVCST_gf_SetInArchives (bool lp_inArchives);
void libVCST_gf_SetEnterRoomCallback (trigger lp_roomEnterCallback);
void libVCST_gf_SetMovingToRoomCallback (trigger lp_movingToRoomCallback);
int libVCST_gf_CurrentRoom ();
int libVCST_gf_CurrentRoomCutscene ();
int libVCST_gf_NextRoom ();
int libVCST_gf_PreviousRoom ();
bool libVCST_gf_RoomIsUnlocked (int lp_room);
bool libVCST_gf_IsInArchives ();
void libVCST_gf_PS_PreloadRoomUIs (int lp_room);
void libVCST_gf_PS_UpdateBottomBar ();
int libVCST_gf_PS_BottomBarButtonForRoom (int lp_room);
void libVCST_gf_PS_RoomLoadUnits ();
void libVCST_gf_PS_RoomUpdateUnitVisibility ();
void libVCST_gf_PS_RoomUpdateClickablesIsVisibleOnSet ();
void libVCST_gf_PS_PrepareRoom ();
bool libVCST_gf_PS_RoomHasUnit (int lp_room, unit lp_testUnit);
void libVCST_gf_PS_RoomInit ();
void libVCST_gf_PS_PreloadRoomConversations (int lp_room);
void libVCST_gf_PS_RoomApplySceneFilters ();
string libVCST_gf_PS_SelectBackgroundCutscene (string lp_room);
string libVCST_gf_PS_ConvertRoomtoBackgroundRoomName (int lp_roomPreset);
int libVCST_gf_PS_ConvertRoomtoBackgroundRoomNumber (int lp_roomPreset);
void libVCST_gf_PS_ResetAllBackgrounds ();
void libVCST_gf_PS_HideAllBackgrounds ();
void libVCST_gf_DisplayBackground (int lp_room);
void libVCST_gf_HideBackground (int lp_room);
void libVCST_gf_RemoveBackground (int lp_room);
void libVCST_gf_SetBackgroundUIViewMode (bool lp_enabled);
void libVCST_gf_SetBackgroundConversationViewMode (bool lp_enabled);
void libVCST_gf_SetBackgroundScreenShake (bool lp_onOff);
void libVCST_gf_ShowHideAllAmbientScenes (bool lp_showHide);
void libVCST_gf_ShowHideAmbientScenesInRoom (bool lp_showHide, int lp_room);
void libVCST_gf_PS_AmbientSceneShowForConvo ();
void libVCST_gf_PlayAmbientScene (int lp_room, string lp_scene);
void libVCST_gf_PS_AmbientScenePlay (int lp_room, string lp_scene);
void libVCST_gf_PS_AmbientSceneOver (int lp_room, int lp_scene);
void libVCST_gf_PS_AmbientSceneRemove (int lp_room, int lp_scene);
void libVCST_gf_PS_AmbientSceneSetContinuousScenePlaying (string lp_ambientScene, bool lp_isPlaying);
void libVCST_gf_PS_AmbientEventFinished (int lp_Room, int lp_scene);
void libVCST_gf_PS_AmbientEventPlay (int lp_room, int lp_scene, int lp_eventIndex, string lp_ambientEvent);
void libVCST_gf_PS_AmbientSetIsInConvoState (bool lp_isInConvoState);
bool libVCST_gf_PS_AmbientSceneWaitForEventsToFinish (string lp_ambientSceneInstance);
bool libVCST_gf_PS_AmbientSceneIsContinuousScene (string lp_AmbientSceneInstance);
bool libVCST_gf_PS_AmbientSceneContinuousSceneIsPlaying (string lp_ambientScene);
int libVCST_gf_PS_AmbientGetRoomNumber (int lp_room);
void libVCST_gf_StartAmbientConversationTimer ();
void libVCST_gf_RegisterAmbientConversationRoom (int lp_room);
void libVCST_gf_PS_AmbientConversationTimerPauseUnpause (bool lp_pauseUnpause);
void libVCST_gf_PS_AmbientConversationAnimationsOnOff (bool lp_onOff);
void libVCST_gf_PS_AmbientConversationStart ();
void libVCST_gf_PS_AmbientConversationEnd ();
void libVCST_gf_StartKaraxDronePickupTimer ();
void libVCST_gf_StopKaraxDronePickupTimer ();
void libVCST_gf_PS_KaraxPickupTimerPauseUnpause (bool lp_pauseUnpause);
void libVCST_gf_PS_ApplyEyeDarts ();
void libVCST_gf_PS_RemoveEyeDarts ();
void libVCST_gf_PS_ConversationPlayClickable (string lp_clickable);
void libVCST_gf_PS_ConversationSnapshotStart (string lp_conversation);
void libVCST_gf_PS_ConversationSnapshotEnd (string lp_conversation);
void libVCST_gf_PlayScriptedConversation (string lp_conversation, int lp_skipping, string lp_primaryCharacter, int lp_fadeStyle, trigger lp_lineCallback);
void libVCST_gf_PS_ConversationPlayResponse (string lp_character, string lp_conversation, bool lp_waitOrNot);
void libVCST_gf_PS_ConversationPlayAmbientLine (string lp_character, string lp_line, bool lp_waitOrNot);
void libVCST_gf_PS_ConversationListenerSet (string lp_listenerCharacter);
void libVCST_gf_PS_ConversationSceneOpen ();
void libVCST_gf_PS_ConversationSceneClose ();
bool libVCST_gf_PS_ConversationLastWasSkipped ();
void libVCST_gf_PS_ConversationAchievementCheck (string lp_character);
void libVCST_gf_PS_StatRecordClickables (int lp_travel);
void libVCST_gf_PS_ConversationCameraApply (string lp_clickable, string lp_cameraType);
void libVCST_gf_PS_CutsceneCameraApply (string lp_cameraType, string lp_speaker);
void libVCST_gf_PS_CutsceneCameraApplyFull (string lp_cameraType, string lp_speaker, string lp_convoChar);
void libVCST_gf_PS_ApplyConversationMainCharacterLookAt ();
void libVCST_gf_PS_ApplyConversationCurrentCharacterLookAt ();
void libVCST_gf_ApplyRohanaHairLookAt ();
void libVCST_gf_AddCharacterRedirect (string lp_sourceCharacter, string lp_targetClickable);
void libVCST_gf_ClearCharacterRedirect (string lp_sourceCharacter);
void libVCST_gf_SkipNextConversationCamera ();
void libVCST_gf_PS_ConversationLookAtSkipNext ();
string libVCST_gf_PS_SceneCameraBookmark (string lp_speaker, string lp_camera, string lp_startEnd);
string libVCST_gf_PS_CameraAsString (string lp_cameraType);
string libVCST_gf_PS_ConversationCameraCurrent ();
string libVCST_gf_PS_CurrentSpeaker ();
string libVCST_gf_PS_CameraOppositeShot (string lp_cameraShot);
string libVCST_gf_PS_ClickableFromCharacter (string lp_character);
void libVCST_gf_PS_ConversationDataInit ();
unit libVCST_gf_ClickableUnit (string lp_clickableInstance);
unit libVCST_gf_PS_ClickableCalloutUnit (string lp_clickableInstance);
bool libVCST_gf_PS_ClickableIsNew (string lp_clickableInstance);
bool libVCST_gf_PS_ClickableIsEnabled (string lp_clickableInstance);
string libVCST_gf_PS_ClickableSceneNameToken (string lp_clickableInstance);
int libVCST_gf_PS_ClickableIndex (string lp_clickableInstance);
text libVCST_gf_ClickableName (string lp_clickableInstance);
text libVCST_gf_PS_ClickableCalloutSubtitle (string lp_clickableInstance);
int libVCST_gf_PS_ClickableType (string lp_clickableInstance);
int libVCST_gf_PS_ClickableIntToType (int lp_typeIndex);
bool libVCST_gf_PS_ClickableIsBackground (string lp_clickableInstance);
string libVCST_gf_PS_ClickableActorAlias (string lp_clickableInstance);
string libVCST_gf_PS_ClickableSceneFinderTag (string lp_clickableInstance);
string libVCST_gf_PS_ClickableCalloutTag (string lp_clickableInstance);
string libVCST_gf_PS_ClickableConversation (string lp_clickableInstance);
string libVCST_gf_PS_ClickableAmbientConversation (string lp_clickableInstance);
string libVCST_gf_PS_ClickableGreetingConversation (string lp_clickableInstance);
string libVCST_gf_PS_ClickableResponse (string lp_clickableInstance);
trigger libVCST_gf_PS_ClickableCustomCallback (string lp_clickableInstance);
trigger libVCST_gf_PS_ClickablePreCallback (string lp_clickableInstance);
trigger libVCST_gf_PS_ClickablePostCallback (string lp_clickableInstance);
trigger libVCST_gf_PS_ClickableLineCallback (string lp_clickableInstance);
string libVCST_gf_PC_ClickableGameLink (string lp_characterInstance);
int libVCST_gf_PC_ClickableCalloutXOffset (string lp_clickableInstance, int lp_anchor);
bool libVCST_gf_ClickableInRoom (string lp_clickable, int lp_room);
bool libVCST_gf_PS_ClickableCalloutAnchorToRight (string lp_clickable);
void libVCST_gf_PS_ClickableSetUnit (string lp_clickableInstance, unit lp_unit);
void libVCST_gf_PS_ClickableUpdateCalloutUnit (string lp_clickable);
void libVCST_gf_ClickableSetCustomCallback (string lp_clickableInstance, trigger lp_callback);
void libVCST_gf_ClickableSetPreCallback (string lp_clickableInstance, trigger lp_callback);
void libVCST_gf_ClickableSetPostCallback (string lp_clickableInstance, trigger lp_callback);
void libVCST_gf_ClickableSetLineCallback (string lp_clickableInstance, trigger lp_callback);
void libVCST_gf_ClickableToggleBackground (string lp_clickableInstance, bool lp_background);
void libVCST_gf_ClickableSetNew (string lp_clickableInstance, bool lp_isNew);
void libVCST_gf_ClickableSetEnabled (string lp_clickableInstance, bool lp_enabledDisabled);
void libVCST_gf_TurnFidgetStatusForClickableOnOff (string lp_clickable, bool lp_onOff);
void libVCST_gf_TurnAlternateStatusForClickableOnOff (string lp_clickable, bool lp_onOff);
void libVCST_gf_PS_ClickableSetIsVisibleOnSet (string lp_clickableInstance, bool lp_isVisibleOnSet);
void libVCST_gf_PS_ClickableSetLighting (string lp_clickableInstance, string lp_token);
void libVCST_gf_CreateClickable (string lp_clickableInstance, string lp_unitType, point lp_location);
void libVCST_gf_AddRemoveClickableFromRoom (bool lp_addRemove, string lp_clickableInstance, int lp_room);
void libVCST_gf_ClickableRemoveFromAllRooms (string lp_clickableInstance);
void libVCST_gf_PS_HideAllClickableLights ();
void libVCST_gf_PS_ClickableActionRun (string lp_clickableInstance);
void libVCST_gf_PS_ClickableHideLight (string lp_clickableInstance);
void libVCST_gf_ClickableSetType (string lp_clickableInstance, int lp_type);
void libVCST_gf_PS_ClickableSetLink (string lp_clickableInstance, string lp_link);
void libVCST_gf_PS_ClickableSetCalloutName (string lp_clickableInstance);
void libVCST_gf_PS_ClickableCursorUpdate (string lp_clickableInstance);
void libVCST_gf_PS_ClickableCalloutUpdate (string lp_clickableInstance);
void libVCST_gf_PS_ClickableDisplayUpdate (string lp_clickableInstance);
void libVCST_gf_PS_ClickableDisplayUpdateAll ();
void libVCST_gf_PS_ClickableCalloutShowHide (bool lp_showHide, string lp_clickableInstance);
void libVCST_gf_PS_ClickableCalloutHighlight (bool lp_highlight, string lp_clickableInstance);
void libVCST_gf_PS_ClickableLoadModel (int lp_untitledParameter001);
void libVCST_gf_PS_ClickableDataInit ();
void libVCST_gf_PS_ClickableDataUpdate ();
void libVCST_gf_PlayStorymodeScene (string lp_scene, bool lp_playOnce);
void libVCST_gf_RegisterStorymodeScene (string lp_scene, trigger lp_callback);
void libVCST_gf_PlayStorymodeCutscene (string lp_cutscene);

// Trigger Declarations
trigger libVCST_gt_PS_DebugProgressSave;
trigger libVCST_gt_PS_DebugProgressLoad;
trigger libVCST_gt_PS_DebugProgressCheatUsed;
trigger libVCST_gt_PS_DebugProgressCheatCancelled;
trigger libVCST_gt_PS_DebugStoryCheat;
trigger libVCST_gt_PS_DebugStoryCheatInit;
trigger libVCST_gt_PS_DebugStoryCheatSceneListSelect;
trigger libVCST_gt_PS_DebugStoryCheatFilterChange;
trigger libVCST_gt_PS_DebugStoryCheatCheckbox;
trigger libVCST_gt_PS_DebugStoryCheatPlay;
trigger libVCST_gt_PS_DebugStoryCheatClose;
trigger libVCST_gt_PS_SaveStoryDataCallback;
trigger libVCST_gt_PS_StoryModeMenuQuit;
trigger libVCST_gt_PS_SaveGameStart;
trigger libVCST_gt_PS_SaveGameEnd;
trigger libVCST_gt_PS_StoryPerformFadeIn;
trigger libVCST_gt_PS_EventCampaignResetData;
trigger libVCST_gt_PS_EventUIArchive_Quit;
trigger libVCST_gt_PS_EventUIArchive_PlayMission;
trigger libVCST_gt_PS_EventUIArchive_PlayScene;
trigger libVCST_gt_PS_EventUITravel_Quit;
trigger libVCST_gt_PS_EventUITravel_Launch;
trigger libVCST_gt_PS_EventUIMission_Launch;
trigger libVCST_gt_PS_EventUIAiur05Mission_Launch;
trigger libVCST_gt_PS_EventUIMission_Quit;
trigger libVCST_gt_PS_EventUIChampion_Quit;
trigger libVCST_gt_PS_EventUIArmy_Quit;
trigger libVCST_gt_PS_EventUIShip_Quit;
trigger libVCST_gt_PS_EventUIArchivesArmy;
trigger libVCST_gt_PS_EventUIArchivesSoA;
trigger libVCST_gt_PS_BackgroundScreenShake;
trigger libVCST_gt_PS_DebugBackgroundReset;
trigger libVCST_gt_PS_DebugBackgroundOff;
trigger libVCST_gt_PS_DebugBackgroundOn;
trigger libVCST_gt_PS_AmbientSceneEnded;
trigger libVCST_gt_PS_AmbientSceneTimerExpired;
trigger libVCST_gt_PS_DebugAmibentScenePlayCarriers;
trigger libVCST_gt_PS_DebugAmibentScenePlayVoidRays;
trigger libVCST_gt_PS_DebugAmibentScenePlayColossus;
trigger libVCST_gt_PS_AmbientConversationTimerExpired;
trigger libVCST_gt_Debug_PS_AmbientConversationTrigger;
trigger libVCST_gt_PS_KaraxPickupTimerExpired;
trigger libVCST_gt_PS_RoomPrepareUI;
trigger libVCST_gt_PS_RoomPrepareShipUpgrade;
trigger libVCST_gt_PS_RoomPrepareArmyUpgrade;
trigger libVCST_gt_PS_RoomPrepareStarmap;
trigger libVCST_gt_PS_RoomPrepareMission;
trigger libVCST_gt_PS_RoomViewTravel;
trigger libVCST_gt_PS_RoomViewMission;
trigger libVCST_gt_PS_RoomViewArchives;
trigger libVCST_gt_PS_RoomViewArmyUpgrade;
trigger libVCST_gt_PS_RoomViewShipUpgrade;
trigger libVCST_gt_PS_RoomViewStoryCheat;
trigger libVCST_gt_PS_RoomViewProgressCheat;
trigger libVCST_gt_PS_RoomViewStopTravel;
trigger libVCST_gt_PS_RoomViewStopMission;
trigger libVCST_gt_PS_RoomViewStopArchives;
trigger libVCST_gt_PS_RoomViewStopArmyUpgrade;
trigger libVCST_gt_PS_RoomViewStopShipUpgrade;
trigger libVCST_gt_PS_RoomViewStopStoryCheat;
trigger libVCST_gt_PS_ConversationWaitForSkip;
trigger libVCST_gt_PS_ConversationResponseRun;
trigger libVCST_gt_PS_ConversationAmbientTransmissionRun;
trigger libVCST_gt_PS_ConversationCancelAndFade;
trigger libVCST_gt_PS_ConversationCameraApply;
trigger libVCST_gt_PS_ClickableClicked;
trigger libVCST_gt_PS_InteractiveHighlightStart;
trigger libVCST_gt_PS_InteractiveHighlightStop;
trigger libVCST_gt_PS_PlayIdleLines;
trigger libVCST_gt_PS_PlayEntryAmbientLine;
trigger libVCST_gt_PS_ClickableCalloutInitDelayed;
trigger libVCST_gt_PS_CutsceneDetectSkipping;
trigger libVCST_gt_PS_CutsceneSkipped;

// Library Initialization
void libVCST_InitVariables ();

