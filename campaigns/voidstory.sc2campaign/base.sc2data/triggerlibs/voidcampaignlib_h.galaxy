include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Campaign (Void)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libVoiC_ge_PC_VoidArc_VoidArcNone = 0;
const int libVoiC_ge_PC_VoidArc_VoidArcAuirA = 1;
const int libVoiC_ge_PC_VoidArc_VoidArcKorhal = 2;
const int libVoiC_ge_PC_VoidArc_VoidArcShakuras = 3;
const int libVoiC_ge_PC_VoidArc_VoidArcPurifierA = 4;
const int libVoiC_ge_PC_VoidArc_VoidArcUlnar = 5;
const int libVoiC_ge_PC_VoidArc_VoidArcPurifierB = 6;
const int libVoiC_ge_PC_VoidArc_VoidArcTaldarim = 7;
const int libVoiC_ge_PC_VoidArc_VoidArcShadow = 8;
const int libVoiC_ge_PC_VoidArc_VoidArcAuirB = 9;
const int libVoiC_ge_DebugProgressBonusObjectiveAmount_NoObjectives = 0;
const int libVoiC_ge_DebugProgressBonusObjectiveAmount_HalfObjectives = 1;
const int libVoiC_ge_DebugProgressBonusObjectiveAmount_FullObjectives = 2;
const int libVoiC_ge_PC_Event_PC_EventFirst = 0;
const int libVoiC_ge_PC_Event_CampaignArmyCheatStarts = 1;
const int libVoiC_ge_PC_Event_CampaignArmyCheatEnds = 2;
const int libVoiC_ge_PC_Event_CampaignChampionCheatStarts = 3;
const int libVoiC_ge_PC_Event_CampaignChampionCheatEnds = 4;
const int libVoiC_ge_PC_Event_CampaignDataReset = 5;
const int libVoiC_ge_PC_Event_CampaignMapTransition = 6;
const int libVoiC_ge_PC_Event_CampaignProgressCheatStart = 7;
const int libVoiC_ge_PC_Event_CampaignProgressCheatSave = 8;
const int libVoiC_ge_PC_Event_CampaignProgressCheatLoad = 9;
const int libVoiC_ge_PC_Event_CampaignProgressMapCompleted = 10;
const int libVoiC_ge_PC_Event_CampaignProgressCheatCancel = 11;
const int libVoiC_ge_PC_Event_CampaignArchivesSynced = 12;
const int libVoiC_ge_PC_Event_UIArchivesQuit = 13;
const int libVoiC_ge_PC_Event_UIArchivesPlayMission = 14;
const int libVoiC_ge_PC_Event_UIArchivesPlayScene = 15;
const int libVoiC_ge_PC_Event_UITravelQuit = 16;
const int libVoiC_ge_PC_Event_UITravelLaunch = 17;
const int libVoiC_ge_PC_Event_UIMissionQuit = 18;
const int libVoiC_ge_PC_Event_UIMissionLaunch = 19;
const int libVoiC_ge_PC_Event_UIChampionQuit = 20;
const int libVoiC_ge_PC_Event_UIArmyQuit = 21;
const int libVoiC_ge_PC_Event_UIBottomBarRoomChange = 22;
const int libVoiC_ge_PC_Event_StoryMissionLaunch = 23;
const int libVoiC_ge_PC_Event_StoryTravelDeparture = 24;
const int libVoiC_ge_PC_Event_StoryTravelArrival = 25;
const int libVoiC_ge_PC_Event_StoryInstanceStart = 26;
const int libVoiC_ge_PC_Event_StoryStoryCheatPlay = 27;
const int libVoiC_ge_PC_Event_PC_EventLast = 28;
const int libVoiC_ge_MissionStatus_Locked = 0;
const int libVoiC_ge_MissionStatus_Available = 1;
const int libVoiC_ge_MissionStatus_Completed = 2;
const int libVoiC_ge_MissionCountOptions_Locked = 0;
const int libVoiC_ge_MissionCountOptions_Available = 1;
const int libVoiC_ge_MissionCountOptions_Completed = 2;
const int libVoiC_ge_MissionCountOptions_All = 3;
const int libVoiC_ge_MissionObjectiveState_Undiscovered = 0;
const int libVoiC_ge_MissionObjectiveState_Available = 1;
const int libVoiC_ge_MissionObjectiveState_Completed = 2;
const int libVoiC_ge_MissionObjectiveState_Failed = 3;
const int libVoiC_ge_PC_PerkState_Locked = 0;
const int libVoiC_ge_PC_PerkState_Unlocked = 1;
const int libVoiC_ge_PC_PerkState_Active = 2;
const int libVoiC_ge_PC_PerkState_Hidden = 3;
const int libVoiC_ge_MissionCondition_Sucessful = 0;
const int libVoiC_ge_MissionCondition_Simulation = 1;
const int libVoiC_ge_PC_LibertyMapID_MapNone = 0;
const int libVoiC_ge_PC_LibertyMapID_MapTRaynor01 = 1;
const int libVoiC_ge_PC_LibertyMapID_MapTRaynor02 = 2;
const int libVoiC_ge_PC_LibertyMapID_MapTRaynor03 = 3;
const int libVoiC_ge_PC_LibertyMapID_MapTHanson01 = 4;
const int libVoiC_ge_PC_LibertyMapID_MapTHanson02 = 5;
const int libVoiC_ge_PC_LibertyMapID_MapTHanson03A = 6;
const int libVoiC_ge_PC_LibertyMapID_MapTHanson03B = 7;
const int libVoiC_ge_PC_LibertyMapID_MapTTosh01 = 8;
const int libVoiC_ge_PC_LibertyMapID_MapTTosh02 = 9;
const int libVoiC_ge_PC_LibertyMapID_MapTTosh03A = 10;
const int libVoiC_ge_PC_LibertyMapID_MapTTosh03B = 11;
const int libVoiC_ge_PC_LibertyMapID_MapTHorner01 = 12;
const int libVoiC_ge_PC_LibertyMapID_MapTHorner02 = 13;
const int libVoiC_ge_PC_LibertyMapID_MapTHorner03 = 14;
const int libVoiC_ge_PC_LibertyMapID_MapTHorner04 = 15;
const int libVoiC_ge_PC_LibertyMapID_MapTHorner05S = 16;
const int libVoiC_ge_PC_LibertyMapID_MapTTychus01 = 17;
const int libVoiC_ge_PC_LibertyMapID_MapTTychus02 = 18;
const int libVoiC_ge_PC_LibertyMapID_MapTTychus03 = 19;
const int libVoiC_ge_PC_LibertyMapID_MapTTychus04 = 20;
const int libVoiC_ge_PC_LibertyMapID_MapTTychus05 = 21;
const int libVoiC_ge_PC_LibertyMapID_MapTZeratul01 = 22;
const int libVoiC_ge_PC_LibertyMapID_MapTZeratul02 = 23;
const int libVoiC_ge_PC_LibertyMapID_MapTZeratul03 = 24;
const int libVoiC_ge_PC_LibertyMapID_MapTZeratul04 = 25;
const int libVoiC_ge_PC_LibertyMapID_MapTValerian01 = 26;
const int libVoiC_ge_PC_LibertyMapID_MapTValerian02A = 27;
const int libVoiC_ge_PC_LibertyMapID_MapTValerian02B = 28;
const int libVoiC_ge_PC_LibertyMapID_MapTValerian03 = 29;
const int libVoiC_ge_PC_LibertyMapID_MapTSecret01 = 30;
const int libVoiC_ge_PC_LibertyMapID_MapTStory01 = 31;
const int libVoiC_ge_PC_LibertyMapID_MapTArcade = 32;
const int libVoiC_ge_PC_LibertyMapID_MapTSimulator = 33;
const int libVoiC_ge_PC_LibertyMapID_MapLast = 34;
const int libVoiC_ge_StoryDataType_StoryDataTypeNone = 0;
const int libVoiC_ge_StoryDataType_StoryDataTypeArmyCategory = 1;
const int libVoiC_ge_StoryDataType_StoryDataTypeArmyUnit = 2;
const int libVoiC_ge_StoryDataType_StoryDataTypeArmyUpgrade = 3;
const int libVoiC_ge_StoryDataType_StoryDataTypeHeroAbilityCategory = 4;
const int libVoiC_ge_StoryDataType_StoryDataTypeHeroAbility = 5;
const int libVoiC_ge_StoryDataType_StoryDataTypeHeroStat = 6;
const int libVoiC_ge_VolumeChannelModeCampaign_Cinematic = 0;
const int libVoiC_ge_VolumeChannelModeCampaign_Speech = 1;
const int libVoiC_ge_VolumeChannelModeCampaign_Game = 2;
const int libVoiC_ge_VolumeChannelModeCampaign_Victory = 3;
const int libVoiC_ge_VolumeChannelModeCampaign_Speech2 = 4;
const int libVoiC_ge_VolumeChannelModeCampaign_Speech3 = 5;
const int libVoiC_ge_VolumeChannelModeCampaign_SpeechAndMusicNoEffects = 6;
const int libVoiC_ge_VolumeChannelModeCampaign_LowHealthBegin = 7;
const int libVoiC_ge_VolumeChannelModeCampaign_LowHealthEnd = 8;
const int libVoiC_ge_VolumeChannelModeCampaign_Game2 = 9;
const int libVoiC_ge_VolumeChannelModeCampaign_Game3 = 10;
const int libVoiC_ge_VolumeChannelModeCampaign_MissionLaunchUI = 11;
const int libVoiC_ge_VolumeChannelModeCampaign_VictoryInstant = 12;

// Constants
const int libVoiC_gv_pCC_DifficultyCount = 4;
const string libVoiC_gv_pCC_EVENT_MISSIONSTART = "PC_MISSIONSTART";
const int libVoiC_gv_pSC_MissionObjectiveCount = 5;
const int libVoiC_gv_pCC_SoAPlayerSlot = 1;
const int libVoiC_gv_pCC_SoACurrencyMax = 50;
const int libVoiC_gv_pCC_SoACurrencyPerUpgrade = 5;
const string libVoiC_gv_pCC_ArmyCategoryStateKey = "PS_ArmyCategoryState_";
const string libVoiC_gv_pCC_ArmyUnitStateKey = "PS_ArmyUnitState_";
const int libVoiC_gv_pCC_HelpUnitPanel_EnabledUnitTypeCountMax = 100;
const int libVoiC_gv_pCC_CampaignLotVIndex = 3;
const int libVoiC_gv_pCC_CampaignEpilogueIndex = 4;
const int libVoiC_gv_pCC_DataVersion = 1;
const string libVoiC_gv_pC_StoryBankName = "PStory";
const string libVoiC_gv_pC_GameUIDataTableConnector = "&%&";

// Variable Declarations
int libVoiC_gv_pC_DebugCampaignTechDialog;
int libVoiC_gv_pC_DebugCampaignTechArmyCatCount;
string[21] libVoiC_gv_pC_DebugCampaignTechArmyCategory;
int[21] libVoiC_gv_pC_DebugCampaignTechArmyCategoryCheck;
int[21][4] libVoiC_gv_pC_DebugCampaignTechArmyUnitCheck;
int libVoiC_gv_pC_DebugCampaignTechOK;
int libVoiC_gv_pC_DebugCampaignTechCancel;
int libVoiC_gv_pC_DebugCampaignTechSwitchToSoa;
int libVoiC_gv_pC_DebugCampaignTechSoADialog;
int libVoiC_gv_pC_DebugCampaignTechSoAOK;
int libVoiC_gv_pC_DebugCampaignTechSoACancel;
int libVoiC_gv_pC_DebugCampaignTechSoATypeCount;
int[11][4] libVoiC_gv_pC_DebugCampaignTechSoAPowerCheck;
string[11] libVoiC_gv_pC_DebugCampaignTechSoAPowerType;
int libVoiC_gv_pC_DebugCampaignTechRandomizeTechButton;
trigger libVoiC_gv_pC_TechLimitsCallback;
int libVoiC_gv_pC_DebugProgressDialog;
int libVoiC_gv_pC_DebugProgressButtonOK;
int libVoiC_gv_pC_DebugProgressButtonCancel;
int libVoiC_gv_pC_DebugProgressButtonReset;
int libVoiC_gv_pC_DebugProgressButtonDirectSelect;
int libVoiC_gv_pC_DebugProgressLabelInfo;
int libVoiC_gv_pC_DebugProgressLabelExpeditionReq;
int libVoiC_gv_pC_DebugProgressLabelCharReq;
int libVoiC_gv_pC_DebugProgressLabelPurifierReq;
int libVoiC_gv_pC_DebugProgressLabelHybridReq;
int libVoiC_gv_pC_DebugProgressLabelZerusReq;
int libVoiC_gv_zS_DebugProgressLabelValerianReq;
int libVoiC_gv_zS_DebugProgressLabelValerianReq2;
int libVoiC_gv_zS_DebugProgressLabelKohalReq;
string libVoiC_gv_pC_DebugProgressLastMission;
string libVoiC_gv_pC_DebugProgressLastCreditMission;
string libVoiC_gv_pC_DebugProgressCurrentMapBak;
trigger libVoiC_gv_pC_DebugProgressExitCallbackOK;
trigger libVoiC_gv_pC_DebugProgressExitCallbackCancel;
bool libVoiC_gv_pC_DebugProgressResetUsed;
bool libVoiC_gv_pC_DebugProgressDocDirty;
bool libVoiC_gv_pC_DebugProgressShowRewards;
bool libVoiC_gv_pC_DebugProgressDirectSelectEnabled;
int libVoiC_gv_pC_DebugProgressBonusObjectiveLevel;
bool libVoiC_gv_pC_DebugProgressObjectiveRoundUp;
int libVoiC_gv_pC_DebugProgressButtonNoObjectives;
int libVoiC_gv_pC_DebugProgressButtonHalfObjectives;
int libVoiC_gv_pC_DebugProgressButtonAllObjectives;
bool libVoiC_gv_pC_DebugProgressRetailMode;
bool libVoiC_gv_pC_DebugStartedFirstStorymodeEpisode;
bank libVoiC_gv_pC_DebugProgressBank;
bool libVoiC_gv_pC_DebugProgressTempBugFlag;
int[6] libVoiC_gv_pC_DebugCutscenes;
string[6] libVoiC_gv_pC_DebugCutsceneNames;
int libVoiC_gv_pC_DebugCutsceneCount;
int libVoiC_gv_pC_DebugActiveCutscene;
string libVoiC_gv_pC_DebugWatchBookmark;
bool[6] libVoiC_gv_pC_DebugScenePaused;
bool libVoiC_gv_pC_DebugCutsceneCin;
int libVoiC_gv_pC_AchievementPosition;
int libVoiC_gv_pC_AchievementsDisplayed;
bool libVoiC_gv_pC_AchievementDebugToastSuppressed;
fixed libVoiC_gv_pC_AchievementShieldAbsorbTotal;
fixed libVoiC_gv_pC_AchievementShieldAbsorbLast;
int libVoiC_gv_pCX_CampaignDifficulty;
trigger[51] libVoiC_gv_pC_EventCallback;
bool libVoiC_gv_pC_EventIsRunning;
string[51][3] libVoiC_gv_pC_EventParameter;
trigger libVoiC_gv_zS_FootageRecordingCallback;
string[31] libVoiC_gv_pC_MissionCompleted;
int libVoiC_gv_pSX_MissionObjRewardsEarnedCurrent;
int libVoiC_gv_pC_MovieRecordingCount;
string libVoiC_gv_pC_CutsceneTimestamp;
int libVoiC_gv_pC_CurrentCampaignCutscene;
bool libVoiC_gv_pC_CampaignCutsceneSkippable;
int libVoiC_gv_pC_CampaignCutsceneDialog;
string libVoiC_gv_pC_PlaySceneCurrentScene;
int libVoiC_gv_pC_SceneStatEvent;
int libVoiC_gv_pC_SoACurrency;
int libVoiC_gv_pCX_SoACheatCurrency;
int libVoiC_gv_pCX_SoAPreviousTotalPower;
int libVoiC_gv_pCX_HelpUnitPanel_EnabledUnitTypeCount;
string[libVoiC_gv_pCC_HelpUnitPanel_EnabledUnitTypeCountMax + 1] libVoiC_gv_pCX_HelpUnitPanel_EnabledUnitTypes;
int libVoiC_gv_pC_MergedUnitsLabel;
int libVoiC_gv_pC_MergedUnitsImage;
int libVoiC_gv_pC_ArchonUnitsImage;
bool libVoiC_gv_pC_ApplyingCampaignTech;
bool libVoiC_gv_pC_CampaignTechApplied;
string libVoiC_gv_pC_CurrentMap;
string libVoiC_gv_pCX_CurrentLocation;
bool libVoiC_gv_pC_InStoryMode;
bool libVoiC_gv_pCX_DebugProgress;
bool libVoiC_gv_pC_InCompletedCampaign;
int libVoiC_gv_pCX_MapInstanceID;
bool libVoiC_gv_pC_InEpilogue;
bool libVoiC_gv_pC_LoadingComplete;
bool libVoiC_gv_pCX_IsSimulation;
bool libVoiC_gv_pCX_IsVictoryPlayAgain;
string libVoiC_gv_pCX_LastMap;
bool libVoiC_gv_pCX_LastMapSuccess;
string libVoiC_gv_pCX_LastMission;
bool libVoiC_gv_pCX_LastMissionSuccess;
bool libVoiC_gv_pCX_LastMissionSimulation;
string libVoiC_gv_pCX_LastSuccessfulMission;
string libVoiC_gv_pCX_LastLocation;
bank libVoiC_gv_pC_ArmyTechBank;
bank libVoiC_gv_pC_ArchivesBank;
string libVoiC_gv_pC_ArchiveLotVBankName;
string libVoiC_gv_pC_ArchiveEpilogueBankName;
bool libVoiC_gv_pC_ArchivesReloading;
bool libVoiC_gv_pC_ArchivesVisited;
bool libVoiC_gv_pC_InLoadedMission;
string libVoiC_gv_pC_CampaignLotVBankName;
string libVoiC_gv_pC_CampaignEpilogueBankName;
bank libVoiC_gv_pC_CampaignBank;
bank libVoiC_gv_pC_StoryBank;
int libVoiC_gv_pC_CampaignDataBackup_MissionBestTime;
string libVoiC_gv_pS_StorySimulationMission;
bank libVoiC_gv_pS_StorySimulationOriginalBank;
int libVoiC_gv_pC_StatEventLastCampaign;
int libVoiC_gv_pC_StatTargetingModeAborts;
timer libVoiC_gv_pC_StatSoATimeEnergyCapped;
bool libVoiC_gv_pC_StatSoAEnergyCapped;
bool libVoiC_gv_pC_TimeAIPaused;
int libVoiC_gv_pC_TimeAIOverrideCount;
bool libVoiC_gv_pC_TimeMissionPaused;
int libVoiC_gv_pC_WorldCoverDlg;
int libVoiC_gv__FadeDialog;
int libVoiC_gv__FadeImage;
bool libVoiC_gv_pCX_UpgradesTaught;
bool libVoiC_gv_pC_VolumeChannelModeInSpeech;
bool libVoiC_gv_pC_VolumeChannelModeInLowHP;

// Function Declarations
bool libVoiC_gf_CampaignDebugModeIsOn (string lp_mode);
void libVoiC_gf_PC_DebugCampaignTechCreateDialog ();
void libVoiC_gf_PC_DebugCampaignTechCreateSoADialog ();
void libVoiC_gf_PC_DebugCampaignTechUpdateDialog ();
void libVoiC_gf_PC_DebugCampaignTechUpdateSoADialog ();
void libVoiC_gf_PC_DebugCampaignTechUpdateData ();
void libVoiC_gf_PC_DebugCampaignTechUpdateSoAData ();
void libVoiC_gf_PC_DebugCampaignTechCloseDialog ();
void libVoiC_gf_PC_DebugCampaignTechDisplayDialog ();
void libVoiC_gf_PC_DebugCampaignTechStoreStates ();
void libVoiC_gf_PC_DebugCampaignTechRestoreStates ();
bool libVoiC_gf_PC_DebugCampaignTechIsDupe (string lp_mission, string lp_category);
void libVoiC_gf_SetTechRestrictionsCallback (trigger lp_callbackTrigger);
void libVoiC_gf_PurchaseStorymodeTech ();
void libVoiC_gf_PC_DefaultTechProgress (string lp_mission);
string libVoiC_gf_PC_DebugProgressDataTableID (string lp_type, string lp_name);
bool libVoiC_gf_PC_DebugProgressDialogOpened ();
void libVoiC_gf_PC_DebugProgressSetFirstStorymodeEpisode (bool lp_state);
void libVoiC_gf_PC_DebugProgressAddMissionButton (string lp_mission, fixed lp_col, fixed lp_row);
void libVoiC_gf_PC_DebugProgressCreateDialog ();
void libVoiC_gf_PC_DebugProgressUpdateDialog ();
void libVoiC_gf_PC_DebugProgressUpdateRequirementLabel (int lp_label, int lp_status);
void libVoiC_gf_PC_DebugProgressCloseDialog ();
string libVoiC_gf_PC_DebugProgressMissionSoATierUnlocked (string lp_mission);
text libVoiC_gf_PC_DebugProgressMapName (string lp_mission);
void libVoiC_gf_PC_DebugProgressDisplayDialog (string lp_currentMission, trigger lp_oKCallback, trigger lp_cancelCallback, bool lp_showRewards);
void libVoiC_gf_PC_DebugProgressSaveStats ();
void libVoiC_gf_PC_DebugProgressRestoreStats ();
void libVoiC_gf_PC_DebugProgressAdjustBonusObjectives ();
void libVoiC_gf_PC_DebugProgressCompleteToMission (string lp_goalMission);
void libVoiC_gf_PC_DebugProgressSetObjectiveProgress (string lp_missionObjective);
void libVoiC_gf_PC_DebugProgressUpdateTutorialProgress (string lp_currentMission);
void libVoiC_gf_PC_DebugProgressUpdateVariableCutsceneStates ();
int libVoiC_gf_PC_DebugCutsceneFromName (string lp_name);
void libVoiC_gf_CampaignAwardAchievement (string lp_achievement, int lp_player);
void libVoiC_gf_PC_AchievementCategorySet ();
void libVoiC_gf_PC_AchievementAwardEarned ();
void libVoiC_gf_PC_AchievementAwardMission (string lp_completedMission);
void libVoiC_gf_PC_AchievementAwardArmy ();
int libVoiC_gf_PC_DifficultyIndex (int lp_difficulty);
int libVoiC_gf_PC_DifficultyFromIndex (int lp_index);
void libVoiC_gf_PC_SetCampaignDifficulty (int lp_difficulty);
void libVoiC_gf_DispatchCampaignEvent (int lp_event, string lp_param1, string lp_param2, bool lp_waitOption);
void libVoiC_gf_RegisterCampaignEvent (int lp_event, trigger lp_callback);
string libVoiC_gf_CampaignEventParameter (int lp_event, int lp_index);
void libVoiC_gf_CampaignMissionStarts (trigger t);
void libVoiC_gf_RegisterFootageRecording (trigger lp_callback);
void libVoiC_gf_ZS_FootageRecording ();
void libVoiC_gf_PS_UpdatePlanetData ();
void libVoiC_gf_PC_SetLocationActive (string lp_planet);
string libVoiC_gf_PC_LocationUserData (string lp_planet);
string libVoiC_gf_PC_LocationDataString (string lp_planet);
string libVoiC_gf_PC_StoryMapBankID2 (string lp_map);
string libVoiC_gf_PC_LocationUnit (string lp_location);
string libVoiC_gf_PC_LocationContactPortrait (string lp_location);
text libVoiC_gf_PC_LocationCategoriesFluffText (string lp_location);
text libVoiC_gf_PC_LocationDataFluffText (string lp_location);
string libVoiC_gf_PC_LocationLoadingImage (string lp_loadingLocation);
void libVoiC_gf_SetPlanetAvailable (string lp_planet, bool lp_available);
text libVoiC_gf_StoryPlanetName (string lp_planet);
text libVoiC_gf_StoryUIPlanetName (string lp_planet);
bool libVoiC_gf_StoryPlanetIsAvailable (string lp_planet);
string libVoiC_gf_StoryPlanetNonmissionPitch (string lp_planet);
bool libVoiC_gf_MissionAvailableOnPlanet (string lp_planet);
string libVoiC_gf_CurrentLocation ();
string libVoiC_gf_PC_LocationCutsceneFilter (string lp_location);
string libVoiC_gf_CurrentMap ();
string libVoiC_gf_PC_CampaignMapLoadingScreenImage (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenTitle (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenSubtitle (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenBody (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenVictoryTitle (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenVictorySubtitle (string lp_map);
text libVoiC_gf_PC_CampaignMapLoadingScreenVictoryBody (string lp_map);
string libVoiC_gf_PC_CampaignMapLoadingScreenVictoryImage (string lp_map);
string libVoiC_gf_PC_CampaignMapMissionArchiveBackgroundImage (string lp_map);
bool libVoiC_gf_PC_CampaignMapTypeCheck (string lp_map, int lp_mapType);
text libVoiC_gf_PC_CampaignMapDescription (string lp_map);
string libVoiC_gf_PC_CampaignMapFile (string lp_map);
text libVoiC_gf_PC_CampaignMapName (string lp_map);
text libVoiC_gf_PC_CampaignMapHelp (string lp_map);
text libVoiC_gf_StoryMapHelp2 (string lp_map);
string libVoiC_gf_PC_CampaignMapContactPortrait (string lp_map);
string libVoiC_gf_PC_CampaignMapContactActor (string lp_map);
text libVoiC_gf_PC_CampaignMapContactName (string lp_map);
text libVoiC_gf_PC_CampaignMapContactTitle (string lp_map);
bool libVoiC_gf_PC_CampaignMapIsEpilogue (string lp_map);
string libVoiC_gf_StoryMapPlanet (string lp_map);
int libVoiC_gf_PC_MissionRewardsBonusPossible (string lp_map, string lp_type);
int libVoiC_gf_PC_MissionRewardsBonusEarned (string lp_map, string lp_type);
int libVoiC_gf_PC_MissionRewardsArmy (string lp_map);
int libVoiC_gf_PC_SoAShipRewardSpecialEarned (string lp_mission);
bool libVoiC_gf_PC_MissionRewardsDynamicArmyUnit (string lp_mission);
int libVoiC_gf_PC_MissionRewardsBonusArmy (string lp_map);
string libVoiC_gf_PC_MissionVignetteCutscene (string lp_map);
string libVoiC_gf_PC_MissionVignetteEasterEggCutscene (string lp_map);
int libVoiC_gf_MissionUnlocksSpearofAdunTier (string lp_map);
int libVoiC_gf_MissionStatus (string lp_mission);
int libVoiC_gf_MissionStatusAge (string lp_mission, int lp_status);
bool libVoiC_gf_MissionStatusCheck (string lp_mission, int lp_status);
text libVoiC_gf_MissionDebriefingText (string lp_mission);
string libVoiC_gf_MissionPitch (string lp_mission);
int libVoiC_gf_NumberOfMissions (int lp_options);
int libVoiC_gf_NumberOfLotVMissions (int lp_options);
int libVoiC_gf_NumberOfEpilogueMissions (int lp_options);
int libVoiC_gf_NumberOfMissionArcsCompleted ();
int libVoiC_gf_NumberOfMissionArcsVisited ();
int libVoiC_gf_MissionCompleteBestTime (string lp_mission, int lp_difficulty);
string libVoiC_gf_PC_MapUserDataInstance (string lp_map);
string libVoiC_gf_PC_MapDataFromUserDataInstance (string lp_map);
string libVoiC_gf_PC_StoryMapBankID (string lp_map);
string libVoiC_gf_MissionArmyCategoryUnlocked (string lp_mission);
int libVoiC_gf_PC_MissionPickupRewards (string lp_mission, int lp_type);
int libVoiC_gf_MissionRewardTotalEarned (string lp_mission, string lp_type);
int libVoiC_gf_MissionRewardTotal (string lp_mission, string lp_type);
bool libVoiC_gf_PC_MissionisInstallation (string lp_mission);
bool libVoiC_gf_MissionCompletedOnDifficulty (string lp_mission, int lp_difficulty);
int libVoiC_gf_PC_CompletedMissionCountOnDifficulty (int lp_difficulty);
string libVoiC_gf_MissionArmyUpgradeTypeUnlocked (string lp_mission);
void libVoiC_gf_LaunchMission (string lp_mission, bool lp_simulation, int lp_difficulty);
void libVoiC_gf_StoryMapSwitch (string lp_nextMap);
void libVoiC_gf_UpdateMissionFlow ();
void libVoiC_gf_PC_UpdateCompletedMissionArray ();
void libVoiC_gf_PC_SetCurrentMap (string lp_map);
void libVoiC_gf_PC_SetMissionStatusAge (string lp_mission, int lp_status, int lp_age);
void libVoiC_gf_PC_IncreaseMissionAge (string lp_mission);
void libVoiC_gf_PC_CompleteMission (string lp_mission);
void libVoiC_gf_PC_UpdateSimulationMissionAges (string lp_simulationMap);
void libVoiC_gf_PC_MarkMissionAsStatus (string lp_mission, int lp_status);
void libVoiC_gf_PC_LockUnlockMissionIfCondition (bool lp_lockUnlock, string lp_mission, bool lp_condition);
void libVoiC_gf_PC_SetMissionCompletionBestTime (string lp_mission, int lp_difficulty, int lp_time);
void libVoiC_gf_PC_SaveMapToBank (string lp_bankMap, bank lp_targetBank, bool lp_isSimulation);
void libVoiC_gf_PC_LoadMapFromBank (string lp_bankMap, bank lp_sourceBank);
void libVoiC_gf_ZS_SetObjectiveProgressData (string lp_objective, int lp_progress);
void libVoiC_gf_PS_MissionObjectivePreviousProgressSet (string lp_objective, int lp_progress);
void libVoiC_gf_PS_MissionObjectiveArchiveProgressSet (string lp_objective, int lp_progress);
text libVoiC_gf_MissionObjectiveDescription (string lp_objective);
bool libVoiC_gf_MissionObjectiveStateCheck (string lp_objective, int lp_state);
bool libVoiC_gf_MissionObjectiveIsPrimary (string lp_objective);
text libVoiC_gf_MissionObjectiveName (string lp_objective);
int libVoiC_gf_MissionObjectiveRewardsEarned (string lp_objective, string lp_type);
int libVoiC_gf_MissionObjectiveRewardsAvailable2 (string lp_objective, string lp_type);
int libVoiC_gf_MissionObjectiveItemCount (string lp_objective);
int libVoiC_gf_MissionObjectiveProgress (string lp_objective);
int libVoiC_gf_MissionObjectiveRewards (string lp_objective, string lp_type);
int libVoiC_gf_MissionObjectiveRewards2 (string lp_objective, string lp_type);
text libVoiC_gf_PS_CampaignObjectiveBonusText (string lp_objective);
int libVoiC_gf_PS_GetObjectiveForData (string lp_objectiveData);
string libVoiC_gf_PS_ObjectiveUserDataInstance (string lp_objective);
int libVoiC_gf_PS_MissionObjectivePreviousProgress (string lp_objective);
int libVoiC_gf_PS_MissionObjectiveArchiveProgress (string lp_objective);
int libVoiC_gf_PS_GetObjectiveTypeInteger (string lp_objective);
bool libVoiC_gf_PS_GetObjectiveTypeBoolean (string lp_objective);
string libVoiC_gf_PS_ObjectiveTableString (string lp_objective);
bool libVoiC_gf_PS_ObjectiveCountsDown (string lp_objective);
void libVoiC_gf_PC_MovieStartRecording (string lp_fileName);
void libVoiC_gf_PC_MovieStopRecording ();
void libVoiC_gf_DisplayConversationTimestamp (string lp_conversation);
void libVoiC_gf_DisplayTimestamp (string lp_timestamp, bool lp_waitDontWait);
void libVoiC_gf_HaltTimestamp ();
void libVoiC_gf_PC_DisplayCinematicTimestamp (string lp_scene);
string libVoiC_gf_PC_SceneMovie (string lp_scene);
string libVoiC_gf_PC_CinematicCutscene (string lp_scene);
text libVoiC_gf_StorySceneName (string lp_scene);
bool libVoiC_gf_StoryScenePlayed (string lp_scene);
void libVoiC_gf_SetStoryScenePlayed (string lp_scene, bool lp_played);
void libVoiC_gf_CampaignPlayCutscene (string lp_file, point lp_position, bool lp_waitDontWait, bool lp_allowSkip);
void libVoiC_gf_CampaignPlayCutscene2 (string lp_file, bool lp_waitDontWait, bool lp_allowSkip);
void libVoiC_gf_CampaignStopCutscene ();
void libVoiC_gf_PlayCinematic (string lp_scene, bool lp_animatic);
void libVoiC_gf_PC_FadeAllSoundsExceptMusic (fixed lp_duration, bool lp_wait);
void libVoiC_gf_PC_SoACalculateCurrency ();
void libVoiC_gf_PC_SoAUpgradeLevelSet (string lp_soAUpgrade, int lp_level);
bool libVoiC_gf_PC_SoAUpgradeSlotUnlocked (string lp_soAUpgrade);
int libVoiC_gf_PC_SoAUpgradeLevel (string lp_soAUpgrade);
int libVoiC_gf_PC_SoAUpgradeLevelMax (string lp_soAUpgrade);
text libVoiC_gf_PC_SoAUpgradeTitle (string lp_soAUpgrade);
text libVoiC_gf_PC_SoAUpgradeTooltip (string lp_soAUpgrade);
string libVoiC_gf_PC_SoAUpgradeIcon (string lp_soAUpgrade);
int libVoiC_gf_PC_SoACurrencyMax ();
int libVoiC_gf_PC_SoACurrencyAvail ();
bool libVoiC_gf_PC_SoATierRequirementsMet (string lp_perkGroup);
bool libVoiC_gf_SpearofAdunHasUnusedTech ();
void libVoiC_gf_PC_UpdateSoAStates ();
void libVoiC_gf_PC_SaveSoAToBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_LoadSoAFromBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_ApplySoATech ();
void libVoiC_gf_PC_ResetSoATech ();
string libVoiC_gf_PC_TechUnitOfArmyCategory (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryOfTechUnit (string lp_techUnit);
text libVoiC_gf_PC_ArmyCategoryName (string lp_armyCategory);
text libVoiC_gf_PC_ArmyCategoryTitle (string lp_armyCategory);
text libVoiC_gf_PC_ArmyCategoryUnitDescription (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryIcon (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryEvolutionIcon (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryUnitType (string lp_armyCategory);
soundlink libVoiC_gf_PC_ArmyCategoryUnlockedVO (string lp_armyCategory);
soundlink libVoiC_gf_PC_ArmyCategoryNewFactionVO (string lp_armyCategory);
int libVoiC_gf_PC_ArmyCategoryState (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryCutsceneFilter (string lp_armyCategory);
string libVoiC_gf_PC_ArmyStringFromUnitType (string lp_unitType);
string libVoiC_gf_PC_ArmyStringFromArmyCategory (string lp_armyCategory);
string libVoiC_gf_PC_ArmyStringFromArmyUnit (string lp_armyUnit);
void libVoiC_gf_PC_SetArmyCategoryState (string lp_armyCategory, int lp_state);
bool libVoiC_gf_ArmyCategoryStateCheck (string lp_armyCategory, int lp_state);
string libVoiC_gf_EnabledUnitTypeforArmyCategory (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryPlanetCamera (string lp_armyCategory);
string libVoiC_gf_PC_ArmyCategoryPurchasedUnit (string lp_armyCategory);
void libVoiC_gf_PC_UpdateArmyCategoryStates (int lp_player);
bool libVoiC_gf_PC_ArmyCategoryUsedInUI (string lp_armyCategory);
bool libVoiC_gf_PC_ArmyCategoryToastShown (string lp_armyCategory);
void libVoiC_gf_PC_SetArmyCategoryToastShown (string lp_armyCategory, bool lp_shown);
bool libVoiC_gf_ArmyHasUnusedTech ();
int libVoiC_gf_NumberOfUnupgradedArmyCategories ();
string libVoiC_gf_PC_StoryArmyUnitUnitType (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitOfTechUnit (string lp_armyUnit);
text libVoiC_gf_PC_ArmyUnitTitle (string lp_armyUnit);
string libVoiC_gf_PC_TechUnitOfArmyUnit (string lp_armyUnit);
string libVoiC_gf_StoryArmyUnitInCategory (string lp_category, int lp_index);
text libVoiC_gf_StoryArmyUnitName (string lp_armyUnit);
text libVoiC_gf_PC_ArmyUnitDescription (string lp_armyUnit);
text libVoiC_gf_PC_ArmyUnitStats (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitIcon (string lp_armyCategory);
string libVoiC_gf_PC_ArmyUnitMovie (string lp_armyUnit);
bool libVoiC_gf_PC_ArmyUnitFactionUnlocked (string lp_armyUnit);
bool libVoiC_gf_PC_ArmyUnitStartsLocked (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitRequiredMission (string lp_armyUnit);
string libVoiC_gf_PC_ArmyCategoryOfArmyUnit (string lp_armyUnit);
text libVoiC_gf_PC_ArmyUnitFactionName (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitFactionImage (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitFactionHoverImage (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitFactionCategoryImage (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitFaction (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitSkin (string lp_armyCategory);
int libVoiC_gf_PC_StoryArmyUnitState (string lp_armyUnit);
bool libVoiC_gf_PC_StoryArmyUnitState2 (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitCutsceneFilter (string lp_armyUnit);
string libVoiC_gf_PC_ArmyUnitSpecializationUnlockedAfterLastMission ();
void libVoiC_gf_PC_SetArmyUnitState (string lp_armyUnit, int lp_state);
void libVoiC_gf_PC_ArmyUnitSetNew (string lp_armyUnit, bool lp_new);
void libVoiC_gf_PC_UpdateArmyUnitStates ();
void libVoiC_gf_PC_SaveArmyCategoryToBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_SaveArmyUnitsToBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_LoadArmyCategoryFromBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_LoadArmyUnitsFromBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_ApplyArmyTech (int lp_player);
void libVoiC_gf_PC_ResetArmyTech ();
void libVoiC_gf_PC_PerkStateSet (string lp_campaignPerk, int lp_state);
void libVoiC_gf_EnableDisableSpearofAdunAbility (bool lp_enableDisable, string lp_ability);
void libVoiC_gf_EnableDisableSpearofAdunChosenAbilities (bool lp_enableDisable);
bool libVoiC_gf_SpearofAdunNewSystemReminderCheck ();
bool libVoiC_gf_SpearofAdunAbilityIsEnabled (string lp_ability);
bool libVoiC_gf_PC_PerkStateCheck (string lp_campaignPerk, int lp_perkState);
int libVoiC_gf_PC_PerkUISlot (string lp_campaignPerk);
int libVoiC_gf_PC_PerkGroupUIOrderX (string lp_perkGroup);
int libVoiC_gf_PC_PerkGroupMissionUIOrder (string lp_perkGroup);
bool libVoiC_gf_PC_PerkGroupUnlocked (string lp_perkGroup);
text libVoiC_gf_PC_PerkGroupName (string lp_perkGroup);
string libVoiC_gf_PC_PerkGroupOfPerk (string lp_campaignPerk);
int libVoiC_gf_PC_PerkCost (string lp_campaignPerk);
text libVoiC_gf_PC_PerkTargetingText (string lp_campaignPerk, int lp_stage);
text libVoiC_gf_PC_PerkName (string lp_campaignPerk);
text libVoiC_gf_PC_PerkTooltip (string lp_campaignPerk);
int libVoiC_gf_PC_PerkActiveCost ();
fixed libVoiC_gf_PC_PerkAbilityEnergyCost (string lp_campaignPerk);
fixed libVoiC_gf_CostOfAbility (string lp_ability, string lp_costType);
void libVoiC_gf_PC_UpdatePerkStates ();
void libVoiC_gf_PC_SavePerksToBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_LoadPerksFromBank (bank lp_bank, string lp_section);
void libVoiC_gf_PC_ApplyPerkTech ();
void libVoiC_gf_PC_ResetPerkTech ();
void libVoiC_gf_PC_ApplyTech (int lp_player);
void libVoiC_gf_PC_UpdateTechStates (int lp_player);
void libVoiC_gf_PC_ResetTech ();
void libVoiC_gf_PC_StoreTechBonusAtMissionBeginning ();
void libVoiC_gf_AddUnitTypeToUnitHelpPanel (string lp_unitType, bool lp_saveInHistory, int lp_player);
string libVoiC_gf_PS_HelpUnitsPanel_UnitTypeStringID (string lp_unitType);
bool libVoiC_gf_PS_HelpUnitsPanel_EnabledUnitTypeAlreadyExisted (string lp_unitType);
void libVoiC_gf_ZS_HelpUnitsPanel_AddEnabledUnitType (string lp_unitType);
void libVoiC_gf_ZS_HelpUnitsPanel_ResetEnabledUnitTypes ();
void libVoiC_gf_ZS_HelpUnitsPanel_UpdatePanel ();
void libVoiC_gf_TS_HelpTechTree_UpdatePanel ();
void libVoiC_gf_EnableCampaignTechUnit (bool lp_enableDisable, string lp_techUnit, int lp_player);
bool libVoiC_gf_CampaignTechUnitIsEnabled (string lp_techUnit);
string libVoiC_gf_PC_CampaignTechUnitType (string lp_techUnit);
void libVoiC_gf_PC_UpdateWeaponArmorUpgrades (int lp_player);
void libVoiC_gf_PC_EnableUpgradeAndAbilityCommandForTech (bool lp_enableDisable, int lp_catalog, string lp_entry, string lp_upgradeField, string lp_abilCommandField, int lp_player);
void libVoiC_gf_TS_HelpTechTree_UpdatePanel2 ();
void libVoiC_gf_PC_HelpTooltips_SingleUnit (string lp_techUnitCategory, string lp_buttonLink, string lp_unitLink, string lp_baseStringKey);
void libVoiC_gf_PC_HelpTooltips_DoubleUnit (string lp_techUnitCategoryA, string lp_techUnitCategoryB, string lp_buttonLink, string lp_unitLink, string lp_baseStringKey);
void libVoiC_gf_CreateStoryModeTransitionSave (text lp_name, text lp_transition);
void libVoiC_gf_ULoadCampaignData (string lp_map);
void libVoiC_gf_PC_AutoHeatMapTestMode ();
void libVoiC_gf_PC_CampaignPreload ();
bool libVoiC_gf_PC_CampaignIsComplete ();
void libVoiC_gf_PrepareForMission (string lp_nextMission, bool lp_nextIsSimulation, bool lp_nextIsVictoryAgain, int lp_difficulty);
void libVoiC_gf_PrepareForStoryModeTransitionalSave ();
void libVoiC_gf_PrepareForStoryMode (int lp_victoryDefeat, int lp_difficulty);
string libVoiC_gf_PostMissionStoryMap (string lp_mission, bool lp_simulation, int lp_victoryDefeat, bool lp_isVictoryContinue);
void libVoiC_gf_PrepareForStoryMapSwitch (string lp_nextMap);
bool libVoiC_gf_CurrentMissionIsSimulation ();
void libVoiC_gf_PC_CompletedSavesEnable ();
void libVoiC_gf_PC_UpdateCampaignScreen (string lp_mission);
void libVoiC_gf_PC_PrepareLoadingScreen (string lp_nextMap, bool lp_restart);
string libVoiC_gf_LastMap ();
bool libVoiC_gf_LastMapConditionCheck (int lp_condition);
string libVoiC_gf_LastMission ();
bool libVoiC_gf_LastMissionConditionCheck (int lp_condition);
string libVoiC_gf_LastSuccessfulMission ();
int libVoiC_gf_PC_CampaignSaveIndex ();
bool libVoiC_gf_PC_CampaignInEpilogue ();
void libVoiC_gf_PS_SaveAllTransitionData (bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat);
void libVoiC_gf_PS_LoadAllTransitionData (string lp_map);
void libVoiC_gf_PC_SaveTransitionVars (bank lp_targetBank, string lp_map, bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat, bool lp_resultFromSimulation, bool lp_resultFromVictoryAgain);
void libVoiC_gf_PC_LoadTransitionVars (bank lp_sourceBank, string lp_map);
void libVoiC_gf_ResetCampaignData ();
void libVoiC_gf_PC_SaveArmyTechBank (string lp_nextMission, bool lp_simulation);
void libVoiC_gf_PC_OpenArmyTechBank ();
string libVoiC_gf_PC_ArmyCategoryBankPath (string lp_category);
string libVoiC_gf_PC_ArmyCategoryBankSection (string lp_category);
string libVoiC_gf_PC_ArmyCategoryBankKey (string lp_category);
string libVoiC_gf_PC_ArmyUnitBankPath (string lp_unit);
string libVoiC_gf_PC_ArmyUnitBankSection (string lp_unit);
string libVoiC_gf_PC_ArmyUnitBankKey (string lp_unit);
void libVoiC_gf_PC_OpenArchiveBank ();
void libVoiC_gf_PC_ArchiveBankObjectiveSave (string lp_objective);
void libVoiC_gf_PC_ArchiveBankSave ();
void libVoiC_gf_PC_ArchiveBankLoad ();
void libVoiC_gf_PC_ArchiveBankMissionSave (string lp_mission);
void libVoiC_gf_PC_ArchivesBankSyncForLoad ();
void libVoiC_gf_PC_ArchivesBankSyncForSave ();
bool libVoiC_gf_PC_ArchivesMasterVisited ();
void libVoiC_gf_PC_OpenCampaignBank ();
bool libVoiC_gf_PC_CampaignBankExists ();
void libVoiC_gf_PC_SaveCampaignBank ();
bool libVoiC_gf_PC_MissionSectionExists (string lp_mission);
void libVoiC_gf_PC_SetMissionSectionExists (string lp_mission, bool lp_exist);
void libVoiC_gf_PC_LoadMissionSections ();
void libVoiC_gf_PC_ClampProgressToMission (string lp_mission);
void libVoiC_gf_PC_ClampSoAToMission ();
void libVoiC_gf_PC_OpenStoryBank ();
void libVoiC_gf_PC_CopyWriterStatesToSnapshot ();
bank libVoiC_gf_StoryBank ();
void libVoiC_gf_PC_LoadLibertyInfo ();
void libVoiC_gf_PC_LoadLibertyInfoIndividual (bank lp_bank, int lp_missionA, int lp_missionB, string lp_choice);
string libVoiC_gf_PC_BankMissionDifficultyKey (string lp_mission, int lp_difficulty);
string libVoiC_gf_PC_BankSectionName (string lp_map, string lp_section);
int libVoiC_gf_PC_LoadTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_default);
bool libVoiC_gf_PC_LoadTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_default);
string libVoiC_gf_PC_LoadTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_default);
void libVoiC_gf_PC_SaveTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_value, int lp_default);
void libVoiC_gf_PC_SaveTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_value, bool lp_default);
void libVoiC_gf_PC_SaveTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_value, string lp_default);
void libVoiC_gf_StorySetSimulationMission (string lp_mission);
void libVoiC_gf_StorySimulationEnd ();
bool libVoiC_gf_StoryInSimulation ();
string libVoiC_gf_PC_StorySimulationMission ();
int libVoiC_gf_PC_StatEventLast ();
void libVoiC_gf_PC_StatEventCreate (string lp_name);
void libVoiC_gf_PC_StatEventAddStr (string lp_key, string lp_value, int lp_event);
void libVoiC_gf_PC_StatEventAddInt (string lp_key, int lp_value, int lp_event);
void libVoiC_gf_PC_StatEventAddReal (string lp_key, fixed lp_value, int lp_event);
void libVoiC_gf_PC_StatEventDone (int lp_statEvent);
void libVoiC_gf_PC_StatRecordMapStart ();
void libVoiC_gf_PC_StatRecordTargetingModeAbort ();
void libVoiC_gf_PC_StatRecordSoAEnergyCapStart ();
void libVoiC_gf_PC_StatRecordSoAEnergyCapStop ();
void libVoiC_gf_PC_StatRecordMiscAbilities ();
void libVoiC_gf_PC_StatRecordMiscAbilitySingle (string lp_ability);
void libVoiC_gf_PC_StatRecordMiscUnits ();
void libVoiC_gf_PC_StatRecordMiscUnitSingle (string lp_unit);
void libVoiC_gf_PauseAITimeCampaign (bool lp_pauseUnpause);
void libVoiC_gf_PC_TimeAITemporarySet (bool lp_pauseUnpause);
void libVoiC_gf_PC_TimeAITemporaryRestore ();
void libVoiC_gf_PauseMissionTimeCampaign (bool lp_pauseUnpause);
void libVoiC_gf_PC_TimeMissionTemporarySet (bool lp_pauseUnpause);
void libVoiC_gf_PC_TimeMissionTemporaryRestore ();
void libVoiC_gf_ShowHideWorldCover (bool lp_showHide, fixed lp_transparency);
void libVoiC_gf_CinematicFade (bool lp_fadeIn, fixed lp_duration, color lp_color, bool lp_waitUntilDone);
void libVoiC_gf_CinematicFade3 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libVoiC_gf_CinematicFade4 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libVoiC_gf__FadeCreateDialog ();
actor libVoiC_gf_AttachModelToUnit (unit lp_unit, string lp_model, string lp_attachPoint);
void libVoiC_gf_ClearAnimationwithblendtime (string lp_identifier, unit lp_unit, fixed lp_blendTime);
void libVoiC_gf_PC_ClearAnimationFromActor (string lp_identifier, actor lp_actor, fixed lp_blendTime);
string libVoiC_gf_PC_CatalogGetFieldArrayValue (int lp_catalog, string lp_entry, string lp_field, int lp_index, int lp_player);
string libVoiC_gf_PC_GetDataIDFromUIID (int lp_type, int lp_uIItemID);
int libVoiC_gf_PC_GetUIIDFromDataID (int lp_type, string lp_dataID);
void libVoiC_gf_PC_StoreDataUIIDIntoDataTable (int lp_type, string lp_dataID, int lp_uIItemID);
string libVoiC_gf_PC_StoryDataTableName (int lp_type, string lp_name);
string libVoiC_gf_PC_ClickableConversationLink (string lp_characterInstance);
text libVoiC_gf_FormatTimeCampaign (int lp_second);
string libVoiC_gf_PC_ChampResAbility (string lp_champion);
void libVoiC_gf_SetAllSoundChannelVolumesCampaign (int lp_mode);
void libVoiC_gf_MuteUnmuteAllSoundChannelsExcept (bool lp_muteUnmute, int lp_ignoredChannel, playergroup lp_players);
void libVoiC_gf_PC_MuteUnmuteExclusive (bool lp_muteUnmute, int lp_muteChannel, int lp_ignoredChannel, playergroup lp_players);

// Trigger Declarations
trigger libVoiC_gt_PC_DebugCampaignTechOK;
trigger libVoiC_gt_PC_DebugCampaignTechCancel;
trigger libVoiC_gt_PC_DebugCampaignTechRandomizeClicked;
trigger libVoiC_gt_PC_DebugCampaignTechArmyUnitClicked;
trigger libVoiC_gt_PC_DebugCampaignTechSoAButtonClicked;
trigger libVoiC_gt_PC_DebugCampaignTechSoAOK;
trigger libVoiC_gt_PC_DebugCampaignTechSoACancel;
trigger libVoiC_gt_PC_DebugCampaignTechSoAPerkClicked;
trigger libVoiC_gt_PC_DebugTech;
trigger libVoiC_gt_PC_DebugProgressMissionButtonClicked;
trigger libVoiC_gt_PC_DebugProgressDirectMissionButtonClicked;
trigger libVoiC_gt_PC_DebugProgressDirectSelectButtonClicked;
trigger libVoiC_gt_PC_DebugProgressOK;
trigger libVoiC_gt_PC_DebugProgressLaunchMission;
trigger libVoiC_gt_PC_DebugProgressDirectLaunchMission;
trigger libVoiC_gt_PC_DebugProgressCancel;
trigger libVoiC_gt_PC_DebugProgressReset;
trigger libVoiC_gt_PC_DebugProgressBonusObjectiveButtonClicked;
trigger libVoiC_gt_PC_DebugProgress;
trigger libVoiC_gt_PC_DebugProgressDevelop;
trigger libVoiC_gt_PC_DebugProgressOKCallback;
trigger libVoiC_gt_PC_DebugProgressCancelCallback;
trigger libVoiC_gt_PC_DebugProgressRetailMode;
trigger libVoiC_gt_PC_DebugCutscenePlay;
trigger libVoiC_gt_PC_DebugCutsceneStop;
trigger libVoiC_gt_PC_DebugCutscenePause;
trigger libVoiC_gt_PC_DebugCutsceneSelect;
trigger libVoiC_gt_PC_DebugCutsceneSeek;
trigger libVoiC_gt_PC_DebugCutsceneCinematicMode;
trigger libVoiC_gt_PC_DebugCutsceneGoToBookmark;
trigger libVoiC_gt_PC_AchievementShieldAbsorb;
trigger libVoiC_gt_ZS_FootageRecording;
trigger libVoiC_gt_PC_DisplayTimestamp;
trigger libVoiC_gt_PC_DisplayTimestampSkippable;
trigger libVoiC_gt_PC_WaitForDialogCutscene;
trigger libVoiC_gt_PC_WaitForCutscene;
trigger libVoiC_gt_PC_CampaignCutsceneEnded;
trigger libVoiC_gt_PC_PlaySceneSkippable;
trigger libVoiC_gt_PC_CinematicDetectSkipping;
trigger libVoiC_gt_PC_SceneSkipped;
trigger libVoiC_gt_PC_TrackLoadingComplete;
trigger libVoiC_gt_PC_ArchivesBankLoadSyncComplete;
trigger libVoiC_gt_PC_ArchivesBankSaveSyncComplete;
trigger libVoiC_gt_PC_ArchivesHandleMissionLoad;
trigger libVoiC_gt_PC_StatUnitCreated;
trigger libVoiC_gt_PC_StatDamageTaken;
trigger libVoiC_gt_PC_StatDamageHealed;
trigger libVoiC_gt_PC_StatUnitDies;
trigger libVoiC_gt_PC_StatAbilityUsed;

// Library Initialization
void libVoiC_InitVariables ();

