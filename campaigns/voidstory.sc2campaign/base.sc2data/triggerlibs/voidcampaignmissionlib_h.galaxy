include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Mission (Void)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libVCMI_ge_SpearofAdunTargetingExitType_ByCanceling = 0;
const int libVCMI_ge_SpearofAdunTargetingExitType_ByFiring = 1;
const int libVCMI_ge_ChampionTypes_ArtanisChampion = 0;
const int libVCMI_ge_ChampionTypes_DarkArchonChampion = 1;
const int libVCMI_ge_ChampionTypes_DarkTemplarChampion = 2;
const int libVCMI_ge_ChampionTypes_FenixChampion = 3;
const int libVCMI_ge_ChampionTypes_ReaverChampion = 4;
const int libVCMI_ge_ChampionTypes_ScoutChampion = 5;
const int libVCMI_ge_ChampionTypes_VulcanChampion = 6;
const int libVCMI_ge_ChampionTypes_ZeratulVoidAiur01 = 7;
const int libVCMI_ge_MissionCheatUIType_None = 0;
const int libVCMI_ge_MissionCheatUIType_Button = 1;
const int libVCMI_ge_MissionCheatUIType_ButtonEditBoxCombo = 2;
const int libVCMI_ge_MissionCheatType_None = 0;
const int libVCMI_ge_MissionCheatType_Stage = 1;
const int libVCMI_ge_MissionCheatType_Mechanic = 2;
const int libVCMI_ge_MissionCheatType_User01 = 3;
const int libVCMI_ge_MissionCheatType_User02 = 4;
const int libVCMI_ge_CampaignMissionGameResultType_None = 0;
const int libVCMI_ge_CampaignMissionGameResultType_Victory = 1;
const int libVCMI_ge_CampaignMissionGameResultType_Defeat = 2;
const int libVCMI_ge_PM_HeroType_PM_HeroType_None = 0;
const int libVCMI_ge_PM_HeroType_PM_HeroType_Kerrigan = 1;
const int libVCMI_ge_PM_HeroType_PM_HeroType_Fenix = 2;
const int libVCMI_ge_PM_HeroType_PM_HeroType_Stukov = 3;
const int libVCMI_ge_PM_HeroType_PM_HeroType_Zagara = 4;
const int libVCMI_ge_PM_HeroType_PM_HeroType_Kerrigan_XelNaga = 5;
const int libVCMI_ge_SpearofAdunEnergyType_Absolute = 0;
const int libVCMI_ge_SpearofAdunEnergyType_Percent = 1;
const int libVCMI_ge_SpearofAdunEnergyType_Regeneration = 2;
const int libVCMI_ge_MissionTransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libVCMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libVCMI_ge_MissionTransmissionPortraitOptioins_DontShowPortrait = 2;
const int libVCMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libVCMI_ge_MissionTransmissionCueSoundOptions_PlayCueSound = 1;
const int libVCMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libVCMI_ge_MissionTransmissionOptions_ChatBubble = 0;
const int libVCMI_ge_DropPodRace_Terran = 0;
const int libVCMI_ge_DropPodRace_Zerg = 1;
const int libVCMI_ge_BurrowUnburrowOption_Burrow = 0;
const int libVCMI_ge_BurrowUnburrowOption_Unburrow = 1;
const int libVCMI_ge_CacheResourceType_CustomResource = 0;
const int libVCMI_ge_CacheResourceType_Mineral = 1;
const int libVCMI_ge_CacheResourceType_Vespene = 2;
const int libVCMI_ge_CacheResourceType_Mutagen = 3;
const int libVCMI_ge_CacheResourceType_Influence = 4;
const int libVCMI_ge_CacheResourceType_Solarite = 5;
const int libVCMI_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libVCMI_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libVCMI_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libVCMI_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libVCMI_ge_CampaignMessageType_MissionFailed = 0;
const int libVCMI_ge_CampaignMessageType_Hint = 1;
const int libVCMI_ge_CampaignMessageType_SimpleHint = 2;
const int libVCMI_ge_CampaignMessageType_Secret = 3;
const int libVCMI_ge_CampaignMessageType_Warning = 4;
const int libVCMI_ge_CampaignMessageType_NewUnitAcquired = 5;
const int libVCMI_ge_CampaignMessageType_NewUnitAvailable = 6;
const int libVCMI_ge_CampaignMessageType_NewTechAvailable = 7;
const int libVCMI_ge_CampaignMessageType_NewUnitAvailable2 = 8;
const int libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libVCMI_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libVCMI_ge_CampaginReticleType_ZergMainObjective = 0;
const int libVCMI_ge_CampaginReticleType_ZergBonusObjective = 1;
const int libVCMI_ge_CampaginReticleType_ZergEnemy = 2;
const int libVCMI_ge_CampaginReticleType_TerranMainObjective = 3;
const int libVCMI_ge_CampaginReticleType_TerranBonusObjective = 4;
const int libVCMI_ge_CampaginReticleType_TerranEnemy = 5;
const int libVCMI_ge_CampaginReticleType_ProtossMainObjective = 6;
const int libVCMI_ge_CampaginReticleType_ProtossBonusObjective = 7;
const int libVCMI_ge_CampaginReticleType_ProtossEnemy = 8;
const int libVCMI_ge_CampaginReticleSize_Large = 0;
const int libVCMI_ge_CampaginReticleSize_Medium = 1;
const int libVCMI_ge_CampaginReticleSize_Small = 2;

// Constants
const string libVCMI_gv_pMC_SoundDataTableIdentifier = "PM_SoundDataTable_";
const string libVCMI_gv_pMC_SoATargetingEventExited = "PM_SoATargetingEventExited";
const string libVCMI_gv_pMC_SoATargetingParamReason = "PM_SoATargetingParamReason";
const int libVCMI_gv_pMC_SOATARGETCOUNTMAX = 5;
const int libVCMI_gv_pMC_MissionCheat_PanelCountMAX = 4;
const int libVCMI_gv_pMC_MissionCheat_MaxCheats = 13;
const fixed libVCMI_gv_campaignObjectiveDelay = 2.0;
const fixed libVCMI_gv_campaignHintDelay = 2.0;
const fixed libVCMI_gv_campaignSecretDelay = 5.0;
const fixed libVCMI_gv_campaignAchievementDelay = 2.0;
const int libVCMI_gv_pMC_HEROCOUNT = 5;
const fixed libVCMI_gv_pM_ReviveCooldownTimeKerrigan = 60.0;
const fixed libVCMI_gv_pM_ReviveCooldownTimeStukov = 60.0;
const fixed libVCMI_gv_pM_ReviveCooldownTimeZagara = 15.0;
const fixed libVCMI_gv_pM_ReviveCooldownTimeFenix = 60.0;
const fixed libVCMI_gv_pM_ReviveCooldownTimeKerriganXelNaga = 60.0;

// Structures
struct libVCMI_gs_MissionCheat {
    string lv_titleString;
    text lv_titleText;
    text lv_description;
    int lv_buttonDialog;
    int lv_editBoxDialog;
    int lv_uIType;
    int lv_cheatType;
    trigger lv_trigger;
};

// Variable Declarations
int libVCMI_gv_pM_MissionAutoSaveIndex;
bool libVCMI_gv_pM_MissionAutoSaveDone;
int libVCMI_gv_pM_SoundDataTableIndex;
bool libVCMI_gv_pM_InCinematic;
int libVCMI_gv_pM_ScreenMode;
fixed libVCMI_gv_pM_CinematicModeSoAEnergy;
unit libVCMI_gv_sOA_CasterUnit;
unitgroup libVCMI_gv_pM_SoACasterGroup;
int libVCMI_gv_pM_SoATargetingChargesSpent;
int libVCMI_gv_pM_SoATargetingChargesTotal;
bool libVCMI_gv_pM_SoATargetingTransitioning;
string libVCMI_gv_pM_SoATargetingModel;
string libVCMI_gv_pM_SoATargetingUnitType;
unit[libVCMI_gv_pMC_SOATARGETCOUNTMAX + 1] libVCMI_gv_pM_SoATargetingUnit;
actor[libVCMI_gv_pMC_SOATARGETCOUNTMAX + 1] libVCMI_gv_pM_SoATargetingActors;
string libVCMI_gv_pM_SoATargetingAbilityInstance;
string libVCMI_gv_pM_SoATargetingBehavior;
string libVCMI_gv_pM_SoATargetingActivateAbility;
abilcmd libVCMI_gv_pM_SoATargetingExecuteCommand;
string libVCMI_gv_pM_SoATargetingCooldown;
order libVCMI_gv_pM_SoATargetingOrder;
unitgroup libVCMI_gv_pM_SoATargetingDirectionGroup;
timer libVCMI_gv_soA_TargetingMode_Timer;
int libVCMI_gv_soA_TargetingMode_TimesUsed;
int libVCMI_gv_soA_TargetingMode_TimeSpent;
bool libVCMI_gv_pM_SoATargetingCycling;
bool libVCMI_gv_pM_SoAExitInstantly;
bool libVCMI_gv_pM_SoAForceExit;
point[libVCMI_gv_pMC_SOATARGETCOUNTMAX + 1] libVCMI_gv_pM_SoAOrbitalStrike_Points;
actor[libVCMI_gv_pMC_SOATARGETCOUNTMAX + 1] libVCMI_gv_pM_SoAOrbitalStrike_Actors;
point[4] libVCMI_gv_sOA_GravitonBomb_Points;
actor[4] libVCMI_gv_sOA_GravitonBomb_Actors;
int libVCMI_gv_sOA_TimeFreezeUI;
unit libVCMI_gv_sOA_Recall_PrimaryNexus;
fixed libVCMI_gv_fenixChargeFacing;
fixed libVCMI_gv_fenixChargeEnergyCost;
unit libVCMI_gv_pM_ChampionUnit;
fixed libVCMI_gv_kerriganPsiStrikeFacing;
fixed libVCMI_gv_kerriganPsiStrikeEnergyCost;
fixed libVCMI_gv_kerriganAstralShiftFacing;
fixed libVCMI_gv_kerriganAstralShiftEnergyCost;
bool libVCMI_gv_amonStrikeUnitSelected;
int libVCMI_gv_pM_GameCheat_DialogWidth;
int libVCMI_gv_pM_GameCheat_DialogHeight;
int libVCMI_gv_pM_GameCheat_Dialog;
int libVCMI_gv_pM_GameCheat_Minimize;
int libVCMI_gv_pM_GameCheat_OpenMissionCheat;
int libVCMI_gv_pM_GameCheat_ArrayIndex;
bool[26] libVCMI_gv_pM_GameCheat_CheatState;
int[26] libVCMI_gv_pM_GameCheat_CheckBox;
bool libVCMI_gv_pM_GameCheat_Minimized;
libVCMI_gs_MissionCheat[libVCMI_gv_pMC_MissionCheat_MaxCheats + 1] libVCMI_gv_pM_MissionCheat_Cheats;
int libVCMI_gv_pM_MissionCheat_Dialog;
int[libVCMI_gv_pMC_MissionCheat_PanelCountMAX + 1] libVCMI_gv_pM_MissionCheat_Panel;
int libVCMI_gv_pM_MissionCheat_CloseButton;
bool[libVCMI_gv_pMC_MissionCheat_PanelCountMAX + 1] libVCMI_gv_pM_MissionCheat_CategoryUsed;
int libVCMI_gv_pM_MissionCheat_ArrayCount;
bool libVCMI_gv_pM_MissionCheat_CloseButtonClicked;
bool libVCMI_gv_pM_MissionCheat_ArraySorted;
int[libVCMI_gv_pMC_MissionCheat_MaxCheats + 1] libVCMI_gv_pM_MissionCheat_ListPriority;
unit libVCMI_gv_pM_FlyoverUnit;
bool libVCMI_gv_pM_FlyoverModeEnabled;
int libVCMI_gv_pM_GameOverResult;
bool libVCMI_gv_pM_MissionEndStatsRecorded;
bool libVCMI_gv_pM_MissionVictoryActionQueyeEmpty;
int libVCMI_gv_pM_MissionCompleteTime;
unit[libVCMI_gv_pMC_HEROCOUNT + 1] libVCMI_gv_pM_HeroRevivingUnit;
unit[libVCMI_gv_pMC_HEROCOUNT + 1] libVCMI_gv_pM_HeroReviverUnit;
int[libVCMI_gv_pMC_HEROCOUNT + 1] libVCMI_gv_pM_HeroRevivePlayer;
abilcmd[libVCMI_gv_pMC_HEROCOUNT + 1] libVCMI_gv_pM_HeroReviveCommand;
string[libVCMI_gv_pMC_HEROCOUNT + 1] libVCMI_gv_pM_HeroReviveCDLink;
bool libVCMI_gv_pM_ReviveUseAltMessage;
unit libVCMI_gv_pM_SoAUnit;
fixed libVCMI_gv_pM_SoALastKnownEnergy;
camerainfo libVCMI_gv_pM_SoASceneCamera;
bool libVCMI_gv_pM_SoAPaused;
int libVCMI_gv_pM_PlanetPortrait;
camerainfo libVCMI_gv_pM_PlanetPortraitPlayerCamera;
bool libVCMI_gv_pM_NeedPylonAbilityHighlightOn;
bool libVCMI_gv_pM_NeedPylonEnabled;
int libVCMI_gv_pM_NeedPylonFoodRequired;
int libVCMI_gv_pM_NeedPylonFoodRequired2Index;
int libVCMI_gv_pM_NeedPylonFoodRequired3Index;
int libVCMI_gv_pM_NeedPylonFoodRequired4Index;
int libVCMI_gv_pM_NeedPylonFoodRequired6Index;
bool libVCMI_gv_pM_PhotonCannonBuilt;
bool libVCMI_gv_pM_PhotonCannonTipPlayed;
timer libVCMI_gv_pM_CombatTimer;
text[21] libVCMI_gv_pM_MissionTipTitle;
text[21] libVCMI_gv_pM_MissionTipDescription;
string[21] libVCMI_gv_pM_MissionTipIcons;
int[21] libVCMI_gv_pM_MissionTipType;
int libVCMI_gv_pM_MissionTipCount;
int libVCMI_gv_pM_MissionHelpButton;
string[21] libVCMI_gv_pM_MissionTip;
int libVCMI_gv_pM_MissionHelpButtonTipPanel;
int libVCMI_gv_pM_SendTransmissionCampaignIndex;
int libVCMI_gv_pM_SendTransmissionCampaignPortrait;
unit libVCMI_gv_pM_SendTransmissionCampaignSpeaker;
trigger libVCMI_gv_pM_SendTransmissionCampaignTrigger;
int libVCMI_gv_pM_SendTransmissionCampaignPlayingTick;
bool libVCMI_gv_pM_SendTransmissionCampaignChatBubbleOn;
point libVCMI_gv_pM_DropPod_TP_Location;
unitgroup libVCMI_gv_pM_DropPod_TP_Units;
int libVCMI_gv_pM_DropPod_TP_Player;
unit libVCMI_gv_pM_DropPod_TP_ZergBuilding;
actor libVCMI_gv_pM_UpgradeReticle;
int libVCMI_gv_pM_UpgradeTextTag;
unit libVCMI_gv_pM_UpgradeUnit;

// Function Declarations
void libVCMI_gf_AIDarkArchon (int lp_owner, unit lp_darkArchon, unitgroup lp_nearbyUnits);
void libVCMI_gf_AIHighTemplarTaldarim (int lp_owner, unit lp_highTemplarTaldarim, unitgroup lp_nearbyUnits);
unitgroup libVCMI_gf_AITacticalEnemiesWithinRange (unit lp_unit, fixed lp_range, unitfilter lp_filter);
void libVCMI_gf_PM_MissionAutoSave (text lp_description);
void libVCMI_gf_CreateMissionAutosavePoint (text lp_description);
void libVCMI_gf_CreateExplosionatPointAdvanced (point lp_point, string lp_actor, soundlink lp_sound);
bool libVCMI_gf_PlayerInCinematicModeCampaign ();
string libVCMI_gf_PM_SoundDataTableName ();
void libVCMI_gf_PlaySoundCinematic (soundlink lp_soundLink, playergroup lp_players, fixed lp_volume, fixed lp_offset);
void libVCMI_gf_StopCinematicSounds ();
void libVCMI_gf_SetScreenModeCampaign (int lp_mode, fixed lp_duration);
void libVCMI_gf_CinematicModeCampaign (bool lp_onOff, fixed lp_duration, bool lp_waitOptions);
void libVCMI_gf_PM_CinematicModeNoWait (bool lp_onOff, fixed lp_duration);
void libVCMI_gf_PM_CinematicModeInternal (bool lp_onOff, fixed lp_duration);
void libVCMI_gf_SpearofAdunTargetingModeExited (trigger t, int lp_exitType);
string libVCMI_gf_SpearofAdunTargetingModeAbility ();
void libVCMI_gf_PM_SoATargetingModeEnter ();
void libVCMI_gf_PM_SoATargetingModeExit ();
void libVCMI_gf_PM_SoATargetingCleanupActorsAndUnits ();
void libVCMI_gf_PM_SoACasterUnitSet (unit lp_unit);
bool libVCMI_gf_PM_SoATargetingPauseEnabled ();
void libVCMI_gf_PM_SetFogAlphaOverTime (fixed lp_targetAlpha, fixed lp_duration);
void libVCMI_gf_PM_ResetFogAlphaOverTime (fixed lp_duration);
void libVCMI_gf_CreateOrbitalStrikeTarget (int lp_targetIndex, point lp_targetPoint);
void libVCMI_gf_FireOrbitalStrikeAtTarget (int lp_targetIndex);
void libVCMI_gf_CleanUpOrbitalStrikeTargets ();
void libVCMI_gf_EnterOrbitalStrikeTargetingMode ();
void libVCMI_gf_CreateGravitonBombTarget (int lp_targetIndex, point lp_targetPoint);
void libVCMI_gf_FireGravitonBombAtTarget (int lp_targetIndex);
void libVCMI_gf_EnterGravitonBombTargetingMode ();
void libVCMI_gf_FireSingleThermalLanceShot (point lp_originPoint, point lp_targetPoint);
void libVCMI_gf_SOA_TimeFreezeVisual (fixed lp_cameraPOSX, fixed lp_cameraPOSY);
void libVCMI_gf_PM_AddAlarakAvatarUpgrade (int lp_player);
void libVCMI_gf_PM_RemoveAlarakAvatarUpgrade (int lp_player);
void libVCMI_gf_PM_RemoveAlarakSoulStealUpgrade ();
void libVCMI_gf_PM_AddAlarakSoulStealUpgrade ();
point libVCMI_gf_AlarakKnockbackOffsetFindPoint (fixed lp_angle, point lp_startingPoint, fixed lp_distance);
void libVCMI_gf_PM_DetectionUpgradesApply ();
void libVCMI_gf_PM_MissionCheat_UpdateButtonEnabled ();
void libVCMI_gf_PM_MissionCheat_ButtonTextInit ();
void libVCMI_gf_AddMissionCheat (string lp_command, string lp_description, trigger lp_trigger, int lp_cheatType, int lp_uIType);
int libVCMI_gf_MissionCheatEditBoxValueInteger (trigger lp_cheatTrigger);
fixed libVCMI_gf_MissionCheatEditBoxValueReal (trigger lp_cheatTrigger);
string libVCMI_gf_MissionCheatEditBoxValueString (trigger lp_cheatTrigger);
void libVCMI_gf_GameOver (int lp_gameOverType);
bool libVCMI_gf_GameIsOver ();
void libVCMI_gf_PM_PostMissionVictoryUpdate ();
void libVCMI_gf_PM_MissionEndStats (int lp_type);
void libVCMI_gf_RunMissionVictorySequence (trigger lp_victoryCinematic);
void libVCMI_gf_EndCampaignMission (int lp_player, int lp_type);
void libVCMI_gf_PU_CampaignVictory ();
void libVCMI_gf_PU_CampaignVictory2 ();
void libVCMI_gf_HandleHeroDeathVoid (unit lp_heroUnit, unit lp_reviveLocation, fixed lp_reviveTime);
void libVCMI_gf_ReviveHeroInstantly (unit lp_heroUnit, bool lp_displayReviveMessage);
void libVCMI_gf_PM_HeroRevive (int lp_heroType);
int libVCMI_gf_PM_HeroTypeFromUnitType (string lp_unitType);
unit libVCMI_gf_PM_FindPrimaryTownHall (int lp_player);
void libVCMI_gf_SetHeroIsAliveStatus (bool lp_isAlive, string lp_hero);
void libVCMI_gf_SetSpearofAdunEnergy (fixed lp_energy, int lp_type);
fixed libVCMI_gf_SpearofAdunEnergy (int lp_type);
void libVCMI_gf_PlaySpearofAdunAttackCutscene (camerainfo lp_camera);
void libVCMI_gf_PauseUnpauseSpearofAdunCooldowns (bool lp_pauseUnpause);
void libVCMI_gf_PM_SoACreateUnit ();
void libVCMI_gf_PreparePlanetPortraitZoomIn (string lp_model, camerainfo lp_camera, string lp_light);
void libVCMI_gf_ZoomInPlanetPortrait ();
void libVCMI_gf_HidePlanetPortrait ();
void libVCMI_gf_StartAIPersonalityForPlayerCampaign (int lp_player, string lp_personality);
void libVCMI_gf_StartAIPersonalitiesForAllPlayersCampaign ();
void libVCMI_gf_StartCampaignAIForAllPlayersVoid ();
void libVCMI_gf_StartCampaignAIForPlayerVoid (int lp_player);
void libVCMI_gf_EnableVoidCampaignAIBehaviorForAllPlayers ();
void libVCMI_gf_EnableVoidCampaignAIBehaviorForPlayer (int lp_player);
void libVCMI_gf_EnableDisableNeedPylonInfo (bool lp_enableDisable);
bool libVCMI_gf_NeedPylonHighlightOn ();
bool libVCMI_gf_ValidAntiAirUnitIsNearUnit (int lp_player, unit lp_unit);
void libVCMI_gf_RemindPlayertoCreateAntiAirUnits ();
void libVCMI_gf_RemindPlayertoCompleteBonusObjective (string lp_bonusObjective, fixed lp_delay);
void libVCMI_gf_RemindPlayertoBuildProbes (fixed lp_delay, int lp_amount);
void libVCMI_gf_RemindPlayertoAssign3ProbestoAssimilator (unit lp_assimilator, fixed lp_delay);
void libVCMI_gf_RemindPlayertoTransformGateways ();
int libVCMI_gf_CampaignPlayerColor ();
void libVCMI_gf_ResearchAIUpgrade (int lp_count, string lp_upgrade, int lp_player);
void libVCMI_gf_ShareVisionAmongPlayers (playergroup lp_players);
bool libVCMI_gf_PlayerIsInCombat (int lp_player);
void libVCMI_gf_SetMissionObjectiveProgress2 (string lp_objective, int lp_current, bool lp_showHideMax, text lp_label, bool lp_updatetext);
void libVCMI_gf_SetMissionObjectiveProgress (string lp_objective, int lp_current);
void libVCMI_gf_CreateObjectiveCampaign (string lp_objectiveData);
void libVCMI_gf_ZS_SetMissionObjectiveState (string lp_objective, int lp_state);
void libVCMI_gf_AddMissionTipCampaign (string lp_tipData);
void libVCMI_gf_DisplayMissionTip ();
void libVCMI_gf_PM_RefreshTip ();
void libVCMI_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libVCMI_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
void libVCMI_gf_PM_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libVCMI_gf_PM_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, actor lp_talkRing, int lp_ping, int lp_localIndex);
void libVCMI_gf_HideCampaignTransmissionPortrait ();
fixed libVCMI_gf_ConvesationLineDuration (string lp_conversationLine);
void libVCMI_gf_SendTransmissionCampaignPlaceHolder (unit lp_unit, string lp_model, text lp_speaker, text lp_message, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libVCMI_gf_PM_DropPod_Zerg_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libVCMI_gf_PM_DropPod_Terran_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libVCMI_gf_CreateDropPod (int lp_race, point lp_location, unitgroup lp_units, bool lp_waitDontWait, int lp_player);
void libVCMI_gf_CreateDropPodForZergBuilding (string lp_buildingType, point lp_landingPoint, int lp_player, bool lp_waitDontWait);
void libVCMI_gf_PM_DropPodCreateZergBuilding_DontWait (string lp_buildingType, point lp_landingPoint, int lp_player);
void libVCMI_gf_PM_DropPodCreateZergBuilding_Wait (string lp_buildingType, point lp_landingPoint, int lp_player);
string libVCMI_gf_PM_DropPod_LastDroppedUnitsDataTableName ();
unitgroup libVCMI_gf_LastDroppedUnits ();
unit libVCMI_gf_PM_NexusBestWorkerRallyMineral (unit lp_nexus);
void libVCMI_gf_SetWorkerRallyPointforNexus (unit lp_nexus);
void libVCMI_gf_SetWorkerRallyPointsPlayersNexuses (int lp_player);
void libVCMI_gf_PM_UseUnitNameAsUnitTip (unit lp_unit);
void libVCMI_gf_PM_ApplyCampaignTeachingToUnit (unit lp_teachUnit);
void libVCMI_gf_PM_ShowHideCampaignTeaching (bool lp_showHide);
void libVCMI_gf_PM_CampaignCyberneticsSearch ();
void libVCMI_gf_SetUnitInfoTextCampaign (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libVCMI_gf_SetUnitInfoTextCampaignDetailed (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libVCMI_gf_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
void libVCMI_gf_BurrowUnburrowZergUnitGroup (unitgroup lp_unitGroup, int lp_burrowUnburrow);
void libVCMI_gf_SendActorMessageToDoodadsInRegion (string lp_message, string lp_doodadType, region lp_target);
void libVCMI_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libVCMI_gf_GivePlayerResources (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libVCMI_gf_DisplayRewardFloatingText (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libVCMI_gf_DisplayMissionObjectiveRewardFloatingText (point lp_location, string lp_objective);
bool libVCMI_gf_PM_StartingWorkerAutoHarvestEnabled ();
void libVCMI_gf_StartingWorkersAutoHarvest (region lp_regionMineralWorker, region lp_regionGasWorker);
text libVCMI_gf_UnitAbilityHotkeyText (string lp_unitType, string lp_abilityButton);
void libVCMI_gf_DisplayCampaignMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
void libVCMI_gf_CreateObjectivePing (bool lp_objectiveType, point lp_position, text lp_tooltip);
void libVCMI_gf_PingMinimapCampaign (playergroup lp_players, point lp_pos, fixed lp_dur, color lp_color);
string libVCMI_gf_PM_ReticleModelOfStyle (int lp_type, int lp_size);
string libVCMI_gf_PM_ReticleTextFontOfStyle (int lp_type);
void libVCMI_gf_PM_ReticleApplyTint (actor lp_reticle, int lp_type);
void libVCMI_gf_CreateReticleEffectAndTextTagAtPoint (int lp_type, int lp_size, text lp_text, point lp_location);
void libVCMI_gf_AttachReticleEffectAndTextTagOnUnit (int lp_type, int lp_size, text lp_text, unit lp_target, string lp_attachPoint);
text libVCMI_gf_FormatTextWithReplacement (text lp_text, text lp_replacement1, text lp_replacement2, text lp_replacement3, text lp_replacement4);
void libVCMI_gf_PM_VoidCampaignMissionInit ();
void libVCMI_gf_DifficultySetting (int lp_difficulty);

// Trigger Declarations
trigger libVCMI_gt_PM_CinematicModeOn;
trigger libVCMI_gt_PM_CinematicModeOff;
trigger libVCMI_gt_PM_SoATargetingForceOff;
trigger libVCMI_gt_PM_SoATargetingDeactivated;
trigger libVCMI_gt_PM_SoATargetingPointChosen;
trigger libVCMI_gt_PM_SoATargetingDirectionChosen;
trigger libVCMI_gt_PM_SoATargetingEffectFired;
trigger libVCMI_gt_PM_SoATargetingClearAll;
trigger libVCMI_gt_PM_SoATargetingCancel;
trigger libVCMI_gt_PM_SoATargetingCameraShake;
trigger libVCMI_gt_PM_SoAOrbitalStrikeActivated;
trigger libVCMI_gt_PM_SoAGravitonBombActivated;
trigger libVCMI_gt_PM_SoAThermalLanceActivated;
trigger libVCMI_gt_PM_SoATimeFreezeCast;
trigger libVCMI_gt_PM_SoARecall_PrimarySearch;
trigger libVCMI_gt_PM_SoARecall_PrimaryNexusDies;
trigger libVCMI_gt_PM_SoARecall_PrimaryNexusInit;
trigger libVCMI_gt_PM_SoATargetingPurifierBeamOn;
trigger libVCMI_gt_PM_SoATargetingPurifierBeamOff;
trigger libVCMI_gt_PM_SoAStrafeActivated;
trigger libVCMI_gt_PM_SoASuperShieldsActivated;
trigger libVCMI_gt_ConfusionEndSuicide;
trigger libVCMI_gt_GlobalUpgrade;
trigger libVCMI_gt_PM_HandleUseDeepShadows;
trigger libVCMI_gt_PM_HandleUseAlarakAvatar;
trigger libVCMI_gt_PM_HandleAlarakAvatarFinal;
trigger libVCMI_gt_AlarakKnockback4;
trigger libVCMI_gt_AlarakKnockback5;
trigger libVCMI_gt_AlarakKnockback6;
trigger libVCMI_gt_AlarakKnockback7;
trigger libVCMI_gt_AlarakKnockback8;
trigger libVCMI_gt_AlarakKnockback9;
trigger libVCMI_gt_AlarakKnockback10;
trigger libVCMI_gt_AlarakKnockback11;
trigger libVCMI_gt_AlarakKnockback12;
trigger libVCMI_gt_FenixCharge;
trigger libVCMI_gt_KerriganPsiStrike;
trigger libVCMI_gt_KerriganAstralShift;
trigger libVCMI_gt_Extinction;
trigger libVCMI_gt_StrikeAmon;
trigger libVCMI_gt_AmonStrikeSelectionCheck;
trigger libVCMI_gt_OracleWormhole;
trigger libVCMI_gt_PM_GameCheat_CreateDialog;
trigger libVCMI_gt_PS_GameCheat_CheckboxUsed;
trigger libVCMI_gt_PS_GameCheat_CheatUsed;
trigger libVCMI_gt_PM_MissionCheat_CreateDialog;
trigger libVCMI_gt_PM_MissionCheat_ButtonClicked;
trigger libVCMI_gt_PM_MissionCheat_CheatEntered;
trigger libVCMI_gt_PM_DebugVictoryS;
trigger libVCMI_gt_PM_ToggleFlyoverMode;
trigger libVCMI_gt_PM_TurnOffFlyoverMode;
trigger libVCMI_gt_PM_DebugSetSoAEnergy;
trigger libVCMI_gt_PM_MissionVictoryCallbackBlockActionQueueOneMinute;
trigger libVCMI_gt_PM_MissionVictoryCallbackBlockActionQueue;
trigger libVCMI_gt_PM_AbortMission;
trigger libVCMI_gt_PM_MissionEndsPlayerExit;
trigger libVCMI_gt_PM_VictoryContinue;
trigger libVCMI_gt_PM_VictoryNextMissionLaunched;
trigger libVCMI_gt_PM_VictoryQuit;
trigger libVCMI_gt_PM_VictoryTravelLaunched;
trigger libVCMI_gt_PM_HeroReviveKerriganCooldownWait;
trigger libVCMI_gt_PM_HeroReviveStukovCooldownWait;
trigger libVCMI_gt_PM_HeroReviveZagaraCooldownWait;
trigger libVCMI_gt_PM_HeroReviveFenixCooldownWait;
trigger libVCMI_gt_PM_HeroReviveKerriganXelNagaCooldownWait;
trigger libVCMI_gt_PM_HeroKerriganReviverDeath;
trigger libVCMI_gt_PM_SoAStatusWatch;
trigger libVCMI_gt_PM_SoAInit;
trigger libVCMI_gt_PM_SoAStatPylonUsed;
trigger libVCMI_gt_PM_PlayerNeedPylon;
trigger libVCMI_gt_PM_PlayerNeedPylonButtonClickedFood2;
trigger libVCMI_gt_PM_PlayerNeedPylonButtonClickedFood3;
trigger libVCMI_gt_PM_PlayerNeedPylonButtonClickedFood4;
trigger libVCMI_gt_PM_PlayerNeedPylonButtonClickedFood6;
trigger libVCMI_gt_PM_BaseUnderAttackInit;
trigger libVCMI_gt_PM_BaseUnderAttackByGround;
trigger libVCMI_gt_PM_BaseUnderAttackByGroundPhotonCannonBuilt;
trigger libVCMI_gt_PM_ReminderPlayerConstructsFromGateway;
trigger libVCMI_gt_PM_MissionTipClicked;
trigger libVCMI_gt_PM_SendTransmissionCampaignTick;
trigger libVCMI_gt_PM_DropPod_Zerg_DontWait;
trigger libVCMI_gt_PM_DropPod_Terran_DontWait;
trigger libVCMI_gt_PM_CampaignUnit;
trigger libVCMI_gt_PM_CampaignUnitCreated;
trigger libVCMI_gt_PM_CampaignCyberneticsSelected;
trigger libVCMI_gt_PM_CampaignCyberneticsDestroyed;
trigger libVCMI_gt_PM_CampaignCyberneticsRemoved;
trigger libVCMI_gt_PM_CampaignUnitChangeOwner;
trigger libVCMI_gt_PM_CampaignUnitInfoUnitMorphes;
trigger libVCMI_gt_PM_UnitBeingRemoved;
trigger libVCMI_gt_VoidPingSound;

// Library Initialization
void libVCMI_InitVariables ();

