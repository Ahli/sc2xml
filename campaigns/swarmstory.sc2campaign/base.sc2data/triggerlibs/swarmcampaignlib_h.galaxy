include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Campaign (Swarm)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libSwaC_ge_StoryDataType_StoryDataTypeNone = 0;
const int libSwaC_ge_StoryDataType_StoryDataTypeArmyCategory = 1;
const int libSwaC_ge_StoryDataType_StoryDataTypeArmyUnit = 2;
const int libSwaC_ge_StoryDataType_StoryDataTypeArmyUpgrade = 3;
const int libSwaC_ge_StoryDataType_StoryDataTypeHeroAbilityCategory = 4;
const int libSwaC_ge_StoryDataType_StoryDataTypeHeroAbility = 5;
const int libSwaC_ge_StoryDataType_StoryDataTypeHeroStat = 6;
const int libSwaC_ge_ZS_Event_ZS_EventFirst = 0;
const int libSwaC_ge_ZS_Event_ArmyCheatStarts = 1;
const int libSwaC_ge_ZS_Event_ArmyCheatEnds = 2;
const int libSwaC_ge_ZS_Event_KerriganCheatStarts = 3;
const int libSwaC_ge_ZS_Event_KerriganCheatEnds = 4;
const int libSwaC_ge_ZS_Event_CampaignDataReset = 5;
const int libSwaC_ge_ZS_Event_EvolutionMasterConversation = 6;
const int libSwaC_ge_ZS_Event_TransitionFromStoryMap = 7;
const int libSwaC_ge_ZS_Event_PostEnteringEggRoom = 8;
const int libSwaC_ge_ZS_Event_StoryUtilPrepareMainSet = 9;
const int libSwaC_ge_ZS_Event_StoryUtilViewMainSet = 10;
const int libSwaC_ge_ZS_Event_ProgressCheatStart = 11;
const int libSwaC_ge_ZS_Event_ProgressCheatSave = 12;
const int libSwaC_ge_ZS_Event_ProgressCheatLoad = 13;
const int libSwaC_ge_ZS_Event_ProgressMapCompleted = 14;
const int libSwaC_ge_ZS_Event_ProgressCheatCancel = 15;
const int libSwaC_ge_ZS_Event_ArmyEnteredSubUI = 16;
const int libSwaC_ge_ZS_Event_ArchivesBankSynced = 17;
const int libSwaC_ge_ZS_Event_StatisticsBankSave = 18;
const int libSwaC_ge_ZS_Event_ZS_EventLast = 19;
const int libSwaC_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libSwaC_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libSwaC_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libSwaC_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libSwaC_ge_CampaignMessageType_MissionFailed = 0;
const int libSwaC_ge_CampaignMessageType_Hint = 1;
const int libSwaC_ge_CampaignMessageType_SimpleHint = 2;
const int libSwaC_ge_CampaignMessageType_Secret = 3;
const int libSwaC_ge_CampaignMessageType_Warning = 4;
const int libSwaC_ge_CampaignMessageType_NewUnitAcquired = 5;
const int libSwaC_ge_CampaignMessageType_NewUnitAvailable = 6;
const int libSwaC_ge_CampaignMessageType_NewTechAvailable = 7;
const int libSwaC_ge_CampaignMessageType_NewUnitAvailable2 = 8;
const int libSwaC_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libSwaC_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libSwaC_ge_CampaignTransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libSwaC_ge_CampaignTransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libSwaC_ge_CampaignTransmissionPortraitOptioins_DontShowPortrait = 2;
const int libSwaC_ge_CampaignTransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libSwaC_ge_CampaignTransmissionCueSoundOptions_PlayCueSound = 1;
const int libSwaC_ge_CampaignTransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libSwaC_ge_CampaignTransmissionOptions_ChatBubble = 0;
const int libSwaC_ge_DropPodRace_Terran = 0;
const int libSwaC_ge_DropPodRace_Zerg = 1;
const int libSwaC_ge_CampaignTimerPositiveNegativeOptions_Positive = 0;
const int libSwaC_ge_CampaignTimerPositiveNegativeOptions_Negative = 1;
const int libSwaC_ge_BossBarRaceSwarmCampaign_Terran = 0;
const int libSwaC_ge_BossBarRaceSwarmCampaign_Zerg = 1;
const int libSwaC_ge_CampaignHeroes_None = 0;
const int libSwaC_ge_CampaignHeroes_Kerrigan = 1;
const int libSwaC_ge_CampaignHeroes_Dehaka = 2;
const int libSwaC_ge_CampaignHeroes_Stukov = 3;
const int libSwaC_ge_VolumeChannelModeCampaign_CinematicInTransmission = 0;
const int libSwaC_ge_VolumeChannelModeCampaign_Speech = 1;
const int libSwaC_ge_VolumeChannelModeCampaign_Game = 2;
const int libSwaC_ge_VolumeChannelModeCampaign_Victory = 3;
const int libSwaC_ge_VolumeChannelModeCampaign_Speech2 = 4;
const int libSwaC_ge_VolumeChannelModeCampaign_Speech3 = 5;
const int libSwaC_ge_VolumeChannelModeCampaign_SpeechAndMusicNoEffects = 6;
const int libSwaC_ge_VolumeChannelModeCampaign_LowHealthBegin = 7;
const int libSwaC_ge_VolumeChannelModeCampaign_LowHealthEnd = 8;
const int libSwaC_ge_VolumeChannelModeCampaign_Game2 = 9;
const int libSwaC_ge_VolumeChannelModeCampaign_Game3 = 10;
const int libSwaC_ge_VolumeChannelModeCampaign_SplitUI = 11;
const int libSwaC_ge_VolumeChannelModeCampaign_CinematicOutofTransmission = 12;
const int libSwaC_ge_CacheResourceType_CustomResource = 0;
const int libSwaC_ge_CacheResourceType_Mineral = 1;
const int libSwaC_ge_CacheResourceType_Vespene = 2;
const int libSwaC_ge_CacheResourceType_Mutagen = 3;
const int libSwaC_ge_CacheResourceType_InfestationLife = 4;
const int libSwaC_ge_CacheResourceType_InfestationEnergy = 5;
const int libSwaC_ge_CacheResourceType_InfestationDamage = 6;
const int libSwaC_ge_CacheResourceType_Influence = 7;
const int libSwaC_ge_CacheResourceType_KerriganLevel = 8;
const int libSwaC_ge_CampaginReticleType_ZergMainObjective = 0;
const int libSwaC_ge_CampaginReticleType_ZergBonusObjective = 1;
const int libSwaC_ge_CampaginReticleType_ZergEnemy = 2;
const int libSwaC_ge_CampaginReticleType_TerranMainObjective = 3;
const int libSwaC_ge_CampaginReticleType_TerranBonusObjective = 4;
const int libSwaC_ge_CampaginReticleType_TerranEnemy = 5;
const int libSwaC_ge_CampaginReticleSize_Large = 0;
const int libSwaC_ge_CampaginReticleSize_Medium = 1;
const int libSwaC_ge_CampaginReticleSize_Small = 2;
const int libSwaC_ge_MissionStatus_Locked = 0;
const int libSwaC_ge_MissionStatus_Available = 1;
const int libSwaC_ge_MissionStatus_Completed = 2;
const int libSwaC_ge_MissionCountOptions_Locked = 0;
const int libSwaC_ge_MissionCountOptions_Available = 1;
const int libSwaC_ge_MissionCountOptions_Completed = 2;
const int libSwaC_ge_MissionCountOptions_All = 3;
const int libSwaC_ge_MissionObjectiveState_Undiscovered = 0;
const int libSwaC_ge_MissionObjectiveState_Available = 1;
const int libSwaC_ge_MissionObjectiveState_Completed = 2;
const int libSwaC_ge_MissionObjectiveState_Failed = 3;
const int libSwaC_ge_ArmyUIScreen_None = 0;
const int libSwaC_ge_ArmyUIScreen_EggRoom = 1;
const int libSwaC_ge_ArmyUIScreen_Upgrade = 2;
const int libSwaC_ge_ArmyUIScreen_Evolution = 3;
const int libSwaC_ge_ArmyUIScreen_Mission = 4;
const int libSwaC_ge_KerriganCreatePurpose_GamePlay = 0;
const int libSwaC_ge_KerriganCreatePurpose_Cinematic = 1;
const int libSwaC_ge_KerriganPhase_DefaultKerriganPhase = 0;
const int libSwaC_ge_KerriganPhase_KerriganPhaseGhost = 1;
const int libSwaC_ge_KerriganPhase_KerriganPhaseQueenOfBlade = 2;
const int libSwaC_ge_KerriganPhase_KerriganPhasePostHybrid = 3;
const int libSwaC_ge_HeroUnit_Kerrigan = 0;
const int libSwaC_ge_HeroUnit_Stukov = 1;
const int libSwaC_ge_HeroUnit_Dehaka = 2;
const int libSwaC_ge_MissionCondition_Sucessful = 0;
const int libSwaC_ge_MissionCondition_Simulation = 1;
const int libSwaC_ge_ZS_LibertyMapID_MapNone = 0;
const int libSwaC_ge_ZS_LibertyMapID_MapTRaynor01 = 1;
const int libSwaC_ge_ZS_LibertyMapID_MapTRaynor02 = 2;
const int libSwaC_ge_ZS_LibertyMapID_MapTRaynor03 = 3;
const int libSwaC_ge_ZS_LibertyMapID_MapTHanson01 = 4;
const int libSwaC_ge_ZS_LibertyMapID_MapTHanson02 = 5;
const int libSwaC_ge_ZS_LibertyMapID_MapTHanson03A = 6;
const int libSwaC_ge_ZS_LibertyMapID_MapTHanson03B = 7;
const int libSwaC_ge_ZS_LibertyMapID_MapTTosh01 = 8;
const int libSwaC_ge_ZS_LibertyMapID_MapTTosh02 = 9;
const int libSwaC_ge_ZS_LibertyMapID_MapTTosh03A = 10;
const int libSwaC_ge_ZS_LibertyMapID_MapTTosh03B = 11;
const int libSwaC_ge_ZS_LibertyMapID_MapTHorner01 = 12;
const int libSwaC_ge_ZS_LibertyMapID_MapTHorner02 = 13;
const int libSwaC_ge_ZS_LibertyMapID_MapTHorner03 = 14;
const int libSwaC_ge_ZS_LibertyMapID_MapTHorner04 = 15;
const int libSwaC_ge_ZS_LibertyMapID_MapTHorner05S = 16;
const int libSwaC_ge_ZS_LibertyMapID_MapTTychus01 = 17;
const int libSwaC_ge_ZS_LibertyMapID_MapTTychus02 = 18;
const int libSwaC_ge_ZS_LibertyMapID_MapTTychus03 = 19;
const int libSwaC_ge_ZS_LibertyMapID_MapTTychus04 = 20;
const int libSwaC_ge_ZS_LibertyMapID_MapTTychus05 = 21;
const int libSwaC_ge_ZS_LibertyMapID_MapTZeratul01 = 22;
const int libSwaC_ge_ZS_LibertyMapID_MapTZeratul02 = 23;
const int libSwaC_ge_ZS_LibertyMapID_MapTZeratul03 = 24;
const int libSwaC_ge_ZS_LibertyMapID_MapTZeratul04 = 25;
const int libSwaC_ge_ZS_LibertyMapID_MapTValerian01 = 26;
const int libSwaC_ge_ZS_LibertyMapID_MapTValerian02A = 27;
const int libSwaC_ge_ZS_LibertyMapID_MapTValerian02B = 28;
const int libSwaC_ge_ZS_LibertyMapID_MapTValerian03 = 29;
const int libSwaC_ge_ZS_LibertyMapID_MapTSecret01 = 30;
const int libSwaC_ge_ZS_LibertyMapID_MapTStory01 = 31;
const int libSwaC_ge_ZS_LibertyMapID_MapTArcade = 32;
const int libSwaC_ge_ZS_LibertyMapID_MapTSimulator = 33;
const int libSwaC_ge_ZS_LibertyMapID_MapLast = 34;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoNone = 0;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoTargetX = 1;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoTargetY = 2;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoAngleofAttack = 3;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoDepthofField = 4;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoDistance = 5;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoFalloffEnd = 6;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoFalloffStart = 7;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoFarClip = 8;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoFieldofView = 9;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoFocalDepth = 10;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoHeightOffset = 11;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoNearClip = 12;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoRoll = 13;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoRotation = 14;
const int libSwaC_ge_ZSS_CameraInfo_ZSS_CameraInfoShadowClip = 15;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcNone = 0;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcLab = 1;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcChar = 2;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcExpedition = 3;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcZerus = 4;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcHybrid = 5;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcValerian = 6;
const int libSwaC_ge_ZS_SwarmArc_SwarmArcKorhal = 7;

// Constants
const string libSwaC_gv_zS_GameUIDataTableConnector = "&%&";
const int libSwaC_gv_zS_RePing_MAX = 12;
const fixed libSwaC_gv_campaignObjectiveDelay = 2.0;
const fixed libSwaC_gv_campaignHintDelay = 2.0;
const fixed libSwaC_gv_campaignSecretDelay = 5.0;
const fixed libSwaC_gv_campaignAchievementDelay = 2.0;
const int libSwaC_gv_zSC_FeaturedZergStructureCountMax = 5;
const fixed libSwaC_gv_zSC_KerriganHPThreshold = 0.3;
const fixed libSwaC_gv_zS_SwarmHeroUIUpdateFrequency = 0.25;
const int libSwaC_gv_zSC_CamStatsTechMaxCount = 10;
const int libSwaC_gv_zSC_CamStatsUnitCreatedCountMax = 100;
const int libSwaC_gv_zSC_DifficultyCount = 4;
const int libSwaC_gv_zSC_MISSIONOBJECTIVECOUNT = 5;
const int libSwaC_gv_zSC_HelpUnitPanel_EnabledUnitTypeCountMax = 100;
const string libSwaC_gv_zSC_ArmyCustomEggUnitDataPrefix = "ArmyCategoryEggUnit_";
const string libSwaC_gv_zSC_ArmyCustomEggUnitRawringDataPrefix = "ArmyCategoryEggRawring_";
const string libSwaC_gv_zSC_ArmyCalloutFlashDataPrefix = "ArmyCalloutFrame_";
const fixed libSwaC_gv_zSC_ARMYEVOLUTIONSETHEIGHT = 10.0;
const int libSwaC_gv_zSC_ArmyCustomCategoryCount = 9;
const string libSwaC_gv_zSC_ArmyCategoryStateKey = "ZS_ArmyCategoryState_";
const string libSwaC_gv_zSC_ArmyUpgradeStateKey = "ZS_ArmyUpgradeState_";
const string libSwaC_gv_zSC_ArmyUnitStateKey = "ZS_ArmyUnitState_";
const string libSwaC_gv_zSC_HeroReviveLinkKerrigan = "Abil/KerriganRevive";
const string libSwaC_gv_zSC_HeroReviveLinkDehaka = "Abil/DehakaRevive";
const string libSwaC_gv_zSC_HeroReviveLinkStukov = "Abil/StukovRevive";
const int libSwaC_gv_zSC_KerriganAbilityTierItems = 3;
const int libSwaC_gv_zSC_KerriganAbilityTiers = 7;
const int libSwaC_gv_zSC_KerriganAbilityTiers2 = 2;
const int libSwaC_gv_zSC_KERRIGANMAXLEVEL = 70;
const string libSwaC_gv_zS_StoryBankName = "ZStory";

// Variable Declarations
trigger[51] libSwaC_gv_zS_EventCallback;
bool libSwaC_gv_zS_EventIsRunning;
string[51][3] libSwaC_gv_zS_EventParameter;
int libSwaC_gv_zS_WorldCoverDlg;
int libSwaC_gv_zS_RePingCount;
int[libSwaC_gv_zS_RePing_MAX + 1] libSwaC_gv_zS_RePingArray;
fixed libSwaC_gv_zS_RePingInterval;
int libSwaC_gv_zS_SendTransmissionCampaignIndex;
int libSwaC_gv_zS_SendTransmissionCampaignPortrait;
unit libSwaC_gv_zS_SendTransmissionCampaignSpeaker;
trigger libSwaC_gv_zS_SendTransmissionCampaignTrigger;
int libSwaC_gv_zS_SendTransmissionCampaignPlayingTick;
bool libSwaC_gv_zS_SendTransmissionCampaignChatBubbleOn;
point libSwaC_gv__TP_DropPod_Location;
unitgroup libSwaC_gv__TP_DropPod_Units;
int libSwaC_gv__TP_DropPod_Player;
unit libSwaC_gv__TP_ZergDropPod_Building;
bool libSwaC_gv_zS_MissionVictoryActionQueyeEmpty;
int libSwaC_gv_zS_MissionCompleteTime;
bool libSwaC_gv_zS_GameOver;
int libSwaC_gv__FadeDialog;
int libSwaC_gv__FadeImage;
int libSwaC_gv_zS_PlanetPortrait;
camerainfo libSwaC_gv_zS_PlanetPortraitPlayerCamera;
string libSwaC_gv_zS_PlanetPortraitEvoMissionLight;
int libSwaC_gv_zS_ObjectivePanel;
int libSwaC_gv_zS_ErrorPanel;
timer libSwaC_gv_zS_CombatTimer;
int libSwaC_gv_zS_MissionUIContainer;
bool libSwaC_gv_zS_NeedOverlordAbilityHighlightOn;
bool libSwaC_gv_zS_NeedOverlordEnabled;
int libSwaC_gv_zS_NeedOverlordFoodRequired;
int libSwaC_gv_zS_NeedOverlordFoodRequired2Index;
int libSwaC_gv_zS_NeedOverlordFoodRequired3Index;
int libSwaC_gv_zS_NeedOverlordFoodRequired6Index;
string[libSwaC_gv_zSC_FeaturedZergStructureCountMax + 1] libSwaC_gv_zS_FeaturedZergStructures;
abilcmd[libSwaC_gv_zSC_FeaturedZergStructureCountMax + 1] libSwaC_gv_zS_FeaturedZergStructureAbilities;
int[libSwaC_gv_zSC_FeaturedZergStructureCountMax + 1] libSwaC_gv_zS_FeaturedZergStructureFlashStatus;
int libSwaC_gv_zS_FeaturedZergStructureCount;
int libSwaC_gv_zS_FeaturedZergStructureFlashing;
bool libSwaC_gv_zS_SpineCrawlerBuilt;
bool libSwaC_gv_zS_SpineCrawlerTipPlayed;
int libSwaC_gv_zS_ZerglingRespawnCount;
unit libSwaC_gv_zS_PrimaryHatchery;
bool libSwaC_gv_zS_KerriganLowHPFlashing;
int libSwaC_gv_zS_KerriganLowHPUIDlg;
int libSwaC_gv_zS_KerriganLowHPUIImage;
fixed libSwaC_gv_zS_KerriganHPBak;
sound libSwaC_gv_zS_SoundKerriganLowHealthStart;
sound libSwaC_gv_zS_SoundKerriganLowHealthHeartBeat;
sound libSwaC_gv_zS_SoundKerriganLowHealthBreath;
text[21] libSwaC_gv_zS_MissionTipTitle;
text[21] libSwaC_gv_zS_MissionTipDescription;
string[21] libSwaC_gv_zS_MissionTipIcons;
int[21] libSwaC_gv_zS_MissionTipType;
int libSwaC_gv_zS_MissionTipCount;
int libSwaC_gv_zS_MissionHelpButton;
string[21] libSwaC_gv_zS_MissionTip;
int libSwaC_gv_zS_MissionHelpButtonTipPanel;
bool libSwaC_gv_zS_SelectLarvaHighlight;
bool libSwaC_gv_zS_ErrorPanelMaskOn;
int libSwaC_gv_zS_ArmyButton;
int libSwaC_gv_zS_ArmyButtonTipPanel;
bool libSwaC_gv_zS_ArmyButtonTipReady;
int libSwaC_gv_zS_VictoryStatDlg;
int libSwaC_gv_zS_ProgressBarPanel;
int libSwaC_gv_zS_ProgressBarLabelTitle;
int libSwaC_gv_zS_ProgressBarLabelBarLeft;
int libSwaC_gv_zS_ProgressBarLabelBarRight;
int libSwaC_gv_zS_ProgressBarImageBar;
int libSwaC_gv_zS_ProgressBarMax;
int libSwaC_gv_zS_ProgressBarMin;
int libSwaC_gv_zS_ProgressBarProgress;
bool libSwaC_gv_zS_ProgressBarShowing;
int libSwaC_gv_zSC_ProgressBarWidth;
int libSwaC_gv_zSC_ProgressBarHeight;
int libSwaC_gv_zS_BB_Race;
string libSwaC_gv_zS_BB_Portraits;
text libSwaC_gv_zS_BB_Title;
unit libSwaC_gv_zS_BB_Boss;
fixed libSwaC_gv_zS_BB_MaxValue;
fixed libSwaC_gv_zS_BB_CurrentValue;
int libSwaC_gv_zS_BB_HPOldWidth;
int libSwaC_gv_zS_BB_Panel;
int libSwaC_gv_zS_BB_PortraitImage;
int libSwaC_gv_zS_BB_TitleLabel;
int libSwaC_gv_zS_BB_HpLabel;
int libSwaC_gv_zS_BB_HpFullImage;
int libSwaC_gv_zS_BB_HpCurrentImage;
int libSwaC_gv_zS_BB_BorderImage;
int libSwaC_gv_zS_BB_HpBackground;
unit[3] libSwaC_gv_zS_SwarmHeroUIUnit;
int[3] libSwaC_gv_zS_SwarmHeroUIType;
string[3] libSwaC_gv_zS_SwarmHeroUIIcon;
int[3] libSwaC_gv_zS_SwarmHeroUIPositionX;
int[3] libSwaC_gv_zS_SwarmHeroUIPositionY;
bool[3] libSwaC_gv_zS_SwarmHeroUIShowLevel;
int[3] libSwaC_gv_zS_SwarmHeroUIPanel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogBorderImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogBorderImageNoEnergy;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogIconImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogCooldownImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogDamageTakenImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogDamageTakenLabel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogNameLabel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogLevelLabel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogHealthBarImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogHealthBarBackground;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogEnergyBarImage;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogEnergyBarBackground;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogHealthLabel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogEnergyLabel;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogButton;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogLevelBox;
int[3] libSwaC_gv_zS_SwarmHeroUIDialogLevelupPortrait;
fixed[3] libSwaC_gv_zS_SwarmHeroUIDamageTimer;
bool libSwaC_gv_zS_SwarmHeroUIKerriganRevivable;
bool libSwaC_gv_zS_KerriganHeroPanelLevelUpEffectPlaying;
fixed libSwaC_gv_zS_SwarmHeroUIDamage;
int[41][6] libSwaC_gv_zSX_CamStatsMissionStartedVictoryRestarted;
int[41][6] libSwaC_gv_zSX_CamStatsMissionStartedArchive;
int[41][6] libSwaC_gv_zSX_CamStatsMissionStartedMasterArchive;
int[41][6] libSwaC_gv_zSX_CamStatsMissionStartedLaunched;
int[41][6] libSwaC_gv_zSX_CamStatsMissionStarted;
int[41][6] libSwaC_gv_zSX_CamStatsMissionCompleted;
int[41][6] libSwaC_gv_zSX_CamStatsMissionDefeated;
int[41][6] libSwaC_gv_zSX_CamStatsMissionDefeatedBaseDied;
int[41][6] libSwaC_gv_zSX_CamStatsMissionAborted;
int[41][6] libSwaC_gv_zSX_CamStatsMissionLoad;
int[41] libSwaC_gv_zSX_CamStatsLastDifficulty;
int[41] libSwaC_gv_zSX_CamStatsDifficultyUp;
int[41] libSwaC_gv_zSX_CamStatsDifficultyDown;
string libSwaC_gv_zSX_CamStatsMisisonOrder;
int[41][6] libSwaC_gv_zSX_CamStatsHelpUsed;
int[41][6] libSwaC_gv_zSX_CamStatsArmyUpgradesCount;
string[41][6][libSwaC_gv_zSC_CamStatsTechMaxCount + 1] libSwaC_gv_zSX_CamStatsArmyUpgrades;
int[41][6] libSwaC_gv_zSX_CamStatsEvolutionsCount;
string[41][6][libSwaC_gv_zSC_CamStatsTechMaxCount + 1] libSwaC_gv_zSX_CamStatsEvolutions;
int[41][6] libSwaC_gv_zSX_CamStatsKerriganCount;
string[41][6][libSwaC_gv_zSC_CamStatsTechMaxCount + 1] libSwaC_gv_zSX_CamStatsKerrigan;
int libSwaC_gv_zS_CamStatsKerriganDeath;
int[41][6] libSwaC_gv_zSX_CamStatsKerriganDeathMax;
int libSwaC_gv_zSX_CamStatsUnitCreatedHistoryCount;
int libSwaC_gv_zSX_CamStatsUnitCreatedCount;
string[libSwaC_gv_zSC_CamStatsUnitCreatedCountMax + 1] libSwaC_gv_zSX_CamStatsUnitCreatedUnits;
string libSwaC_gv_zSX_CamStatsWeaponArmorUpgrades;
bank libSwaC_gv_zS_CampaignStatsBank;
int libSwaC_gv_zS_MissionAutoSaveIndex;
bool libSwaC_gv_zS_MissionAutoSaveDone;
bool libSwaC_gv_zS_VolumeChannelModeInSpeech;
bool libSwaC_gv_zS_VolumeChannelModeInLowHP;
int libSwaC_gv_zS_AchievementPosition;
int libSwaC_gv_zS_AchievementsDisplayed;
bool libSwaC_gv_zS_AchievementDebugEnabled;
int libSwaC_gv_zSX_CampaignDifficulty;
int libSwaC_gv_zSX_MissionObjRewardsEarnedCurrent;
string libSwaC_gv_zS_CutsceneTimestamp;
string libSwaC_gv_zS_PlaySceneCurrentScene;
int libSwaC_gv_zS_CurrentCampaignCutscene;
bool libSwaC_gv_zS_CampaignCutsceneSkippable;
int libSwaC_gv_zS_CampaignCutsceneDialog;
bool libSwaC_gv_zS_CampaignCutsceneSkipped;
bool libSwaC_gv_zS_ApplyingCampaignTech;
int libSwaC_gv_zS_MorphedUnitsLabel;
int libSwaC_gv_zS_MorphedUnitsImage;
int libSwaC_gv_zSX_HelpUnitsPanel_EnabledUnitTypesCount;
string[libSwaC_gv_zSC_HelpUnitPanel_EnabledUnitTypeCountMax + 1] libSwaC_gv_zSX_HelpUnitsPanel_EnabledUnitTypes;
string libSwaC_gv_zSC_ANIMLIGHTING;
string libSwaC_gv_zSC_ANIMRAWRING;
int libSwaC_gv_zS_ArmyCustomCurrentUI;
unit libSwaC_gv_zS_ArmyCustomEggRoom;
unit libSwaC_gv_zS_ArmyCustomEggCalloutAttachments;
int[11] libSwaC_gv_zS_ArmyCustomEggCalloutFlash;
int libSwaC_gv_zS_ArmyEvoCalloutFlash;
int libSwaC_gv_zS_ArmyEvoCalloutSubtitle;
unit libSwaC_gv_zS_ArmyCustomEggRoomEvolutionMaster;
actor[11] libSwaC_gv_zS_ArmyCustomEggs;
int[11] libSwaC_gv_zS_ArmyCustomEggLightScenes;
string[11] libSwaC_gv_zS_ArmyCustomEggLightStates;
int libSwaC_gv_zS_ArmyCustomEggRoomSetLightScene;
int libSwaC_gv_zS_ArmyCustomEggRoomEvoLightScene;
unitgroup libSwaC_gv_zS_ArmyCustomEggUnits;
int libSwaC_gv_zS_ArmyCustomEggRoomDialog;
int libSwaC_gv_zS_ArmyCustomEggRoomPanel;
int libSwaC_gv_zS_ArmyCustomEggRoomBackButton;
bool libSwaC_gv_zS_ArmyCustomEggRoomOpened;
string libSwaC_gv_zS_ArmyCustomCategoryCurrent;
int libSwaC_gv_zS_ArmyCustomEggRoomEvolutionMissionButton;
int libSwaC_gv_zS_ArmyCustomEggRoomEvolutionButtonHighlight;
unit libSwaC_gv_zS_ArmyCustomEggSMEvo;
bool libSwaC_gv_zS_ArmyEvoPlayBirth;
int libSwaC_gv_zS_ArmyCustomUpgradeInfoFrame;
actor libSwaC_gv_zS_ArmyCustomUpgradeUnitModel;
int libSwaC_gv_zS_ArmyCustomUpgradeDialog;
int libSwaC_gv_zS_ArmyCustomUpgradePanel;
int libSwaC_gv_zS_ArmyCustomUpgradeBackButton;
int libSwaC_gv_zS_ArmyCustomUpgradeTitleLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeTitlePanel;
int libSwaC_gv_zS_ArmyCustomUpgradeTitlePanel3;
int libSwaC_gv_zS_ArmyCustomSelectedUpgradeMovie;
int libSwaC_gv_zS_ArmyCustomSelectedUpgradeNameLabel;
int libSwaC_gv_zS_ArmyCustomSelectedUpgradeDescriptionLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeSelectUpgradeLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeUnitNameLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeUnitStrainInfoIcon;
int[5] libSwaC_gv_zS_ArmyCustomUpgradeIcons;
int[5] libSwaC_gv_zS_ArmyCustomUpgradeButtons;
int[5] libSwaC_gv_zS_ArmyCustomUpgradeButtons2;
int[5] libSwaC_gv_zS_ArmyCustomUpgradeNameLabels;
bool libSwaC_gv_zS_ArmyCustomUpgradeRoomOpened;
string libSwaC_gv_zS_ArmyCustomUpgradeCurrent;
int libSwaC_gv_zS_ArmyCustomUpgradeSelectedDescriptionResultsLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeSelectedDescriptionResultsTitleLabel;
int libSwaC_gv_zS_ArmyCustomUpgradeSpamClickCount;
unit libSwaC_gv_zS_ArmyCustomEvolutionSet;
unit libSwaC_gv_zS_ArmyCustomEvolutionUnitA;
actor libSwaC_gv_zS_ArmyCustomEvolutionSelectionA;
unit libSwaC_gv_zS_ArmyCustomEvolutionUnitB;
actor libSwaC_gv_zS_ArmyCustomEvolutionSelectionB;
int libSwaC_gv_zS_ArmyCustomEvolutionDialog;
int libSwaC_gv_zS_ArmyCustomEvolutionPanel;
int libSwaC_gv_zS_ArmyCustomEvolutionInfoFrame;
int libSwaC_gv_zS_ArmyCustomEvolutionAcceptButton1;
int libSwaC_gv_zS_ArmyCustomEvolutionAcceptButton2;
int libSwaC_gv_zS_ArmyCustomEvolutionBackButton;
int libSwaC_gv_zS_ArmyCustomEvolutionTitleLabel5;
int libSwaC_gv_zS_ArmyCustomEvolutionTitleLabel6;
int libSwaC_gv_zS_ArmyCustomEvolutionTitleLabel2;
int libSwaC_gv_zS_ArmyCustomEvolutionTitleLabel3;
int libSwaC_gv_zS_ArmyCustomEvolutionTitleLabel4;
int libSwaC_gv_zS_ArmyCustomEvolutionSelectedUnitMovie;
int libSwaC_gv_zS_ArmyCustomEvolutionSelectedUnitNameLabel;
int libSwaC_gv_zS_ArmyCustomEvolutionSelectedUnitDescriptionLabel;
int libSwaC_gv_zS_ArmyCustomEvolutionSelectedUnitDescriptionResultsLabel;
int libSwaC_gv_zS_ArmyCustomEvolutionSelectedUnitDescriptionResultsTitleLabel;
bool libSwaC_gv_zS_ArmyCustomEvolutionRoomOpened;
string libSwaC_gv_zS_ArmyCustomUnitCurrent;
int libSwaC_gv_zS_ArmyCustomEvolutionSetLightScene;
int[3] libSwaC_gv_zS_ArmyCustomEvolutionUnitLightScene;
string libSwaC_gv_zS_ArmyCustomEvolutionCategory;
int libSwaC_gv_zS_ArmyCustomEvolutionFanfareCutscene;
int libSwaC_gv_zS_ArmyCustomEvolutionFanfareText;
bool libSwaC_gv_zS_ArmyCustomEvolutionRawrPlayed;
point libSwaC_gv_center;
int libSwaC_gv_zS_ArmyCustomMissionDialog;
int libSwaC_gv_zS_ArmyCustomMissionPanel;
int[4] libSwaC_gv_zS_ArmyCustomMissionUnits;
int[4] libSwaC_gv_zS_ArmyCustomMissionUnitFrames;
int[4] libSwaC_gv_zS_ArmyCustomMissionUnitFrameLabel;
int[4] libSwaC_gv_zS_ArmyCustomMissionUnitFrameBackground;
int libSwaC_gv_zS_ArmyCustomMissionCloseButton;
int libSwaC_gv_zS_ArmyCustomMissionPlayButton;
int libSwaC_gv_zS_ArmyCustomMissionTitleLabel;
int libSwaC_gv_zS_ArmyCustomMissionObjectiveTextLabel;
int libSwaC_gv_zS_ArmyCustomMissionBonusTextLabel;
int libSwaC_gv_zS_ArmyCustomMissionContactPortrait;
int libSwaC_gv_zS_ArmyCustomMissionContactPlayButton;
int libSwaC_gv_zS_ArmyCustomMissionContactStopButton;
string libSwaC_gv_zS_ArmyCustomMissionCurrentCategory;
int libSwaC_gv_zS_ArmyCustomMissionCurrentIndex;
bool[11] libSwaC_gv_zS_ArmyCustomMissionPitchPlayed;
string libSwaC_gv_zS_ArmyCustomMissionMap;
int libSwaC_gv_zS_ArmyCustomMissionSubtitleAnchor;
int libSwaC_gv_zS_ArmyCustomArchivesDialog;
int libSwaC_gv_zS_ArmyCustomArchivesPanel;
int libSwaC_gv_zS_ArmyCustomArchivesOKButton;
int libSwaC_gv_zS_ArmyCustomArchivesCancelButton;
int libSwaC_gv_zS_ArmyCustomArchivesSectionBG;
int libSwaC_gv_zS_ArmyCustomArchivesUpgradeBorder;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1][4] libSwaC_gv_zS_ArmyCustomArchivesUpgradeCheck;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1][4] libSwaC_gv_zS_ArmyCustomArchivesUpgradeLabel;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1] libSwaC_gv_zS_ArmyCustomArchivesUpgradeDivider;
int libSwaC_gv_zS_ArmyCustomArchivesEvolutionBorder;
int libSwaC_gv_zS_ArmyCustomArchivesEvolutionBorderTitle;
int libSwaC_gv_zS_ArmyCustomArchivesEvolutionBorderBG;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1][4] libSwaC_gv_zS_ArmyCustomArchivesEvolutionCheck;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1][4] libSwaC_gv_zS_ArmyCustomArchivesEvolutionLabel;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1] libSwaC_gv_zS_ArmyCustomArchivesEvolutionDivider;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1] libSwaC_gv_zS_ArmyCustomArchivesUnitLabel;
int[libSwaC_gv_zSC_ArmyCustomCategoryCount + 1] libSwaC_gv_zS_ArmyCustomArchivesUnitPanel;
bool libSwaC_gv_zS_ArmyCustomArchivesRunning;
bool libSwaC_gv_zS_ArmyCustomArchivesUpdatingData;
fixed libSwaC_gv_zS_ReviveCooldownTimeKerrigan;
fixed libSwaC_gv_zS_ReviveCooldownTimeStukov;
fixed libSwaC_gv_zS_ReviveCooldownTimeDehaka;
unit libSwaC_gv_zS_HeroReviverKerrigan;
unit libSwaC_gv_zS_HeroReviverDehaka;
unit libSwaC_gv_zS_HeroReviverStukov;
point libSwaC_gv_zS_HeroDeathPoint;
string libSwaC_gv_zS_KerriganReviveFirstTimeMission;
actor libSwaC_gv_zS_KerriganActor;
actor libSwaC_gv_zS_DehakaActor;
actor libSwaC_gv_zS_StukovActor;
int libSwaC_gv_zS_KerriganCustomWindow;
int libSwaC_gv_zS_KerriganCustomWindowBG;
bool libSwaC_gv_zS_KerriganUITiersDebug;
bool libSwaC_gv_zS_KerriganUITiersLoaded;
int libSwaC_gv_zS_KerriganUITierCloseButton;
int libSwaC_gv_zS_KerriganUITierSubTitleAnchor;
int[libSwaC_gv_zSC_KerriganAbilityTiers + 1][libSwaC_gv_zSC_KerriganAbilityTierItems + 1] libSwaC_gv_zS_KerriganUITierButtons;
int[libSwaC_gv_zSC_KerriganAbilityTiers + 1][libSwaC_gv_zSC_KerriganAbilityTierItems + 1] libSwaC_gv_zS_KerriganUITierButtons2;
int[libSwaC_gv_zSC_KerriganAbilityTiers + 1][libSwaC_gv_zSC_KerriganAbilityTierItems + 1] libSwaC_gv_zS_KerriganUITierButtonIcons;
int[libSwaC_gv_zSC_KerriganAbilityTiers + 1][libSwaC_gv_zSC_KerriganAbilityTierItems + 1] libSwaC_gv_zS_KerriganUITierButtonLabel;
int libSwaC_gv_zS_KerriganUITierTemplate;
int libSwaC_gv_zS_KerriganUITierTemplate2;
int libSwaC_gv_zS_KerriganUITierTemplate3;
int[6] libSwaC_gv_zS_KerriganUITierAbilityFrame;
int[6] libSwaC_gv_zS_KerriganUITierAbilityFrame2;
int[6] libSwaC_gv_zS_KerriganUITierAbilityFrame3;
int[6] libSwaC_gv_zS_KerriganUITierAbilityFrame4;
int[6] libSwaC_gv_zS_KerriganUITierAbilityFrameLabel;
int libSwaC_gv_zS_KerriganUITierPowerLevelLabel;
int libSwaC_gv_zS_KerriganUITierPowerBar;
int libSwaC_gv_zS_KerriganUITierPowerBar2;
int libSwaC_gv_zS_KerriganUITierPowerBar3;
int libSwaC_gv_zS_KerriganUITierHeroStatHealthLabel;
int libSwaC_gv_zS_KerriganUITierHeroStatEnergyLabel;
int libSwaC_gv_zS_KerriganUITierHeroStatArmorLabel;
int libSwaC_gv_zS_KerriganUITierHeroStatDamageLabel;
int libSwaC_gv_zS_KerriganUITierHeroStatHealthValue;
int libSwaC_gv_zS_KerriganUITierHeroStatEnergyValue;
int libSwaC_gv_zS_KerriganUITierHeroStatArmorValue;
int libSwaC_gv_zS_KerriganUITierHeroStatDamageValue;
int libSwaC_gv_zS_KerriganUITierLevelUpFlash;
sound libSwaC_gv_zS_KerriganUITierLevelLoopSound;
bool libSwaC_gv_zS_KerriganCustomWindowDisplayed;
trigger libSwaC_gv_zS_KerriganCustomWindowCallbackClose;
int libSwaC_gv_zS_KerriganUIFinalHealth;
int libSwaC_gv_zS_KerriganUIFinalEnergy;
int libSwaC_gv_zS_KerriganUIFinalDamage;
int libSwaC_gv_zS_KerriganUIFinalArmor;
int libSwaC_gv_zS_KerriganUIDeltaHealth;
int libSwaC_gv_zS_KerriganUIDeltaEnergy;
int libSwaC_gv_zS_KerriganUIDeltaDamage;
int libSwaC_gv_zS_KerriganUIDeltaArmor;
unit libSwaC_gv_zS_KerriganUIBackground;
actor libSwaC_gv_zS_KerriganUIBackgroundKerrigan;
actor libSwaC_gv_zS_KerriganUIBackgroundAura;
int libSwaC_gv_zSX_KerriganUILastKnownXP;
int libSwaC_gv_zS_KerriganUIXP;
int libSwaC_gv_zS_KerriganUIOriginalXP;
int libSwaC_gv_zS_KerriganUIFinalXP;
int libSwaC_gv_zS_KerriganUITierLevel;
int libSwaC_gv_zS_KerriganCheatXP;
int libSwaC_gv_zS_KerriganLevel;
int libSwaC_gv_zS_KerriganActualLevel;
int[libSwaC_gv_zSC_KerriganAbilityTiers + 1] libSwaC_gv_zSX_KerriganTechTiers;
string[libSwaC_gv_zSC_KerriganAbilityTiers + 1][libSwaC_gv_zSC_KerriganAbilityTierItems + 1] libSwaC_gv_zS_KerriganTechTierItems;
unit libSwaC_gv_zS_Kerrigan;
int libSwaC_gv_zS_KerriganPing;
unit libSwaC_gv_zS_Dehaka;
unit libSwaC_gv_zS_Stukov;
int libSwaC_gv_zS_KerriganPhase;
int libSwaC_gv_zS_KerriganLevelLabel;
string libSwaC_gv_zS_StorySimulationMission;
bank libSwaC_gv_zS_StorySimulationOriginalBank;
string libSwaC_gv_zSX_LastStoryMap;
bool libSwaC_gv_zSX_DebugProgress;
string libSwaC_gv_zS_CurrentMap;
bool libSwaC_gv_zS_InStoryMode;
bool libSwaC_gv_zS_InCompletedCampaign;
string libSwaC_gv_zSX_LastSuccessfulMission;
bool libSwaC_gv_zSX_LastMissionSimulation;
bool libSwaC_gv_zSX_LastMissionSuccess;
string libSwaC_gv_zSX_LastMission;
bool libSwaC_gv_zSX_LastMapSuccess;
string libSwaC_gv_zSX_LastMap;
bool libSwaC_gv_zSX_IsVictoryPlayAgain;
bool libSwaC_gv_zSX_IsSimulation;
bank libSwaC_gv_zS_ArmyTechBank;
bank libSwaC_gv_zS_ArchivesBank;
string libSwaC_gv_zS_ArchiveBankName;
bool libSwaC_gv_zS_ArchivesVisited;
bool libSwaC_gv_zS_ArchivesReloading;
bool libSwaC_gv_zS_InLoadedMission;
string libSwaC_gv_zS_CampaignBankName;
bank libSwaC_gv_zS_CampaignBank;
bank libSwaC_gv_zS_StoryBank;
int libSwaC_gv_zS_CampaignDataBackup_MissionBestTime;
bool libSwaC_gv_zS_EndCinematicFinished;
bool libSwaC_gv_zS_EndCreditFinished;
int libSwaC_gv_zS_VSDialog;
int libSwaC_gv_zS_VSPanel;
int libSwaC_gv_zS_VSMainPanel;
int libSwaC_gv_zS_VSBackgroundImage;
int libSwaC_gv_zS_VSLabelMissionTitle;
int libSwaC_gv_zS_VSLabelTime;
int libSwaC_gv_zS_VSBtnContinue;
int libSwaC_gv_zS_VSBtnPlayAgain;
int libSwaC_gv_zS_VSRestartPanel;
int libSwaC_gv_zS_VSRestartDifficultyPulldown;
int libSwaC_gv_zS_VSRestartRestartButton;
int libSwaC_gv_zS_VSRestartCancelButton;
int[8] libSwaC_gv_zS_VSRestartDifficultyIndex;
int libSwaC_gv_zS_VSBackgroundCover;
int libSwaC_gv_zS_VSRewardBonusLevelPanel;
int libSwaC_gv_zS_VSRewardBonusLevelTextLabel;
int libSwaC_gv_zS_VSRewardLevelPanel;
int libSwaC_gv_zS_VSRewardLevelTextLabel;
int libSwaC_gv_zS_VSRewardLevelPanel2;
int libSwaC_gv_zS_VSRewardLevelTextLabel2;
int libSwaC_gv_zS_VSRewardLevelPanel3;
int libSwaC_gv_zS_VSRewardLevelTextLabel3;
int libSwaC_gv_zS_VSRewardLevelTextLabel4;
int libSwaC_gv_zS_VSAchievementTitle;
int[4] libSwaC_gv_zS_VSAchievementTitle2;
trigger libSwaC_gv_zS_FootageRecordingCallback;
int libSwaC_gv_zS_DebugProgressDialog;
int libSwaC_gv_zS_DebugProgressButtonOK;
int libSwaC_gv_zS_DebugProgressButtonCancel;
int libSwaC_gv_zS_DebugProgressButtonReset;
int libSwaC_gv_zS_DebugProgressLabelInfo;
int libSwaC_gv_zS_DebugProgressLabelExpeditionReq;
int libSwaC_gv_zS_DebugProgressLabelCharReq;
int libSwaC_gv_zS_DebugProgressLabelPurifierReq;
int libSwaC_gv_zS_DebugProgressLabelHybridReq;
int libSwaC_gv_zS_DebugProgressLabelZerusReq;
int libSwaC_gv_zS_DebugProgressLabelValerianReq;
int libSwaC_gv_zS_DebugProgressLabelKohalReq;
string libSwaC_gv_zS_DebugProgressLastMission;
string libSwaC_gv_zS_DebugProgressLastStoryMap;
string libSwaC_gv_zS_DebugProgressLastCreditMission;
string libSwaC_gv_zS_DebugProgressCurrentMapBak;
trigger libSwaC_gv_zS_DebugProgressExitCallbackOK;
trigger libSwaC_gv_zS_DebugProgressExitCallbackCancel;
bool libSwaC_gv_zS_DebugProgressResetUsed;
bool libSwaC_gv_zS_DebugProgressDocDirty;
string libSwaC_gv_zS_DebugProgressLastTravel;
bool libSwaC_gv_zS_DebugProgressActive;
bool libSwaC_gv_zS_DebugProgressReleaseMode;
bank libSwaC_gv_zS_DebugProgressBank;
int libSwaC_gv_zS_DebugStoryTechDialog;
int libSwaC_gv_zS_DebugStoryTechArmyCatCount;
string[21] libSwaC_gv_zS_DebugStoryTechArmyCategory;
int[21] libSwaC_gv_zS_DebugStoryTechArmyCategoryCheck;
int[21][3] libSwaC_gv_zS_DebugStoryTechArmyUnitCheck;
int[21] libSwaC_gv_zS_DebugStoryTechArmyUpgradeButtons;
int libSwaC_gv_zS_DebugStoryTechOK;
int libSwaC_gv_zS_DebugStoryTechCancel;
string libSwaC_gv_zS_DebugStoryTechUpgradeCategory;
int libSwaC_gv_zS_DebugStoryTechUpgradeDialog;
int[11] libSwaC_gv_zS_DebugStoryTechUpgradeDlgUpgrades;
int libSwaC_gv_zS_DebugStoryTechUpgradeDlgOK;
int libSwaC_gv_zS_DebugStoryTechUpgradeDlgCancel;
bool libSwaC_gv_zS_ArmyDebugUsed;
int libSwaC_gv_zS_DebugTechArmyCustomDialog;
int libSwaC_gv_zS_DebugTechArmyCustomResetButton;
int libSwaC_gv_zS_DebugKerriganDialog;
int libSwaC_gv_zS_DebugKerriganLevel;
int libSwaC_gv_zS_DebugKerriganLevelPlusButton;
int libSwaC_gv_zS_DebugKerriganLevelMinusButton;
int libSwaC_gv_zS_DebugKerriganLevelMaxButton;
trigger libSwaC_gv_zS_TechLimitsCallback;
bool libSwaC_gv_zS_DebugSuppressKerriganAchievements;
int libSwaC_gv_zS_CampaignProgressButtonParent;
int libSwaC_gv_zS_CampaignProgressButton;
int libSwaC_gv_zS_CampaignProgressTechButton;
int[6] libSwaC_gv_zS_DebugCutscenes;
string[6] libSwaC_gv_zS_DebugCutsceneNames;
int libSwaC_gv_zS_DebugCutsceneCount;
int libSwaC_gv_zS_DebugActiveCutscene;
string libSwaC_gv_zS_DebugWatchBookmark;
bool[6] libSwaC_gv_zS_DebugScenePaused;
bool libSwaC_gv_zS_DebugCutsceneCin;

// Function Declarations
text libSwaC_gf_FormatTimeCampaign (int lp_second);
string libSwaC_gf_ZS_StoryDataTableName (int lp_type, string lp_name);
void libSwaC_gf_ZS_StoreDataUIIDIntoDataTable (int lp_type, string lp_dataID, int lp_uIItemID);
int libSwaC_gf_ZS_GetUIIDFromDataID (int lp_type, string lp_dataID);
string libSwaC_gf_ZS_GetDataIDFromUIID (int lp_type, int lp_uIItemID);
string libSwaC_gf_ZS_CatalogGetFieldArrayValue (int lp_catalog, string lp_entry, string lp_field, int lp_index, int lp_player);
void libSwaC_gf_ClearAnimationwithblendtime (string lp_identifier, unit lp_unit, fixed lp_blendTime);
void libSwaC_gf_DispatchStoryEvent (int lp_event, string lp_param1, string lp_param2, bool lp_waitOption);
void libSwaC_gf_RegisterStoryEvent (int lp_event, trigger lp_callback);
string libSwaC_gf_StoryEventParameter (int lp_event, int lp_index);
void libSwaC_gf_ShowHideWorldCover (bool lp_showHide, fixed lp_transparency);
void libSwaC_gf_ZS_SwarmCampaignMissionInit ();
void libSwaC_gf_AddRemoveObjectiveRePing (int lp_ping, bool lp_addRemove, fixed lp_wait, fixed lp_interval);
void libSwaC_gf_ObjectiveRePing (int lp_ping);
void libSwaC_gf_DisplayCampaignMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
void libSwaC_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libSwaC_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
void libSwaC_gf_ZS_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libSwaC_gf_ZS_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, actor lp_talkRing, int lp_ping, int lp_localIndex);
void libSwaC_gf_HideCampaignTransmissionPortrait ();
fixed libSwaC_gf_ConvesationLineDuration (string lp_conversationLine);
void libSwaC_gf__ZergDropPod (point lp_location, unitgroup lp_units, int lp_player);
void libSwaC_gf__TerranDropPod (point lp_location, unitgroup lp_units, int lp_player);
void libSwaC_gf_CreateDropPod (int lp_race, point lp_location, unitgroup lp_units, bool lp_waitDontWait, int lp_player);
void libSwaC_gf_CreateDropPodForZergBuilding (string lp_buildingType, point lp_landingPoint, int lp_player, bool lp_waitDontWait);
void libSwaC_gf__CreateDropPodForBuildingDontWait (string lp_buildingType, point lp_landingPoint, int lp_player);
void libSwaC_gf__CreateDropPodForBuildingWait (string lp_buildingType, point lp_landingPoint, int lp_player);
string libSwaC_gf__LastDroppedUnitsDataTableName ();
unitgroup libSwaC_gf_LastDroppedUnits ();
void libSwaC_gf_ZS_SaveMissionCompletion ();
void libSwaC_gf_ZS_GameOver ();
void libSwaC_gf_EndCampaignMission (int lp_player, int lp_type);
void libSwaC_gf_RunMissionVictorySequence (trigger lp_victoryCinematic);
void libSwaC_gf_CinematicFade (bool lp_fadeIn, fixed lp_duration, color lp_color, bool lp_waitUntilDone);
void libSwaC_gf_CinematicFade3 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libSwaC_gf_CinematicFade4 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libSwaC_gf__FadeCreateDialog ();
void libSwaC_gf_PreparePlanetPortraitZoomIn (string lp_model, camerainfo lp_camera, string lp_light);
void libSwaC_gf_ZoomInPlanetPortrait ();
void libSwaC_gf_HidePlanetPortrait ();
void libSwaC_gf_ZS_UseUnitNameAsUnitTip (unit lp_unit);
void libSwaC_gf_SetUnitInfoTextCampaign (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libSwaC_gf_SetUnitInfoTextCampaignDetailed (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libSwaC_gf_EnableDisableNeedOverlordInfo (bool lp_enableDisable);
bool libSwaC_gf_NeedOverlordHighlightOn ();
bool libSwaC_gf_ZS_DisplayResourcePickupInfo ();
bool libSwaC_gf_ZS_ResourcePickupUnit (unit lp_resource);
void libSwaC_gf_ZS_InitFeaturedZergStructureTypes ();
void libSwaC_gf_ZS_StartFlashFeaturedZergStructure (point lp_position, int lp_structureIndex);
void libSwaC_gf_ZS_StoptFlashFeaturedZergStructure ();
void libSwaC_gf_EnableDisableZerglingRespawn (bool lp_enableDisable);
void libSwaC_gf_ZerglingRespawnSetPrimaryHatchery (unit lp_hatchery);
void libSwaC_gf_SetZerglingRespawnPrimarytoclosestHatcheryLairHive (point lp_point);
void libSwaC_gf_ZS_CreateKerriganLowHPUI ();
bool libSwaC_gf_ZS_KerriganHPTooLow ();
void libSwaC_gf_ZS_StopKerriganLowHPSound ();
void libSwaC_gf_AddMissionTipUserData (string lp_tipData);
void libSwaC_gf_DisplayMissionTip (text lp_buttonText);
void libSwaC_gf_ShowHideMissionTip (bool lp_showHide);
void libSwaC_gf_ZS_RefreshTip ();
void libSwaC_gf_TurnSelectLarvaButtonHighlightOnOff (bool lp_highlighted);
bool libSwaC_gf_ValidAntiAirUnitIsNearUnit (int lp_player, unit lp_unit);
void libSwaC_gf_RemindPlayertoCreateAntiAirUnits ();
void libSwaC_gf_RemindPlayertoCompleteBonusObjective (string lp_bonusObjective, fixed lp_delay);
void libSwaC_gf_RemindPlayertoSpawnDrones (fixed lp_delay, int lp_amount);
void libSwaC_gf_RemindPlayertoAssign3DronestoExtractor (unit lp_extractor, fixed lp_delay);
void libSwaC_gf_DifficultySetting (int lp_difficulty);
void libSwaC_gf_ZS_UpdateObjectivePanelMask ();
void libSwaC_gf_ZS_UpdateErrorPanelMask ();
void libSwaC_gf_ZS_UpdateErrorPanelMaskSingle ();
void libSwaC_gf_TimerWindowCreate2 (timer lp_timer, text lp_title, bool lp_visible, bool lp_elapsed, int lp_positiveNegativeOptions);
color libSwaC_gf_ProgressColor (int lp_minValue, int lp_maxValue, int lp_progress, color lp_color1, color lp_color2, color lp_color3, int lp_steps);
void libSwaC_gf_DisplayArmyButton (bool lp_doDoNot);
void libSwaC_gf_DisplayProgressBar (text lp_title, int lp_min, int lp_max);
void libSwaC_gf_SetProgressBarTitle (text lp_title);
void libSwaC_gf_SetProgressBarValueRange (int lp_min, int lp_max);
void libSwaC_gf_SetProgressBarLabel (text lp_label);
void libSwaC_gf_SetProgressBarProgress (int lp_progress);
void libSwaC_gf_SetProgressBarColor (color lp_color);
void libSwaC_gf_ShowHideProgressBar (bool lp_showHide);
void libSwaC_gf_ZS_UpdateProgressBar ();
color libSwaC_gf_GetProgressBarColorCampaign ();
int libSwaC_gf_ZS_BB_HPBarCurrentWidth ();
text libSwaC_gf_ZS_BB_HPBarFormatLabel ();
void libSwaC_gf_ZS_BB_HPBarChange ();
void libSwaC_gf_DisplaySingularBossBarSwarmCampaign (string lp_portrait, text lp_title, int lp_max);
void libSwaC_gf_SetSingularBossBarMaximumValueSwarmCampaign (int lp_max, bool lp_refresh);
void libSwaC_gf_SetSingularBossBarCurrentValueSwarmCampaign (int lp_current, bool lp_refresh);
void libSwaC_gf_SetSingularBossBarBossSwarmCampaign (unit lp_boss, bool lp_refresh);
void libSwaC_gf_ShowHideSingularBossBarSwarmCampaign (bool lp_showHide);
void libSwaC_gf_RefreshSingularBossBarSwarmCampaign ();
void libSwaC_gf_SetSingularBossBarColor (color lp_color);
void libSwaC_gf_SetSingularBossBarTitleColor (color lp_color);
void libSwaC_gf_SetKerriganRevivable (bool lp_revivable);
void libSwaC_gf_SetHeroPanelUnit (int lp_index, unit lp_heroUnit);
void libSwaC_gf_ZS_ShowHideHeroPanel (bool lp_showHide);
void libSwaC_gf_ZS_CreateHeroPanel (int lp_index);
void libSwaC_gf_ZS_UpdateHeroPanel (int lp_index);
void libSwaC_gf_ZS_PlayKerriganHeroPanelLevelUpEffect ();
unit libSwaC_gf_ZS_HeroReviveCocoon (int lp_heroType);
void libSwaC_gf_SetHeroReviverCocoon (int lp_heroType, unit lp_cocoon);
void libSwaC_gf_CreateObjectivePing (bool lp_objectiveType, point lp_position, text lp_tooltip);
void libSwaC_gf_PingMinimapCampaign (playergroup lp_players, point lp_pos, fixed lp_dur, color lp_color);
void libSwaC_gf_LaunchMissionFromStoryMode (string lp_mission, int lp_difficulty, bool lp_isSimulation);
int libSwaC_gf_ZS_MissionIndex (string lp_mission);
void libSwaC_gf_ZS_CamStatsSaveUnitCreated (string lp_section, int lp_missionID, int lp_difficultyID);
string libSwaC_gf_ZS_MissionInitial (string lp_mission);
void libSwaC_gf_CreateMissionAutosavePoint (text lp_description);
void libSwaC_gf_ZS_MissionAutoSave (text lp_description);
void libSwaC_gf_CreateTipCampaign (string lp_tipData, int lp_tipType, playergroup lp_players);
void libSwaC_gf_SetAllSoundChannelVolumesCampaign (int lp_mode);
void libSwaC_gf_MuteUnmuteAllSoundChannels (bool lp_muteUnmute, int lp_ignoredChannel, playergroup lp_players);
void libSwaC_gf_ResearchAIUpgrade (int lp_count, string lp_upgrade, int lp_player);
void libSwaC_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libSwaC_gf_GivePlayerResources (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libSwaC_gf_DisplayRewardFloatingText (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libSwaC_gf_DisplayMissionObjectiveRewardFloatingText (point lp_location, string lp_objective, int lp_player);
void libSwaC_gf_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
int libSwaC_gf_CampaignKerriganZergPlayerColor ();
void libSwaC_gf_ZS_ApplyKerriganZergColor ();
text libSwaC_gf_FormatTextWithReplacement (text lp_text, text lp_replacement1, text lp_replacement2, text lp_replacement3, text lp_replacement4);
unit libSwaC_gf_ZS_HatcheryBestWorkerRallyMineral (unit lp_hatcher);
void libSwaC_gf_SetHatcheryRallyPoint (unit lp_hatchery, point lp_rallyPoint);
void libSwaC_gf_SetAllHatcheriesRallyPoints (int lp_player);
string libSwaC_gf_ZS_ReticleModelOfStyle (int lp_type, int lp_size);
string libSwaC_gf_ZS_ReticleTextFontOfStyle (int lp_type);
void libSwaC_gf_CreateReticleEffectAndTextTagAtPoint (int lp_type, int lp_size, text lp_text, point lp_location);
void libSwaC_gf_AttachReticleEffectAndTextTagOnUnit (int lp_type, int lp_size, text lp_text, unit lp_target, string lp_attachPoint);
void libSwaC_gf_CampaignAwardAchievement (string lp_achievement, int lp_player);
void libSwaC_gf_CreateExplosionatPointAdvanced (point lp_point, string lp_actor, soundlink lp_sound);
bool libSwaC_gf_PlayerIsInCombatCampaign (int lp_player);
void libSwaC_gf_ShareVisionAmongPlayers (playergroup lp_players);
void libSwaC_gf_CinematicModeSwarmCampaign (bool lp_onOff, fixed lp_duration);
bool libSwaC_gf_ZS_StartingWorkerAutoHarvestEnabled ();
void libSwaC_gf_StartingWorkersAutoHarvest (region lp_regionMineralWorker, region lp_regionGasWorker);
void libSwaC_gf_ResetHeroAbilityCooldowns (int lp_hero);
void libSwaC_gf_ZS_ResetAbilityCD (abilcmd lp_abilityCommand, unit lp_hero);
int libSwaC_gf_ZS_DifficultyIndex (int lp_difficulty);
int libSwaC_gf_ZS_DifficultyFromIndex (int lp_index);
void libSwaC_gf_ZS_SetCampaignDifficulty (int lp_difficulty);
string libSwaC_gf_StoryMapLoadingScreenImage (string lp_map);
string libSwaC_gf_StoryMapLoadingScreenVictoryImage (string lp_map);
string libSwaC_gf_StoryMapMissionArchiveBackgroundImage (string lp_map);
bool libSwaC_gf_StoryMapTypeCheck (string lp_map, int lp_mapType);
string libSwaC_gf_StoryMapFile (string lp_map);
string libSwaC_gf_StoryMapPlanet (string lp_map);
text libSwaC_gf_StoryMapName (string lp_map);
text libSwaC_gf_StoryMapNameLowerCase (string lp_map);
text libSwaC_gf_StoryMapHelp (string lp_map);
text libSwaC_gf_StoryMapHelp2 (string lp_map);
string libSwaC_gf_StoryMapContactPortrait (string lp_map);
int libSwaC_gf_MissionStatusAge (string lp_mission, int lp_status);
int libSwaC_gf_MissionStatus (string lp_mission);
bool libSwaC_gf_MissionStatusCheck (string lp_mission, int lp_status);
string libSwaC_gf_MissionPitch (string lp_mission);
string libSwaC_gf_TravelPitch (string lp_mission);
int libSwaC_gf_NumberOfMissions (int lp_options);
int libSwaC_gf_NumberOfMissionsAll (int lp_options);
int libSwaC_gf_NumberOfMissionArcsCompleted ();
int libSwaC_gf_MissionCompleteBestTime (string lp_mission, int lp_difficulty);
string libSwaC_gf_CurrentMap ();
string libSwaC_gf_MissionArmyCategoryUnlocked (string lp_mission);
string libSwaC_gf_MissionArmyEvolutionUnlocked (string lp_mission);
int libSwaC_gf_MissionRewardTotalEarned (string lp_mission, string lp_type);
int libSwaC_gf_MissionRewardTotal (string lp_mission, string lp_type);
string libSwaC_gf_MissionDefaultMusic ();
bool libSwaC_gf_MissionCompletedOnDifficulty (string lp_mission, int lp_difficulty);
string libSwaC_gf_ZS_MapUserDataInstance (string lp_map);
string libSwaC_gf_ZS_MapDataFromUserDataInstance (string lp_map);
string libSwaC_gf_ZS_StoryMapBankID (string lp_map);
int libSwaC_gf_ZS_MissionKerriganXPRewarded (string lp_mission, bool lp_debugProgress);
bool libSwaC_gf_ZS_MissionisInstallation (string lp_mission);
int libSwaC_gf_ZS_CompletedMissionCountOnDifficulty (int lp_difficulty);
void libSwaC_gf_LaunchMission (string lp_mission, bool lp_simulation, int lp_difficulty);
void libSwaC_gf_StoryMapSwitch (string lp_nextMap);
void libSwaC_gf_UpdateMissionFlow ();
void libSwaC_gf_SetCurrentMap (string lp_map);
void libSwaC_gf_ZS_SetMissionStatusAge (string lp_mission, int lp_status, int lp_age);
void libSwaC_gf_ZS_IncreaseMissionAge (string lp_mission);
void libSwaC_gf_ZS_CompleteMission (string lp_mission);
void libSwaC_gf_ZS_UpdateSimulationMissionAges (string lp_simulationMap);
void libSwaC_gf_ZS_MarkMissionAsStatus (string lp_mission, int lp_status);
void libSwaC_gf_ZS_LockUnlockMissionIfCondition (bool lp_lockUnlock, string lp_mission, bool lp_condition);
void libSwaC_gf_ZS_SetMissionCompletionBestTime (string lp_mIssion, int lp_difficulty, int lp_time);
void libSwaC_gf_ZS_SaveMapToBank (string lp_bankMap, bank lp_targetBank, bool lp_isSimulation);
void libSwaC_gf_ZS_LoadMapFromBank (string lp_bankMap, bank lp_sourceBank);
int libSwaC_gf_ZS_GetObjectiveForData (string lp_objectiveData);
string libSwaC_gf_ZS_ObjectiveUserDataInstance (string lp_objective);
text libSwaC_gf_MissionObjectiveDescription (string lp_objective);
bool libSwaC_gf_MissionObjectiveStateCheck (string lp_objective, int lp_state);
bool libSwaC_gf_MissionObjectiveIsPrimary (string lp_objective);
text libSwaC_gf_MissionObjectiveName (string lp_objective);
int libSwaC_gf_MissionObjectiveRewardsEarned (string lp_objective, string lp_type);
int libSwaC_gf_MissionObjectiveRewardsAvailable (string lp_objective, string lp_type);
int libSwaC_gf_MissionObjectiveRewardsAvailable2 (string lp_objective, string lp_type);
int libSwaC_gf_MissionObjectiveItemCount (string lp_objective);
int libSwaC_gf_MissionObjectiveProgress (string lp_objective);
int libSwaC_gf_MissionObjectiveRewards (string lp_objective, string lp_type);
int libSwaC_gf_ZS_MissionObjectiveBestProgress (string lp_objective);
int libSwaC_gf_ZS_GetObjectiveTypeInteger (string lp_objective);
bool libSwaC_gf_ZS_GetObjectiveTypeBoolean (string lp_objective);
bool libSwaC_gf_ZS_AllObjectivesCompletedForMission (string lp_mission);
bool libSwaC_gf_ZS_ObjectiveRewardDivided (string lp_objective);
string libSwaC_gf_ZS_ObjectiveTableString (string lp_objective);
text libSwaC_gf_ZS_CampaignObjectiveBonusText (string lp_objective);
void libSwaC_gf_SetMissionObjectiveProgress2 (string lp_objective, int lp_current, bool lp_showHideMax, text lp_label, bool lp_updatetext);
void libSwaC_gf_SetMissionObjectiveProgressAdvanced (string lp_objective, int lp_current, bool lp_showHideMax, text lp_label, bool lp_updatetext, bool lp_updateObjectiveStateOption);
void libSwaC_gf_UpdateMissionObjectiveText (string lp_objective, int lp_current, bool lp_showHideMax, text lp_label);
void libSwaC_gf_CreateObjectiveCampaign (string lp_objectiveData);
void libSwaC_gf_ZS_SetMissionObjectiveState (string lp_objective, int lp_state);
void libSwaC_gf_ZS_SetObjectiveProgressData (string lp_objective, int lp_progress, bool lp_updateObjectiveState);
void libSwaC_gf_ZS_MissionObjectiveBestProgressSet (string lp_objective, int lp_progress);
void libSwaC_gf_SetPlanetAvailable (string lp_planet, bool lp_available);
void libSwaC_gf_ZS_UpdatePlanetData (string lp_currentLocation);
void libSwaC_gf_ZS_UpdatePlanetDataSingle (string lp_location, string lp_currentLocation);
void libSwaC_gf_ZS_SetPlanetActive (string lp_planet);
text libSwaC_gf_StoryPlanetName (string lp_planet);
text libSwaC_gf_StoryUIPlanetName (string lp_planet);
text libSwaC_gf_StoryUIPlanetPrompt (string lp_planet);
bool libSwaC_gf_StoryPlanetIsAvailable (string lp_planet);
string libSwaC_gf_StoryPlanetMap (string lp_planet);
string libSwaC_gf_StoryPlanetNonmissionPitch (string lp_planet);
bool libSwaC_gf_MissionAvailableOnPlanet (string lp_planet);
string libSwaC_gf_ZS_PlanetUserData (string lp_planet);
string libSwaC_gf_ZS_PlanetDataString (string lp_planet);
void libSwaC_gf_DisplayConversationTimestamp (string lp_conversation);
void libSwaC_gf_DisplayTimestamp (string lp_timestamp, bool lp_waitDontWait);
void libSwaC_gf_HaltTimestamp ();
void libSwaC_gf_ZS_DisplayCinematicTimestamp (string lp_scene);
void libSwaC_gf_PlayCinematic (string lp_scene, bool lp_animatic);
string libSwaC_gf_ZS_CinematicCutscene (string lp_scene);
void libSwaC_gf_CampaignPlayCutscene (string lp_file, point lp_position, bool lp_waitDontWait, bool lp_allowSkip);
void libSwaC_gf_CampaignPlayCutscene2 (string lp_file, bool lp_waitDontWait, bool lp_allowSkip);
bool libSwaC_gf_CampaignCutsceneWasSkipped ();
void libSwaC_gf_SetStoryScenePlayed (string lp_scene, bool lp_played);
void libSwaC_gf_StoryCreateKerrigan (point lp_spawnPoint, int lp_player, int lp_phase, fixed lp_facing, int lp_flags);
void libSwaC_gf_StoryCreateEvoMaster (point lp_spawnPoint, int lp_player, fixed lp_facing, int lp_flags);
void libSwaC_gf_ZS_FadeAllSoundsExceptMusic (fixed lp_duration, bool lp_wait);
text libSwaC_gf_StorySceneName (string lp_scene);
bool libSwaC_gf_StoryScenePlayed (string lp_scene);
string libSwaC_gf_ZS_EvoMasterType ();
string libSwaC_gf_ZS_SceneMovie (string lp_scene);
void libSwaC_gf_EnableCampaignTechUnit (bool lp_enableDisable, string lp_techUnit, int lp_player);
bool libSwaC_gf_CampaignTechUnitIsEnabled (string lp_techUnit);
string libSwaC_gf_ZS_CampaignTechUnitType (string lp_techUnit);
void libSwaC_gf_ZS_UpdateWeaponArmorUpgrades (int lp_player);
void libSwaC_gf_ZS_EnableUpgradeAndAbilityCommandForTech (bool lp_enableDisable, int lp_catalog, string lp_entry, string lp_upgradeField, string lp_abilCommandField, int lp_player);
void libSwaC_gf_ZS_ApplyTech (int lp_player);
void libSwaC_gf_ZS_UpdateTechStates (int lp_player);
void libSwaC_gf_ZS_ResetTech ();
void libSwaC_gf_ZS_UpdateQueenAbilities (int lp_player);
void libSwaC_gf_ZS_StoreTechBonusAtMissionBeginning ();
void libSwaC_gf_AddUnitTypeToUnitHelpPanel (string lp_unitType, bool lp_saveInHistory, int lp_player);
string libSwaC_gf_ZS_HelpUnitsPanel_UnitTypeStringID (string lp_unitType);
bool libSwaC_gf_ZS_HelpUnitsPanel_EnabledUnitTypeAlreadyExisted (string lp_unitType);
void libSwaC_gf_ZS_HelpUnitsPanel_AddEnabledUnitType (string lp_unitType);
void libSwaC_gf_ZS_HelpUnitsPanel_ResetEnabledUnitTypes ();
void libSwaC_gf_ZS_HelpUnitsPanel_UpdatePanel ();
void libSwaC_gf_TS_HelpTechTree_UpdatePanel ();
void libSwaC_gf_DisplayEggRoom ();
void libSwaC_gf_ViewEggRoom ();
void libSwaC_gf_PrepareEggRoom ();
void libSwaC_gf_HideEggRoom ();
void libSwaC_gf_ZS_CloseEggRoom ();
void libSwaC_gf_ZS_ArmyCustomEggUILeave ();
void libSwaC_gf_ZS_ArmyCustomEggUIHide ();
void libSwaC_gf_ZS_ArmyCustomEggUIEnter ();
void libSwaC_gf_ZS_ArmyCustomEggUIUpdate (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCustomEggPlayRawrAnimation (string lp_armyCategory);
void libSwaC_gf_ZS_ShowHideStoryUnit (bool lp_showHide, unit lp_unit);
unit libSwaC_gf_ArmyCategoryEggUnitInEggRoom (string lp_armyCategory);
void libSwaC_gf_ArmyCategoryEggUnitShowHide (string lp_armyCategory, bool lp_showHide);
point libSwaC_gf_ZS_ArmyCustomCategoryEggLocation (string lp_armyCategory);
bool libSwaC_gf_ZS_ArmyEvoHasConvo ();
bool libSwaC_gf_ZS_ArmyEvoHasConvo2 ();
string libSwaC_gf_StoryArmyCategoryUIUnitType (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCustomCategoryEggUnitType (string lp_armyCategory);
text libSwaC_gf_ZS_ArmyCustomCategoryEggName (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCustomCategoryEggCamera (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCustomCategoryUITechUnit (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyEggRoomTurnClickableOnOff (bool lp_onOff);
string libSwaC_gf_ZS_EggRoomCamera ();
string libSwaC_gf_ZS_ArmyCustomEggZoomCamera (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCustomEggPlayLight (string lp_lightType, string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCustomEggSetPlayLight (bool lp_play);
void libSwaC_gf_ZS_ArmyCustomEggEvoPlayLight (bool lp_play);
string libSwaC_gf_ZS_ArmyCustomEggLightBookmark (string lp_armyCategory, string lp_type);
string libSwaC_gf_ZS_ArmyCategoryBookmarkToken (string lp_armyCategory, bool lp_categoryOnly);
void libSwaC_gf_StoryDisableEggRoomEvoMasterBirth ();
void libSwaC_gf_ZS_ArmyCalloutShowHide (bool lp_showHide, string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCalloutCreate (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCalloutUpdate (string lp_armyCategory);
int libSwaC_gf_ZS_ArmyCalloutFlash (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCalloutAttach (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCategoryCalloutAttachment (string lp_armyCategory);
bool libSwaC_gf_ZS_ArmyCategoryShouldCallout (string lp_armyCategory);
void libSwaC_gf_StoryCreateCallout2 (unit lp_attachUnit, string lp_attachment);
void libSwaC_gf_ZS_ArmyEggRoomCalloutSetText (int lp_callout, text lp_title, text lp_subtitle);
void libSwaC_gf_ZS_ArmyCustomUpgradeUIEnter ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUILeave ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUIHide ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUIUpdate ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUIUpdateCurrentUpgradeInfo ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUIUpdateButtons ();
void libSwaC_gf_ZS_ArmyCustomUpgradeUIUpdateButtonsSingle (string lp_upgrade);
int libSwaC_gf_ZS_ArmyCustomUpgradeUIIndex (string lp_upgrade);
void libSwaC_gf_ZS_ArmyCustomUpgradeSelect (string lp_upgrade);
text libSwaC_gf_ZS_ArmyUnitTooltip2 (string lp_armyUnit);
void libSwaC_gf_ZS_ArmyCustomEvolutionUIEnter (string lp_splitCategory);
void libSwaC_gf_ZS_ArmyCustomEvolutionUICreate ();
point libSwaC_gf_ZS_ArmyCustomEvolutionUIUnitAttachment (string lp_armyUnit);
void libSwaC_gf_ZS_ArmyCustomEvolutionApplyRotation (unit lp_unit, string lp_armyUnit);
string libSwaC_gf_ZS_ArmyCustomEvolutionUICamera (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCustomEvolutionUILeave ();
void libSwaC_gf_ZS_ArmyCustomEvolutionUIHide ();
void libSwaC_gf_ZS_ArmyCustomEvolutionUIUpdate ();
void libSwaC_gf_ZS_ArmyCustomEvolutionUIUpdateSelect ();
void libSwaC_gf_ZS_ArmyCustomEvolutionPlayUnitLight (string lp_side, string lp_state);
void libSwaC_gf_ZS_ArmyCustomEvolutionPlayFanfare (string lp_unitSide);
void libSwaC_gf_StoryDisplayEvolutionMissionScreen (string lp_armyCategory);
void libSwaC_gf_ZS_ArmyCustomMissionUIEnter ();
void libSwaC_gf_ZS_ArmyCustomMissionUILeave ();
void libSwaC_gf_ZS_ArmyCustomMissionCreate ();
void libSwaC_gf_ZS_ArmyCustomMissionUpdate ();
void libSwaC_gf_ZS_ArmyCustomMissionLaunch ();
string libSwaC_gf_ZS_ArmyCustomMissionNextMissionCategory ();
void libSwaC_gf_StoryArmyUIArchivesDisplay ();
void libSwaC_gf_ZS_ArmyUIArchivesCreate ();
void libSwaC_gf_ZS_ArmyUIArchivesUpdate ();
void libSwaC_gf_ZS_ArmyUIArchivesUpdateData ();
void libSwaC_gf_ZS_ArmyUIArchivesClose ();
text libSwaC_gf_StoryArmyCategoryName (string lp_armyCategory);
text libSwaC_gf_StoryArmyCategoryName2 (string lp_armyCategory);
string libSwaC_gf_StoryArmyCategoryIcon (string lp_armyCategory);
bool libSwaC_gf_StoryArmyCategoryStateCheck (string lp_armyCategory, int lp_state);
string libSwaC_gf_StoryArmyCategoryPlanetCamera (string lp_armyCategory);
string libSwaC_gf_StoryArmyCategoryEvolutionMission (string lp_armyCategory);
void libSwaC_gf_ZS_SetArmyCategoryState (string lp_armyCategory, int lp_state);
void libSwaC_gf_ZS_UpdateArmyCategoryStates (int lp_player);
string libSwaC_gf_ZS_TechUnitOfArmyCategory (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCategoryOfTechUnit (string lp_techUnit);
string libSwaC_gf_ZS_StoryArmyCategoryUnitType (string lp_armyCategory);
int libSwaC_gf_ZS_StoryArmyCategoryState (string lp_armyCategory);
string libSwaC_gf_ZS_ArmyCategoryMorphCategory (string lp_armyCategory, int lp_index);
bool libSwaC_gf_ZS_StoryArmyCategoryUsedInUI (string lp_armyCategory);
bool libSwaC_gf_ZS_StoryArmyCategoryIsMorph (string lp_armyCategory);
string libSwaC_gf_ZS_StoryArmyCategoryPurchasedUnit (string lp_armyCategory);
bool libSwaC_gf_ZS_StoryArmyCategoryAllowedForMap (string lp_armyCategory, string lp_mission);
string libSwaC_gf_ZS_ArmyUltraUpgradeRequiredMission (string lp_armyCategory);
void libSwaC_gf_SetArmyUpgradeState (string lp_armyUpgrade, int lp_state, int lp_player);
int libSwaC_gf_ZS_StoryArmyUpgradeState (string lp_upgrade);
int libSwaC_gf_StoryArmyUpgradeCost (string lp_armyUpgrade);
void libSwaC_gf_ZS_UpdateArmyUpgradeStates ();
void libSwaC_gf_ZS_SetArmyUpgradeState (string lp_armyUpgrade, int lp_state);
void libSwaC_gf_ZS_SetArmyUpgradeStateCore (string lp_armyUpgrade, int lp_state);
text libSwaC_gf_ZS_StoryArmyUpgradeName (string lp_armyUpgrade);
text libSwaC_gf_ZS_StoryArmyUpgradeDescription (string lp_armyUpgrade);
string libSwaC_gf_ZS_StoryArmyUpgradeIcon (string lp_armyUpgrade);
string libSwaC_gf_ZS_StoryArmyUpgradeMovie (string lp_armyUpgrade);
string libSwaC_gf_ZS_StoryArmyUpgradeCategory (string lp_armyUpgrade);
text libSwaC_gf_ZS_StoryArmyUpgradeTooltip (string lp_armyUpgrade);
string libSwaC_gf_ZS_StoryArmyUpgradeUserData (string lp_armyUpgrade);
bool libSwaC_gf_ZS_StoryArmyCategoryUpgradePurchased (string lp_category);
text libSwaC_gf_ZS_StoryArmyUpgradeResults (string lp_armyUpgrade);
text libSwaC_gf_ZS_StoryArmyUpgradeResultsTitle (string lp_armyUpgrade);
string libSwaC_gf_StoryArmyUnitInCategory (string lp_category, int lp_index);
text libSwaC_gf_StoryArmyUnitName (string lp_armyUnit);
text libSwaC_gf_StoryArmyUnitTooltip (string lp_armyUnit);
text libSwaC_gf_StoryArmyUnitArmyName (string lp_armyUnit);
int libSwaC_gf_StoryArmyUnitCost (string lp_armyUnit);
string libSwaC_gf_ZS_ArmyUnitPlanetPanelCamera (string lp_armyUnit);
string libSwaC_gf_ZS_ArmyUnitBonusMissionCamera (string lp_armyUnit);
string libSwaC_gf_ZS_TechUnitOfArmyUnit (string lp_armyUnit);
string libSwaC_gf_ZS_StoryArmyUnitUnitType (string lp_armyUnit);
string libSwaC_gf_ZS_ArmyUnitOfTechUnit (string lp_armyUnit);
string libSwaC_gf_ZS_ArmyUnitMorphUnit (string lp_armyUnit, int lp_index);
text libSwaC_gf_ZS_ArmyUnitDescription (string lp_armyUnit);
text libSwaC_gf_ZS_ArmyUnitTooltip (string lp_armyUnit);
text libSwaC_gf_ZS_ArmyUnitTitle (string lp_armyUnit);
string libSwaC_gf_ZS_ArmyCategoryOfArmyUnit (string lp_armyUnit);
int libSwaC_gf_ZS_StoryArmyUnitState (string lp_armyUnit);
string libSwaC_gf_ZS_StoryArmyUnitMovie (string lp_armyUnit);
string libSwaC_gf_ZS_StoryArmyUnitEnableButton (string lp_armyUnit);
void libSwaC_gf_ZS_SetArmyUnitState (string lp_armyUnit, int lp_state);
void libSwaC_gf_ZS_PurchaseArmyUnit (string lp_armyUnit);
void libSwaC_gf_ZS_UpdateArmyUnitStates ();
void libSwaC_gf_ZS_SaveArmyCategoryToBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_SaveArmyUnitToBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_SaveArmyUpgradeToBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_LoadArmyCategoryFromBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_LoadArmyUnitFromBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_LoadArmyUpgradeFromBank (bank lp_bank, string lp_section);
void libSwaC_gf_ZS_ApplyArmyTech (int lp_player);
void libSwaC_gf_ZS_ResetArmyTech ();
void libSwaC_gf_StartKerriganReviveCooldown ();
void libSwaC_gf_StartKerriganReviveCooldown2 ();
void libSwaC_gf_StartKerriganReviveCooldown3 (point lp_revivePoint);
unit libSwaC_gf_ZS_ClosestHatcheryToPoint (point lp_point);
void libSwaC_gf_ReviveHeroInstantly (int lp_type, bool lp_displayReviveMessage);
void libSwaC_gf_DisplayKerriganTierCustomizationWindow (trigger lp_callbackOpen, trigger lp_callbackClose);
void libSwaC_gf_ZS_CloseKerriganCustomizationWindow ();
void libSwaC_gf_ZS_KerriganUITierCreate ();
void libSwaC_gf_ZS_KerriganUITierHookupButtonFX (int lp_parentControl, string lp_frame);
void libSwaC_gf_ZS_KerriganUITierUpdate ();
void libSwaC_gf_ZS_KerriganUIUpdateButtonFXInstant ();
void libSwaC_gf_ZS_KerriganUIShowLevelUpFlash ();
text libSwaC_gf_ZS_KerriganUITierAbilityName (string lp_heroAbility);
text libSwaC_gf_ZS_KerriganUITierAbilityTooltip (string lp_heroAbility);
string libSwaC_gf_ZS_KerriganUITierMovie (string lp_kerriganAbility);
string libSwaC_gf_ZS_KerriganUITierAbilityIcon (string lp_kerriganAbility);
bool libSwaC_gf_ZS_KerriganUITierIsNew (int lp_tier);
bool libSwaC_gf_ZS_KerriganUITierIsAnimating (int lp_tier);
void libSwaC_gf_ZS_ShowKerriganUIBackground ();
string libSwaC_gf_ZS_KerriganUIKerirganModelType ();
void libSwaC_gf_ZS_HideKerriganUIBackground ();
string libSwaC_gf_ZS_HeroUnitType (int lp_hero);
void libSwaC_gf_CreateHero2 (point lp_spawnPoint, int lp_player, int lp_type, fixed lp_facing, int lp_flags, int lp_purpose);
void libSwaC_gf_ZS_CreateKerriganPing ();
void libSwaC_gf_RegisterCampaignKerrigan (unit lp_kerrigan);
bool libSwaC_gf_StoryKerriganHasNewAbilities ();
bool libSwaC_gf_StoryKerriganNewTierUnlocked ();
void libSwaC_gf_ZS_EnableKerriganTierAbility (bool lp_enableDisable, string lp_kerriganAbility);
string libSwaC_gf_ZS_KerriganAbilityUserData (string lp_ability);
int libSwaC_gf_ZS_KerriganAbilityTier (string lp_kerriganAbility);
int libSwaC_gf_ZS_KerriganAbilityTierIndex (string lp_kerriganAbility);
int libSwaC_gf_ZS_KerriganAbilityCost (string lp_kerriganAbility);
int libSwaC_gf_ZS_KerriganAbilityState (string lp_kerriganAbility);
int libSwaC_gf_ZS_KerriganTierCost (int lp_tier);
int libSwaC_gf_ZS_KerriganTierFromXP ();
bool libSwaC_gf_ZS_KerriganTierCost2 (int lp_tier);
text libSwaC_gf_ZS_KerriganTierDescription (string lp_kerriganAbility);
text libSwaC_gf_ZS_KerriganTierReward (string lp_kerriganAbility);
void libSwaC_gf_ZS_ApplyKerriganModelUpgrades (int lp_player);
void libSwaC_gf_ZS_UpdateKerriganType ();
void libSwaC_gf_ZS_KerriganCustomStatusBarUpdate ();
bool libSwaC_gf_KerriganPhaseCheck (int lp_phase);
int libSwaC_gf_StoryKerriganLevel ();
void libSwaC_gf_SetStoryKerriganLevel (int lp_level);
int libSwaC_gf_StoryKerriganExperience ();
void libSwaC_gf_SetStoryKerriganExperience (int lp_xP);
void libSwaC_gf_ZS_LevelUpKerrigan ();
void libSwaC_gf_ZS_RecalculateKerriganXP ();
int libSwaC_gf_ZS_KerriganLevelXPMax (int lp_level);
int libSwaC_gf_ZS_KerriganLevelFromXP (int lp_xP);
int libSwaC_gf_ZS_KerriganXPFromLevel (int lp_level);
void libSwaC_gf_ZS_SaveKerriganTechToBank (bank lp_bank, string lp_sectionTech);
void libSwaC_gf_ZS_LoadKerriganTechFromBank (bank lp_bank, string lp_sectionTech);
void libSwaC_gf_ZS_UpdateKerriganTech ();
void libSwaC_gf_ZS_ApplyKerriganTechTiers (int lp_player);
void libSwaC_gf_ZS_ResetKerriganTechTiers ();
int libSwaC_gf_ZS_KerriganReturnLevelBonusLife (int lp_kerriganLevel);
int libSwaC_gf_ZS_KerriganReturnLevelBonusEnergy (int lp_kerriganLevel);
int libSwaC_gf_ZS_KerriganReturnLevelBonusArmor (int lp_kerriganLevel);
int libSwaC_gf_ZS_KerriganReturnLevelBonusDamage (int lp_kerriganLevel);
void libSwaC_gf_ZS_ApplyKerriganLevelBonus (int lp_player);
void libSwaC_gf_StorySetSimulationMission (string lp_mission);
void libSwaC_gf_StorySimulationEnd ();
bool libSwaC_gf_StoryInSimulation ();
void libSwaC_gf_ULoadCampaignData (string lp_map);
void libSwaC_gf_PrepareForMission (string lp_nextMission, bool lp_nextIsSimulation, bool lp_nextIsVictoryAgain, int lp_difficulty);
void libSwaC_gf_PrepareForStoryMode (int lp_victoryDefeat, int lp_difficulty);
void libSwaC_gf_PrepareForStoryMapSwitch (string lp_nextMap);
void libSwaC_gf_PrepareForStoryModeTransitionalSave ();
void libSwaC_gf_CreateStoryModeTransitionSave (text lp_name, text lp_transition);
string libSwaC_gf_PostMissionStoryMap (string lp_mission, bool lp_simulation, int lp_victoryDefeat);
bool libSwaC_gf_CurrentMissionIsSimulation ();
string libSwaC_gf_LastMap ();
bool libSwaC_gf_LastMapConditionCheck (int lp_condition);
string libSwaC_gf_LastMission ();
bool libSwaC_gf_LastMissionConditionCheck (int lp_condition);
string libSwaC_gf_LastSuccessfulMission ();
void libSwaC_gf_ZS_SaveAllTransitionData (bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat);
void libSwaC_gf_ZS_LoadAllTransitionData (string lp_map);
void libSwaC_gf_ZS_SaveTransitionVars (bank lp_targetBank, string lp_map, bool lp_nextIsSimulation, bool lp_nextIsVictoryPlayAgain, bool lp_resultFromDefeat, bool lp_resultFromSimulation, bool lp_resultFromVictoryAgain);
void libSwaC_gf_ZS_LoadTransitionVars (bank lp_sourceBank, string lp_map);
void libSwaC_gf_ZS_PrepareLoadingScreen (string lp_nextMap, bool lp_restart);
void libSwaC_gf_ZS_UpdateCampaignScreen (string lp_mission);
void libSwaC_gf_ZS_CampaignPreload ();
void libSwaC_gf_ResetCampaignData ();
void libSwaC_gf_ZS_SaveArmyTechBank (string lp_nextMission, bool lp_simulation);
void libSwaC_gf_ZS_OpenArmyTechBank ();
string libSwaC_gf_ZS_ArmyCategoryBankPath (string lp_category);
string libSwaC_gf_ZS_ArmyCategoryBankSection (string lp_category);
string libSwaC_gf_ZS_ArmyCategoryBankKey (string lp_category);
string libSwaC_gf_ZS_ArmyUnitBankPath (string lp_unit);
string libSwaC_gf_ZS_ArmyUnitBankSection (string lp_unit);
string libSwaC_gf_ZS_ArmyUnitBankKey (string lp_unit);
void libSwaC_gf_ZS_OpenArchiveBank ();
void libSwaC_gf_ZS_ArchiveBankObjectiveSave (string lp_objective);
void libSwaC_gf_ZS_ArchiveBankEvolutionMissionSave (string lp_mission);
void libSwaC_gf_ZS_ArchiveBankMissionSave (string lp_mission);
void libSwaC_gf_ZS_ArchiveBankSave ();
void libSwaC_gf_ZS_ArchiveBankLoad ();
void libSwaC_gf_ZS_ArchivesBankSyncForLoad ();
void libSwaC_gf_ZS_ArchivesBankSyncForSave ();
bool libSwaC_gf_StoryMasterArchivesWasVisited ();
void libSwaC_gf_ZS_OpenCampaignBank ();
bool libSwaC_gf_ZS_CampaignBankExists ();
void libSwaC_gf_ZS_SaveCampaignBank ();
bool libSwaC_gf_ZS_MissionSectionExists (string lp_mission);
void libSwaC_gf_ZS_SetMissionSectionExists (string lp_mission, bool lp_exist);
void libSwaC_gf_ZS_LoadMissionSections ();
void libSwaC_gf_ZS_ClampProgressToMission (string lp_mission);
void libSwaC_gf_ZS_OpenStoryBank ();
void libSwaC_gf_ZS_CopyWriterStatesToSnapshot ();
bank libSwaC_gf_StoryBank ();
void libSwaC_gf_ZS_LoadLibertyInfo ();
void libSwaC_gf_ZS_LoadLibertyInfoIndividual (bank lp_bank, int lp_missionA, int lp_missionB, string lp_choice);
string libSwaC_gf_ZS_BankSectionName (string lp_map, string lp_section);
int libSwaC_gf_ZS_LoadTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_default);
bool libSwaC_gf_ZS_LoadTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_default);
string libSwaC_gf_ZS_LoadTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_default);
void libSwaC_gf_ZS_SaveTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_value, int lp_default);
void libSwaC_gf_ZS_SaveTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_value, bool lp_default);
void libSwaC_gf_ZS_SaveTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_value, string lp_default);
string libSwaC_gf_ZS_BankMIssionDifficultyKey (string lp_mission, int lp_difficulty);
void libSwaC_gf_ZS_CampaignVictory ();
void libSwaC_gf_DisplayCampaignVictoryScoreScreen (string lp_mission);
void libSwaC_gf_ZS_CreateVictoryScreen ();
void libSwaC_gf_ZS_UpdateVictoryScreen (string lp_mission);
void libSwaC_gf_ZS_VSDisplayRestartDialog ();
string libSwaC_gf_ZS_VictoryScreenBackground (string lp_map);
string libSwaC_gf_MissionCatalogPropertyVictoryScreen (string lp_field, string lp_mission);
void libSwaC_gf_ZS_CheckAchievementUnlocking ();
void libSwaC_gf_ZS_CheckBonusAchievementUnlocking ();
bool libSwaC_gf_CampaignDebugModeIsOn (string lp_mode);
void libSwaC_gf_RegisterFootageRecording (trigger lp_callback);
void libSwaC_gf_ZS_FootageRecording ();
string libSwaC_gf_ZSS_ParseCameraInfoString (camerainfo lp_camera);
string libSwaC_gf_ZS_DebugProgressDataTableID (string lp_type, string lp_name);
bool libSwaC_gf_ZS_DebugProgressDialogOpened ();
void libSwaC_gf_ZS_DebugProgressAddMissionButton (string lp_mission, fixed lp_col, fixed lp_row);
void libSwaC_gf_ZS_DebugProgressCreateDialog ();
void libSwaC_gf_ZS_DebugProgressUpdateDialog ();
void libSwaC_gf_ZS_DebugProgressUpdateRequirementLabel (int lp_label, int lp_status);
void libSwaC_gf_ZS_DebugProgressCloseDialog ();
text libSwaC_gf_ZS_DebugProgressMapName (string lp_mission);
void libSwaC_gf_ZS_DebugProgressDisplayDialog (string lp_currentMission, trigger lp_oKCallback, trigger lp_cancelCallback);
void libSwaC_gf_ZS_DebugProgressSaveStats ();
void libSwaC_gf_ZS_DebugProgressRestoreStats ();
void libSwaC_gf_ZS_DebugStoryTechCreateDialog ();
void libSwaC_gf_ZS_DebugStoryTechUpdateDialog ();
void libSwaC_gf_ZS_DebugStoryTechUpdateData ();
void libSwaC_gf_ZS_DebugStoryTechCloseDialog ();
void libSwaC_gf_ZS_DebugStoryTechDisplayDialog ();
void libSwaC_gf_ZS_DebugStoryTechStoreStates ();
void libSwaC_gf_ZS_DebugStoryTechRestoreStates ();
void libSwaC_gf_ZS_DebugStoryTechDisplayUpgradeDialog (string lp_armyCategory);
bool libSwaC_gf_ZS_DebugStoryTechIsDupe (string lp_mission, string lp_category);
void libSwaC_gf_SetTechRestrictionsCallback (trigger lp_callbackTrigger);
void libSwaC_gf_PurchaseStorymodeTech ();
void libSwaC_gf_ZS_DefaultTechProgress (string lp_mission);
void libSwaC_gf_DisplayCampaignProgressInfo (int lp_dialog);
int libSwaC_gf_ZS_DebugCutsceneFromName (string lp_name);

// Trigger Declarations
trigger libSwaC_gt_ZS_CinematicModeOn;
trigger libSwaC_gt_ZS_CinematicModeGlowOff;
trigger libSwaC_gt_ZS_CinematicModeOff;
trigger libSwaC_gt_ZS_ObjectiveRePingController;
trigger libSwaC_gt_ZS_SendTransmissionCampaignTick;
trigger libSwaC_gt__ZergDropPod;
trigger libSwaC_gt__TerranDropPod;
trigger libSwaC_gt_ZS_MissionVictoryCallbackBlockActionQueueOneMinute;
trigger libSwaC_gt_ZS_MissionVictoryCallbackBlockActionQueue;
trigger libSwaC_gt_ZS_AbortMission;
trigger libSwaC_gt_ZS_CampaignUnit;
trigger libSwaC_gt_ZS_CampaignUnitCreated;
trigger libSwaC_gt_ZS_CampaignUnitChangeOwner;
trigger libSwaC_gt_ZS_CampaignUnitInfoUnitMorphes;
trigger libSwaC_gt_ZS_PlayerNeedOverlord;
trigger libSwaC_gt_ZS_PlayerNeedOverlordButtonClickedFood2;
trigger libSwaC_gt_ZS_PlayerNeedOverlordButtonClickedFood3;
trigger libSwaC_gt_ZS_PlayerNeedOverlordButtonClickedFood6;
trigger libSwaC_gt_ZS_ResourcePickupTip;
trigger libSwaC_gt_ZS_ResourcePickup;
trigger libSwaC_gt_ZS_FeaturedZergStructureDies;
trigger libSwaC_gt_ZS_FeaturedZergStructureDiesReminder;
trigger libSwaC_gt_ZS_BaseUnderAttackInit;
trigger libSwaC_gt_ZS_BaseUnderAttackByGround;
trigger libSwaC_gt_ZS_BaseUnderAttackByGroundSpineCrawlerBuilt;
trigger libSwaC_gt_ZS_OverlordRallyEnable;
trigger libSwaC_gt_ZS_OverlordRally;
trigger libSwaC_gt_ZS_ZerglingRespawnCheat;
trigger libSwaC_gt_ZS_HatcheryPrimarySearch;
trigger libSwaC_gt_ZS_HatcheryEggModels;
trigger libSwaC_gt_ZS_HatcheryEggBirths;
trigger libSwaC_gt_ZS_ZerglingRespawnAchievementAdd;
trigger libSwaC_gt_ZS_KerriganLifeTooLow;
trigger libSwaC_gt_ZS_KerriganDies;
trigger libSwaC_gt_ZS_KerriganLowHPFlashing;
trigger libSwaC_gt_ZS_StartKerriganLowHPSound;
trigger libSwaC_gt_ZS_KerriganLowHPSoundHeartLoop;
trigger libSwaC_gt_ZS_KerriganLowHPSoundBreathLoop;
trigger libSwaC_gt_ZS_MissionTipClicked;
trigger libSwaC_gt_ZS_SelectLarvaButtonHighlightUpdate;
trigger libSwaC_gt_ZS_FlashArmyButtonHelpTip;
trigger libSwaC_gt_ZS_ArmyButtonUsed;
trigger libSwaC_gt_ZS_ArmyButtonMissionInit;
trigger libSwaC_gt_ZS_VictoryStat;
trigger libSwaC_gt_ZS_VictoryStatOff;
trigger libSwaC_gt_ZS_BB_BossHPChanged;
trigger libSwaC_gt_ZS_BB_MouseHoverText;
trigger libSwaC_gt_ZS_HeroPanelUpdate;
trigger libSwaC_gt_ZS_SwarmHeroUIUnitDamaged;
trigger libSwaC_gt_ZS_SwarmHeroUIUnitVitalChange;
trigger libSwaC_gt_ZS_MouseHoverText;
trigger libSwaC_gt_SwarmPingSound;
trigger libSwaC_gt_ZS_CamStatsGameLoaded;
trigger libSwaC_gt_ZS_CamStatsHelpOpened;
trigger libSwaC_gt_ZS_CollectCampaignStatsDataMisisonVictory;
trigger libSwaC_gt_ZS_CollectCampaignStatsDataMisisonDefeat;
trigger libSwaC_gt_ZS_CollectCampaignStatsDataMisisonAbort;
trigger libSwaC_gt_ZS_CollectCampaignStatsDataMisisonStart;
trigger libSwaC_gt_ZS_CampaignStatsUnitCreated;
trigger libSwaC_gt_ZS_CampaignStatsWeaponArmorUpgrades;
trigger libSwaC_gt_ZS_LoadCampaignStatsData;
trigger libSwaC_gt_ZS_SaveCampaignStatsData;
trigger libSwaC_gt_ZS_SetCasualRallyPoints;
trigger libSwaC_gt_Zerg03TimestampDelayed;
trigger libSwaC_gt_Zerg01TimestampDelayed;
trigger libSwaC_gt_DisplayTimestamp;
trigger libSwaC_gt_DisplayTimestampSkippable;
trigger libSwaC_gt_ZS_CampaignCutsceneSkipped;
trigger libSwaC_gt_ZS_PlayCinematicSkippable;
trigger libSwaC_gt_ZS_CinematicDetectSkipping;
trigger libSwaC_gt_ZS_CinematicHandleSkipping;
trigger libSwaC_gt_ZS_WaitForDialogCutscene;
trigger libSwaC_gt_ZS_WaitForCutscene;
trigger libSwaC_gt_ZS_ApplyLarvaUpgrade;
trigger libSwaC_gt_ZS_PlayEggRoomIntroSequence;
trigger libSwaC_gt_ZS_ArmyCustomEggHighlight;
trigger libSwaC_gt_ZS_ArmyCustomEggUnhighlight;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionMasterClicked;
trigger libSwaC_gt_ZS_ArmyCustomEggClicked;
trigger libSwaC_gt_ZS_ArmyCustomEggMouseOver;
trigger libSwaC_gt_ZS_ArmyCustomEggRoomBackButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomEggRoomEvolutionMissionButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomPeriodicUpgradeReminder;
trigger libSwaC_gt_ZS_ArmyCustomRunning;
trigger libSwaC_gt_ZS_ArmyCustomUpgradeRoomBackButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomUpgradeRoomUpgradeButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionEvolveButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionUIRunning;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionFanfareOver;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionFanfareFade;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionUnitClicked;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionUnitHighlight;
trigger libSwaC_gt_ZS_ArmyCustomEvolutionUnitUnhighlight;
trigger libSwaC_gt_ZS_ArmyCustomMissionCloseButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomMissionPlayButtonClicked;
trigger libSwaC_gt_ZS_ArmyCustomMissionPitchPlay;
trigger libSwaC_gt_ZS_ArmyCustomMissionPitchStop;
trigger libSwaC_gt_ZS_ArmyCustomMissionUIRunning;
trigger libSwaC_gt_ZS_ArmyUIArchivesItemChecked;
trigger libSwaC_gt_ZS_ArmyUIArchivesCancelClicked;
trigger libSwaC_gt_ZS_ArmyUIArchivesOKClicked;
trigger libSwaC_gt_ZS_ArmyUIArchivesRunning;
trigger libSwaC_gt_ZS_ReviveCooldownReadyKerrigan;
trigger libSwaC_gt_ZS_ReviveCooldownReadyDehaka;
trigger libSwaC_gt_ZS_ReviveCooldownReadyStukov;
trigger libSwaC_gt_ZS_KerriganDied;
trigger libSwaC_gt_ZS_KerriganUITierCloseButtonClicked;
trigger libSwaC_gt_ZS_KerriganUITierAbilityButtonClick;
trigger libSwaC_gt_ZS_KerriganCustomizationRunning;
trigger libSwaC_gt_ZS_KerriganCustomizationPlayEntryAnims;
trigger libSwaC_gt_ZS_KerriganCustomizationPlayKerriganAnim;
trigger libSwaC_gt_ZS_KerriganCustomizationPlayPrimalAnim;
trigger libSwaC_gt_ZS_ArchivesBankLoadSyncComplete;
trigger libSwaC_gt_ZS_ArchivesBankSaveSyncComplete;
trigger libSwaC_gt_ZS_ArchivesHandleMissionLoad;
trigger libSwaC_gt_ZS_EndCinematic;
trigger libSwaC_gt_ZS_EndCredits;
trigger libSwaC_gt_ZS_EndCreditsEnds;
trigger libSwaC_gt_ZS_VSScreenContinue;
trigger libSwaC_gt_ZS_VSScreenPlayAgain;
trigger libSwaC_gt_ZS_VSRestartCancel;
trigger libSwaC_gt_ZS_VSRestartRestart;
trigger libSwaC_gt_ZS_FootageRecording;
trigger libSwaC_gt_ZS_DebugProgressMissionButtonClicked;
trigger libSwaC_gt_ZS_DebugProgressOK;
trigger libSwaC_gt_ZS_DebugProgressLaunchMission;
trigger libSwaC_gt_ZS_DebugProgressTravel;
trigger libSwaC_gt_ZS_DebugProgressCancel;
trigger libSwaC_gt_ZS_DebugProgressReset;
trigger libSwaC_gt_ZS_DebugProgress;
trigger libSwaC_gt_ZS_DebugProgressDevelop;
trigger libSwaC_gt_ZS_DebugProgressDevelopDebugAsRelease;
trigger libSwaC_gt_ZS_DebugProgressOKCallback;
trigger libSwaC_gt_ZS_DebugStoryTechOK;
trigger libSwaC_gt_ZS_DebugStoryTechCancel;
trigger libSwaC_gt_ZS_DebugStoryTechArmyUnitClicked;
trigger libSwaC_gt_ZS_DebugStoryTechUpgradeButtonClicked;
trigger libSwaC_gt_ZS_DebugStoryTechUpgradeOK;
trigger libSwaC_gt_ZS_DebugStoryTechUpgradeChecked;
trigger libSwaC_gt_ZS_DebugStoryTechUpgradeCancel;
trigger libSwaC_gt_ZS_DebugTechArmyCustomOpened;
trigger libSwaC_gt_ZS_DebugTechArmyCustomReset;
trigger libSwaC_gt_ZS_DebugArmy;
trigger libSwaC_gt_ZS_DebugSplit;
trigger libSwaC_gt_ZS_DebugKerriganUIOpened;
trigger libSwaC_gt_ZS_DebugKerriganUIClosed;
trigger libSwaC_gt_ZS_DebugKerriganAddLevel;
trigger libSwaC_gt_ZS_DebugKerriganRemoveLevel;
trigger libSwaC_gt_ZS_DebugKerriganMaxLevel;
trigger libSwaC_gt_ZS_DebugKerrigan;
trigger libSwaC_gt_ZS_DebugKerriganRetail;
trigger libSwaC_gt_ZS_DebugTech;
trigger libSwaC_gt_ZS_DebugTechRetail;
trigger libSwaC_gt_ZS_DebugVictoryS;
trigger libSwaC_gt_ZS_CampaignProgressButtonClicked;
trigger libSwaC_gt_ZS_CampaignProgressTechButtonClicked;
trigger libSwaC_gt_PlayCutscene;
trigger libSwaC_gt_StopCutscene;
trigger libSwaC_gt_PauseCutscene;
trigger libSwaC_gt_SelectCutscene;
trigger libSwaC_gt_SeekInCutscene;
trigger libSwaC_gt_PlaybackCinematicMode;
trigger libSwaC_gt_GoToCutsceneBookmark;
trigger libSwaC_gt_ZS_DebugAchievement;

// Library Initialization
void libSwaC_InitVariables ();

