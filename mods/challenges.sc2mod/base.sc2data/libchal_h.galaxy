include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Challenges
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libChal_ge_CHL_DefeatPanelWaveResult_HaventTried = 0;
const int libChal_ge_CHL_DefeatPanelWaveResult_Failed = 1;
const int libChal_ge_CHL_DefeatPanelWaveResult_Survived = 2;
const int libChal_ge_SuccessFailure_Success = 0;
const int libChal_ge_SuccessFailure_Failure = 1;
const int libChal_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libChal_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libChal_ge_CampaignMessageType_ChallengeFailed = 0;
const int libChal_ge_CampaignMessageType_ChallengeFailed2 = 1;
const int libChal_ge_CampaignMessageType_Hint = 2;
const int libChal_ge_CampaignMessageType_SimpleHint = 3;
const int libChal_ge_CampaignMessageType_Secret = 4;
const int libChal_ge_CampaignMessageType_Score = 5;
const int libChal_ge_CampaignMessageType_Warning = 6;
const int libChal_ge_CampaignMessageType_NewUnitAcquired = 7;
const int libChal_ge_CampaignMessageType_NewUnitAvailable = 8;
const int libChal_ge_CampaignMessageType_NewTechAvailable = 9;
const int libChal_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libChal_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libChal_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libChal_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libChal_ge_ChallengeScoreType_Count = 0;
const int libChal_ge_ChallengeScoreType_Timeseconds = 1;
const int libChal_ge_ChallengeType_ChallengeNone = 0;
const int libChal_ge_ChallengeType_AdvancedCommand = 1;
const int libChal_ge_ChallengeType_Economy = 2;
const int libChal_ge_ChallengeType_TerranCombat = 3;
const int libChal_ge_ChallengeType_TerranCovertOps = 4;
const int libChal_ge_ChallengeType_RushDefense = 5;
const int libChal_ge_ChallengeType_ProtossPsionics = 6;
const int libChal_ge_ChallengeType_ProtossCombat = 7;
const int libChal_ge_ChallengeType_ZergInfestation = 8;
const int libChal_ge_ChallengeType_ZergCombat = 9;
const int libChal_ge_ChallengeAwardType_None = 0;
const int libChal_ge_ChallengeAwardType_Bronze = 1;
const int libChal_ge_ChallengeAwardType_Silver = 2;
const int libChal_ge_ChallengeAwardType_Gold = 3;
const int libChal_ge_ChallengeAwardType_Platinum = 4;

// Constants
const int libChal_gv_cHLC_VPWAVEMAXCOUNT = 10;
const int libChal_gv_cHLC_VPACHIEVEMAXCOUNT = 10;
const int libChal_gv_cHLC_VICTORYPANEL_WIDTH = 780;
const int libChal_gv_cHLC_VICTORYPANELTOPBORDER_Y = 23;
const int libChal_gv_cHLC_VICTORYPANELTOPBORDER_WIDTH = 582;
const int libChal_gv_cHLC_VICTORYPANELTOPBORDER_HEIGHT = 10;
const int libChal_gv_cHLC_VICTORYPANELTITLE_Y = 65;
const int libChal_gv_cHLC_VICTORYPANELSUBTITLE_Y = 95;
const int libChal_gv_cHLC_VICTORYPANELSPLIT_Y = 125;
const int libChal_gv_cHLC_VICTORYPANELSPLIT_WIDTH = 580;
const int libChal_gv_cHLC_VICTORYPANELSPLIT_HEIGHT = 8;
const int libChal_gv_cHLC_VICTORYPANELGLOW_Y = 55;
const int libChal_gv_cHLC_VICTORYPANELGLOW_WIDTH = 380;
const int libChal_gv_cHLC_VICTORYPANELGLOW_HEIGHT = 48;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANEL_Y = 150;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANEL_WIDTH = 640;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVE_WIDTH = 604;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVE_HEIGHT = 50;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVELABEL_OFFSET = 22;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVEBUTTON_OFFSET = -10;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELBUTTON_WIDTH = 110;
const int libChal_gv_cHLC_VICTORYPANELWAVEPANELBUTTON_HEIGHT = 44;
const int libChal_gv_cHLC_VICTORYPANELACHIEVEPANELITEM_HEIGHT = 153;
const int libChal_gv_cHLC_VICTORYPANELACHIEVEPANELITEM_WIDTH = 640;
const int libChal_gv_cHLC_VICTORYPANELSCORE_WIDTH = 604;
const int libChal_gv_cHLC_VICTORYPANELSCORE_HEIGHT = 45;
const int libChal_gv_cHLC_VICTORYPANELCONTINUE_WIDTH = 280;
const int libChal_gv_cHLC_VICTORYPANELCONTINUE_HEIGHT = 90;
const int libChal_gv_cHLC_DPWAVEMAXCOUNT = libChal_gv_cHLC_VPWAVEMAXCOUNT;
const int libChal_gv_cHLC_DEFEATPANEL_WIDTH = libChal_gv_cHLC_VICTORYPANEL_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELTOPBORDER_Y = libChal_gv_cHLC_VICTORYPANELTOPBORDER_Y;
const int libChal_gv_cHLC_DEFEATPANELTOPBORDER_WIDTH = libChal_gv_cHLC_VICTORYPANELTOPBORDER_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELTOPBORDER_HEIGHT = libChal_gv_cHLC_VICTORYPANELTOPBORDER_HEIGHT;
const int libChal_gv_cHLC_DEFEATPANELTITLE_Y = libChal_gv_cHLC_VICTORYPANELTITLE_Y;
const int libChal_gv_cHLC_DEFEATPANELSUBTITLE_Y = libChal_gv_cHLC_VICTORYPANELSUBTITLE_Y;
const int libChal_gv_cHLC_DEFEATPANELSUBTITLE_Y_NOWAVE = 120;
const int libChal_gv_cHLC_DEFEATPANELSPLIT_Y = libChal_gv_cHLC_VICTORYPANELSPLIT_Y;
const int libChal_gv_cHLC_DEFEATPANELSPLIT_Y_NOWAVE = 100;
const int libChal_gv_cHLC_DEFEATPANELSPLIT_WIDTH = libChal_gv_cHLC_VICTORYPANELSPLIT_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELSPLIT_HEIGHT = libChal_gv_cHLC_VICTORYPANELSPLIT_HEIGHT;
const int libChal_gv_cHLC_DEFEATPANELGLOW_Y = 50;
const int libChal_gv_cHLC_DEFEATPANELGLOW_WIDTH = 540;
const int libChal_gv_cHLC_DEFEATPANELGLOW_HEIGHT = 54;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANEL_Y = libChal_gv_cHLC_VICTORYPANELWAVEPANEL_Y;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANEL_WIDTH = libChal_gv_cHLC_VICTORYPANELWAVEPANEL_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELWAVE_WIDTH = libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVE_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELWAVE_HEIGHT = libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVE_HEIGHT;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELWAVELABEL_OFFSET = libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVELABEL_OFFSET;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELWAVEBUTTON_OFFSET = libChal_gv_cHLC_VICTORYPANELWAVEPANELWAVEBUTTON_OFFSET;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELBUTTON_WIDTH = libChal_gv_cHLC_VICTORYPANELWAVEPANELBUTTON_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELWAVEPANELBUTTON_HEIGHT = libChal_gv_cHLC_VICTORYPANELWAVEPANELBUTTON_HEIGHT;
const int libChal_gv_cHLC_DEFEATPANELCONTINUE_WIDTH = libChal_gv_cHLC_VICTORYPANELCONTINUE_WIDTH;
const int libChal_gv_cHLC_DEFEATPANELCONTINUE_HEIGHT = libChal_gv_cHLC_VICTORYPANELCONTINUE_HEIGHT;
const int libChal_gv_cHLC_WSPANEL_WIDTH = libChal_gv_cHLC_VICTORYPANEL_WIDTH;
const int libChal_gv_cHLC_WSPANELTOPBORDER_Y = libChal_gv_cHLC_VICTORYPANELTOPBORDER_Y;
const int libChal_gv_cHLC_WSPANELTOPBORDER_WIDTH = libChal_gv_cHLC_VICTORYPANELTOPBORDER_WIDTH;
const int libChal_gv_cHLC_WSPANELTOPBORDER_HEIGHT = libChal_gv_cHLC_VICTORYPANELTOPBORDER_HEIGHT;
const int libChal_gv_cHLC_WSPANELTITLE_Y = 88;
const int libChal_gv_cHLC_WSPANELSUBTITLE_Y = libChal_gv_cHLC_VICTORYPANELTITLE_Y;
const int libChal_gv_cHLC_WSPANELSPLIT_Y = 128;
const int libChal_gv_cHLC_WSPANELSPLIT_WIDTH = libChal_gv_cHLC_VICTORYPANELSPLIT_WIDTH;
const int libChal_gv_cHLC_WSPANELSPLIT_HEIGHT = libChal_gv_cHLC_VICTORYPANELSPLIT_HEIGHT;
const int libChal_gv_cHLC_WSPANELGLOW_Y = 75;
const int libChal_gv_cHLC_WSPANELGLOW_WIDTH = 460;
const int libChal_gv_cHLC_WSPANELGLOW_HEIGHT = 54;
const int libChal_gv_cHLC_WSPANELCONTINUE_WIDTH = libChal_gv_cHLC_VICTORYPANELCONTINUE_WIDTH;
const int libChal_gv_cHLC_WSPANELCONTINUE_HEIGHT = libChal_gv_cHLC_VICTORYPANELCONTINUE_HEIGHT;
const fixed libChal_gv_challengeSecretDelay = 5.0;
const fixed libChal_gv_challengeTipDelay = 5.0;
const fixed libChal_gv_challengeObjectiveDelay = 5.0;
const string libChal_gv_cHLC_BANKNAME = "Challenge";
const string libChal_gv_cHLC_KEYAWARD = "Award";
const string libChal_gv_cHLC_KEYSCORE = "Score";
const string libChal_gv_cHLC_KEYSCORETIME = "ScoreTime";

// Variable Declarations
bool libChal_gv_challengeStopped;
bool libChal_gv_boardMade;
int libChal_gv_finalCountdownDIALOG;
int libChal_gv_cHL_VictoryPanelWaveCount;
text[11] libChal_gv_cHL_VictoryPanelWaveLabel;
trigger[11] libChal_gv_cHL_VictoryPanelWaveRetry;
int libChal_gv_cHL_VictoryPanelAchievementCount;
string[11] libChal_gv_cHL_VictoryPanelAchievements;
trigger libChal_gv_cHL_VictoryPanelContinue;
trigger libChal_gv_cHL_VictoryPanelRetry;
int libChal_gv_cHL_VictoryPanelDlg;
int libChal_gv_cHL_VictoryPanelBorder;
int libChal_gv_cHL_VictoryPanelBlackMask;
int libChal_gv_cHL_VictoryPanelGradient;
int libChal_gv_cHL_VictoryPanelInnerLine;
int libChal_gv_cHL_VictoryPanelTitleGlowImg;
int libChal_gv_cHL_VictoryPanelTitleLabel;
int libChal_gv_cHL_VictoryPanelSubTitleLabel;
int libChal_gv_cHL_VictoryPanelScoreBG;
int libChal_gv_cHL_VictoryPanelScoreLabel;
int libChal_gv_cHL_VictoryPanelContinueBtn;
int libChal_gv_cHL_VictoryPanelRetryBtn;
int libChal_gv_cHL_VPWavePanelHeight;
text libChal_gv_cHL_VPWavePanelTitle;
int libChal_gv_cHL_VPWavePanelBGImage;
int libChal_gv_cHL_VPWavePanelTitleLabel;
int[11] libChal_gv_cHL_VPWavePanelWaveBGImage;
int[11] libChal_gv_cHL_VPWavePanelWaveLabel;
int[11] libChal_gv_cHL_VPWavePanelWaveButton;
int libChal_gv_cHL_VPAchievePanelHeight;
int libChal_gv_cHL_VPAchievePanelBGImage;
int[11] libChal_gv_cHL_VPAchievePanelAchievements;
int libChal_gv_cHL_DefeatPanelWaveCount;
text[11] libChal_gv_cHL_DefeatPanelWaveLabel;
int[11] libChal_gv_cHL_DefeatPanelWaveResult;
trigger[11] libChal_gv_cHL_DefeatPanelWaveRetry;
trigger libChal_gv_cHL_DefeatPanelContinue;
trigger libChal_gv_cHL_DefeatPanelRetry;
int libChal_gv_cHL_DefeatPanelDlg;
int libChal_gv_cHL_DefeatPanelBorder;
int libChal_gv_cHL_DefeatPanelBlackMask;
int libChal_gv_cHL_DefeatPanelGradient;
int libChal_gv_cHL_DefeatPanelInnerLine;
int libChal_gv_cHL_DefeatPanelTitleGlowImg;
int libChal_gv_cHL_DefeatPanelTitleLabel;
int libChal_gv_cHL_DefeatPanelSubTitleLabel;
int libChal_gv_cHL_DefeatPanelSplitImg;
int libChal_gv_cHL_DefeatPanelContinueBtn;
int libChal_gv_cHL_DefeatPanelRetryBtn;
int libChal_gv_cHL_DPWavePanelHeight;
int libChal_gv_cHL_DPWavePanelBGImage;
int[11] libChal_gv_cHL_DPWavePanelWaveBGImage;
int[11] libChal_gv_cHL_DPWavePanelWaveLabel;
int[11] libChal_gv_cHL_DPWavePanelWaveButton;
text libChal_gv_cHL_WSPanelScore2Text;
trigger libChal_gv_cHL_WSPanelContinue;
int libChal_gv_cHL_WSPanelDlg;
int libChal_gv_cHL_WSPanelBorder;
int libChal_gv_cHL_WSPanelBlackMask;
int libChal_gv_cHL_WSPanelGradient;
int libChal_gv_cHL_WSPanelInnerLine;
int libChal_gv_cHL_WSPanelOverlay;
int libChal_gv_cHL_WSPanelTitleGlowImg;
int libChal_gv_cHL_WSPanelTitleLabel;
int libChal_gv_cHL_WSPanelSubTitleLabel;
int libChal_gv_cHL_WSPanelScoreLabel1;
int libChal_gv_cHL_WSPanelScoreLabel2;
int libChal_gv_cHL_WSPanelSplitImg;
int libChal_gv_cHL_WSPanelContinueBtn;
int libChal_gv_cHL_Score;
int libChal_gv_cHL_CurrentType;
string[21] libChal_gv_cHL_ChallengeName;
bank libChal_gv_cHL_DefaultChallengeBank;

// Function Declarations
void libChal_gf_ShowRacingStart ();
void libChal_gf_ShowRacingStartCustomDelay (fixed lp_delayTime);
void libChal_gf_ShowFinalCountdown (int lp_countdownStart);
void libChal_gf_HideFinalCountdown ();
void libChal_gf_ChallengeScoreWindow (text lp_unitsText, int lp_finalScore, int lp_rankScore);
void libChal_gf_ChallengeScoreWindowwithRounds (text lp_round1Text, text lp_round2Text, text lp_round3Text, text lp_totalLossesText, int lp_round1Losses, int lp_round2Losses, int lp_round3Losses, int lp_totalLosses);
void libChal_gf_ChallengeReadyButton (int lp_screenButtonID, int lp_player, trigger lp_runTrigger);
void libChal_gf_CreateChallengeVictoryPanel (text lp_title, text lp_subTitle, text lp_wavePanelTitle, text lp_scoreText, trigger lp_continueTrigger, trigger lp_retryTrigger);
void libChal_gf_AddWaveToChallengeVictoryPanel (text lp_label, trigger lp_retry_Trigger);
void libChal_gf_AddAchievementToChallengeVictoryPanel (string lp_achievement);
void libChal_gf_ShowHideChallengeVictoryPanel (bool lp_showHide);
void libChal_gf_CHL_UpdateVictoryPanel ();
void libChal_gf_CHL_VPCreateWavePanel ();
void libChal_gf_CHL_VPUpdateWavePanel ();
void libChal_gf_CHL_VPCreateAchievePanel ();
void libChal_gf_CHL_VPUpdateAchievePanel ();
void libChal_gf_CreateChallengeDefeatPanel (text lp_title, text lp_subTitle, trigger lp_continueTrigger, trigger lp_retryTrigger);
void libChal_gf_AddWaveToChallengeDefeatPanel (text lp_label, int lp_result, trigger lp_retry_Trigger);
void libChal_gf_ShowHideChallengeDefeatPanel (bool lp_showHide);
void libChal_gf_CHL_UpdateDefeatPanel ();
void libChal_gf_CHL_DPCreateWavePanel ();
void libChal_gf_CHL_DPUpdateWavePanel ();
void libChal_gf_CreateChallengeWaveSuccessPanel (int lp_successFailure, text lp_title, text lp_subTitle, text lp_scoreText1, text lp_scoreText2, trigger lp_continueTrigger);
void libChal_gf_ShowHideChallengeWaveSuccessPanel (bool lp_showHide);
void libChal_gf_CHL_UpdateWSPanel ();
void libChal_gf_DisplayChallengeMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
text libChal_gf_CHL_FormatSoreText (int lp_score, int lp_scoreType);
int libChal_gf_ChallengeScore ();
void libChal_gf_CHL_UpdateChallengeScore ();
int libChal_gf_ChallengeAwardFromBank (int lp_challengeType);
int libChal_gf_ChallengeScoreFromBank (int lp_challengeType);
void libChal_gf_SaveChallengeAwardToBank (int lp_challengeType, int lp_award);
void libChal_gf_SaveChallengeScoreToBank (int lp_challengeType, int lp_score);
void libChal_gf_LoadChallengeData (int lp_type);
void libChal_gf_SaveChallengeData ();
void libChal_gf_CHL_InitChallengeBank ();
void libChal_gf_CHL_InitChallengeData ();
string libChal_gf_ChallengeName (int lp_challenge);
int libChal_gf_CurrentChallengeType ();

// Trigger Declarations
trigger libChal_gt_CHL_VictoryPanelButtonClicked;
trigger libChal_gt_CHL_DefeatPanelButtonClicked;
trigger libChal_gt_CHL_WSPanelContinue;

// Library Initialization
void libChal_InitVariables ();

