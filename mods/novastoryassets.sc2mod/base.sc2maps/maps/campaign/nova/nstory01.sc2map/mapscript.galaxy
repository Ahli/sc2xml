//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Nova Story
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibComC"
include "LibNovC"
include "LibNCST"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libComC_InitLib();
    libNovC_InitLib();
    libNCST_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
bool gv_storymodeEntered;
bool gv_storySoFarScreenFinished;
int gv_storySoFarDialog;
int gv_storySoFarPanel;
int gv_storySoFarTextBlock1;
int gv_storySoFarTextBlock2;
int gv_storySoFarTextBlock3;
int gv_storySoFarPressAnyKeyLabel;
actor gv_mP01_030_NewsScreen;
actor gv_mP02_020_Screen;
actor gv_mP02_040_Screen;
actor gv_mP03_040_Screen;

void InitGlobals () {
    gv_storySoFarDialog = c_invalidDialogId;
    gv_storySoFarPanel = c_invalidDialogControlId;
    gv_storySoFarTextBlock1 = c_invalidDialogControlId;
    gv_storySoFarTextBlock2 = c_invalidDialogControlId;
    gv_storySoFarTextBlock3 = c_invalidDialogControlId;
    gv_storySoFarPressAnyKeyLabel = c_invalidDialogControlId;
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_StorySoFarMP02Create ();
void gf_StorySoFarMP02Destroy ();
void gf_StorySoFarMP03Create ();
void gf_StorySoFarMP03Destroy ();
int gf_EntryRoom ();

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_MapInit;
trigger gt_Init01StoryData;
trigger gt_Init02Rooms;
trigger gt_Init03Scenes;
trigger gt_BeginStorymode;
trigger gt_RoomPrepareVoid;
trigger gt_RoomViewVoid;
trigger gt_RoomViewStopVoid;
trigger gt_RoomEntered;
trigger gt_MovingToRoom;
trigger gt_StorySoFarAnyButtonPressed;
trigger gt_UpdateUnitRooms;
trigger gt_ScenesPlayStorymodeEntry;
trigger gt_ScenesMP01_010;
trigger gt_ScenesMP01_020;
trigger gt_ScenesMP01_020Timestamp;
trigger gt_ScenesMP01_030;
trigger gt_ScenesMP01_035;
trigger gt_ScenesMP01_030PlayRTTMovie;
trigger gt_ScenesMP01_030UpdateScreenAttachment;
trigger gt_ScenesMP01_030StopNews;
trigger gt_ScenesMP01_030RemoveScreen;
trigger gt_ScenesMP01_040;
trigger gt_ScenesMP02_005;
trigger gt_ScenesMP02_010;
trigger gt_ScenesNova04VoidRay;
trigger gt_ScenesMP02_020;
trigger gt_ScenesMP02_020PlayRTTMovie;
trigger gt_ScenesMP02_020StopNews;
trigger gt_ScenesMP02_020RemoveScreen;
trigger gt_ScenesMP02_025;
trigger gt_ScenesMP02_030;
trigger gt_ScenesMP02_030EchoOn;
trigger gt_ScenesMP02_030EchoOff;
trigger gt_ScenesMP02_030Timestamp;
trigger gt_ScenesMP02_035;
trigger gt_ScenesMP02_040;
trigger gt_ScenesMP02_040EchoOn;
trigger gt_ScenesMP02_040EchoOff;
trigger gt_ScenesMP02_040Timestamp;
trigger gt_ScenesMP02_040RTTScreenCreate;
trigger gt_ScenesMP02_040PlayRTTMovie;
trigger gt_ScenesMP02_040StopMovie;
trigger gt_ScenesMP03_010;
trigger gt_ScenesMP03_010Timestamp;
trigger gt_ScenesMP03_020;
trigger gt_ScenesMP03_030;
trigger gt_ScenesMP03_035;
trigger gt_ScenesMP03_035Timestamp;
trigger gt_ScenesMP03_040;
trigger gt_ScenesMP03_040OGVScreenCreate;
trigger gt_ScenesMP03_040PlayOGVMovie;
trigger gt_ScenesMP03_040StopMovie;
trigger gt_DEBUGReleaseCam;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_StorySoFarMP02Create () {
    // Implementation
    DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
    DialogSetFullscreen(DialogLastCreated(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    gv_storySoFarDialog = DialogLastCreated();
    DialogControlCreateFromTemplate(gv_storySoFarDialog, c_triggerControlTypePanel, "Nova_StorySoFarMP02/StorySoFarPanel");
    gv_storySoFarPanel = DialogControlLastCreated();
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "Title");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), ConversationDataStateText("StoryModeText|StorySoFarTitleMP02", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock1");
    gv_storySoFarTextBlock1 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock1, ConversationDataStateText("StoryModeText|StorySoFarTextBlock01MP02", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock2");
    gv_storySoFarTextBlock2 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock2, ConversationDataStateText("StoryModeText|StorySoFarTextBlock02MP02", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock3");
    gv_storySoFarTextBlock3 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock3, ConversationDataStateText("StoryModeText|StorySoFarTextBlock03MP02", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "PressAnyKey");
    gv_storySoFarPressAnyKeyLabel = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarPressAnyKeyLabel, ConversationDataStateText("StoryModeText|StorySoFarKeyPressTextMP02", "Description"), PlayerGroupAll());
    DialogSetVisible(gv_storySoFarDialog, PlayerGroupAll(), true);
    libNtve_gf_HideGameUI(false, PlayerGroupAll());
    UISetCursorVisible(PlayerGroupAll(), false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "nDLC_Music_StorySoFarMP02", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libComC_gf_CinematicFade(false, 0.0, Color(0.00, 0.00, 0.00), true);
    Wait(0.1, c_timeReal);
    libComC_gf_CinematicFade(true, 1.0, Color(0.00, 0.00, 0.00), true);
    TriggerEnable(gt_StorySoFarAnyButtonPressed, true);
}

void gf_StorySoFarMP02Destroy () {
    // Implementation
    SoundtrackStop(PlayerGroupAll(), c_soundtrackCategoryMusic, true);
    libComC_gf_CinematicFade(false, 0.7, Color(0.00, 0.00, 0.00), true);
    DialogDestroy(gv_storySoFarDialog);
    libComC_gf_CinematicFade(true, 0.0, Color(0.00, 0.00, 0.00), true);
    Wait(1.0, c_timeReal);
    UISetCursorVisible(PlayerGroupAll(), true);
    libNtve_gf_HideGameUI(true, PlayerGroupAll());
}

void gf_StorySoFarMP03Create () {
    // Implementation
    DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
    DialogSetFullscreen(DialogLastCreated(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    gv_storySoFarDialog = DialogLastCreated();
    DialogControlCreateFromTemplate(gv_storySoFarDialog, c_triggerControlTypePanel, "Nova_StorySoFarMP02/StorySoFarPanel");
    gv_storySoFarPanel = DialogControlLastCreated();
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "Title");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), ConversationDataStateText("StoryModeText|StorySoFarTitleMP03", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock1");
    gv_storySoFarTextBlock1 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock1, ConversationDataStateText("StoryModeText|StorySoFarTextBlock01MP03", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock2");
    gv_storySoFarTextBlock2 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock2, ConversationDataStateText("StoryModeText|StorySoFarTextBlock02MP03", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "TextBlock3");
    gv_storySoFarTextBlock3 = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarTextBlock3, ConversationDataStateText("StoryModeText|StorySoFarTextBlock03MP03", "Description"), PlayerGroupAll());
    DialogControlHookup(gv_storySoFarPanel, c_triggerControlTypeLabel, "PressAnyKey");
    gv_storySoFarPressAnyKeyLabel = DialogControlLastCreated();
    libNtve_gf_SetDialogItemText(gv_storySoFarPressAnyKeyLabel, ConversationDataStateText("StoryModeText|StorySoFarKeyPressTextMP03", "Description"), PlayerGroupAll());
    DialogSetVisible(gv_storySoFarDialog, PlayerGroupAll(), true);
    libNtve_gf_HideGameUI(false, PlayerGroupAll());
    UISetCursorVisible(PlayerGroupAll(), false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "nDLC_Music_StorySoFarMP02", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libComC_gf_CinematicFade(false, 0.0, Color(0.00, 0.00, 0.00), true);
    Wait(0.1, c_timeReal);
    libComC_gf_CinematicFade(true, 1.0, Color(0.00, 0.00, 0.00), true);
    TriggerEnable(gt_StorySoFarAnyButtonPressed, true);
}

void gf_StorySoFarMP03Destroy () {
    // Implementation
    SoundtrackStop(PlayerGroupAll(), c_soundtrackCategoryMusic, true);
    libComC_gf_CinematicFade(false, 0.7, Color(0.00, 0.00, 0.00), true);
    DialogDestroy(gv_storySoFarDialog);
    libComC_gf_CinematicFade(true, 0.0, Color(0.00, 0.00, 0.00), true);
    Wait(1.0, c_timeReal);
    UISetCursorVisible(PlayerGroupAll(), true);
    libNtve_gf_HideGameUI(true, PlayerGroupAll());
}

int gf_EntryRoom () {
    // Implementation
    if ((libComC_gf_LastMapConditionCheck(libComC_ge_MissionCondition_Simulation) == true) && (libComC_gf_CampaignMapTypeCheck(libComC_gf_LastMission(), c_mapKindStory) == false)) {
        libNCST_gf_SetInArchives(true);
        return libNCST_ge_Rooms_StoryRoomMissionArchives;
    }

    return libNCST_ge_Rooms_StoryRoomMissionScreen;
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Init
//--------------------------------------------------------------------------------------------------
bool gt_MapInit_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_StoryMode(PlayerGroupAll(), true);
    TriggerExecute(gt_Init01StoryData, true, true);
    TriggerExecute(gt_Init02Rooms, true, false);
    TriggerExecute(gt_Init03Scenes, true, false);
    TriggerExecute(gt_BeginStorymode, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MapInit_Init () {
    gt_MapInit = TriggerCreate("gt_MapInit_Func");
    TriggerAddEventMapInit(gt_MapInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Story Data
//--------------------------------------------------------------------------------------------------
bool gt_Init01StoryData_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_InitializeNovaStorymode("NStory01");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01StoryData_Init () {
    gt_Init01StoryData = TriggerCreate("gt_Init01StoryData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Rooms
//--------------------------------------------------------------------------------------------------
bool gt_Init02Rooms_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_RegisterRoom(libNCST_ge_Rooms_StoryRoomVoid, gt_RoomPrepareVoid, gt_RoomViewVoid, gt_RoomViewStopVoid, null, null);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Rooms_Init () {
    gt_Init02Rooms = TriggerCreate("gt_Init02Rooms_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Scenes
//--------------------------------------------------------------------------------------------------
bool gt_Init03Scenes_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_RegisterStorymodeScene("MP01_010", gt_ScenesMP01_010);
    libNCST_gf_RegisterStorymodeScene("MP01_020", gt_ScenesMP01_020);
    libNCST_gf_RegisterStorymodeScene("MP01_030", gt_ScenesMP01_030);
    libNCST_gf_RegisterStorymodeScene("MP01_035", gt_ScenesMP01_035);
    libNCST_gf_RegisterStorymodeScene("MP01_040", gt_ScenesMP01_040);
    libNCST_gf_RegisterStorymodeScene("MP02_005", gt_ScenesMP02_005);
    libNCST_gf_RegisterStorymodeScene("MP02_010", gt_ScenesMP02_010);
    libNCST_gf_RegisterStorymodeScene("MP02_020", gt_ScenesMP02_020);
    libNCST_gf_RegisterStorymodeScene("MP02_025", gt_ScenesMP02_025);
    libNCST_gf_RegisterStorymodeScene("MP02_030", gt_ScenesMP02_030);
    libNCST_gf_RegisterStorymodeScene("MP02_035", gt_ScenesMP02_035);
    libNCST_gf_RegisterStorymodeScene("MP02_040", gt_ScenesMP02_040);
    libNCST_gf_RegisterStorymodeScene("MP03_010", gt_ScenesMP03_010);
    libNCST_gf_RegisterStorymodeScene("MP03_020", gt_ScenesMP03_020);
    libNCST_gf_RegisterStorymodeScene("MP03_030", gt_ScenesMP03_030);
    libNCST_gf_RegisterStorymodeScene("MP03_035", gt_ScenesMP03_035);
    libNCST_gf_RegisterStorymodeScene("MP03_040", gt_ScenesMP03_040);
    libNCST_gf_RegisterStorymodeScene("Nova04VoidRay", gt_ScenesNova04VoidRay);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03Scenes_Init () {
    gt_Init03Scenes = TriggerCreate("gt_Init03Scenes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Begin Storymode
//--------------------------------------------------------------------------------------------------
bool gt_BeginStorymode_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_indexUnit;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_UpdateUnitRooms, true, false);
    if ((libComC_gf_CampaignIsComplete() == true)) {
        libNCST_gf_EnterRoom(libNCST_ge_Rooms_StoryRoomMissionArchives);
        return true;
    }

    gv_storymodeEntered = true;
    if ((libComC_gf_LastMap() == null) && (libNovC_gf_CampaignDebugModeIsOn("StoryCheat") == true)) {
        libNCST_gf_EnterRoom(gf_EntryRoom());
        libNCST_gf_EnterRoom(libNCST_ge_Rooms_StoryRoomDebugStoryCheat);
        return true;
    }

    TriggerExecute(gt_ScenesPlayStorymodeEntry, true, true);
    libNCST_gf_EnterRoom(gf_EntryRoom());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BeginStorymode_Init () {
    gt_BeginStorymode = TriggerCreate("gt_BeginStorymode_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Prepare - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomPrepareVoid_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomPrepareVoid_Init () {
    gt_RoomPrepareVoid = TriggerCreate("gt_RoomPrepareVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewVoid_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetWorldVisible(PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewVoid_Init () {
    gt_RoomViewVoid = TriggerCreate("gt_RoomViewVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room View Stop - Void
//--------------------------------------------------------------------------------------------------
bool gt_RoomViewStopVoid_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomViewStopVoid_Init () {
    gt_RoomViewStopVoid = TriggerCreate("gt_RoomViewStopVoid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Room Entered
//--------------------------------------------------------------------------------------------------
bool gt_RoomEntered_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoomEntered_Init () {
    gt_RoomEntered = TriggerCreate("gt_RoomEntered_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Moving To Room
//--------------------------------------------------------------------------------------------------
bool gt_MovingToRoom_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovingToRoom_Init () {
    gt_MovingToRoom = TriggerCreate("gt_MovingToRoom_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Story So Far Any Button Pressed
//--------------------------------------------------------------------------------------------------
bool gt_StorySoFarAnyButtonPressed_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_storySoFarScreenFinished = true;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StorySoFarAnyButtonPressed_Init () {
    gt_StorySoFarAnyButtonPressed = TriggerCreate("gt_StorySoFarAnyButtonPressed_Func");
    TriggerEnable(gt_StorySoFarAnyButtonPressed, false);
    TriggerAddEventKeyPressed(gt_StorySoFarAnyButtonPressed, c_playerAny, c_keyNone, false, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventMouseClicked(gt_StorySoFarAnyButtonPressed, c_playerAny, c_mouseButtonNone, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Unit Rooms
//--------------------------------------------------------------------------------------------------
bool gt_UpdateUnitRooms_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UpdateUnitRooms_Init () {
    gt_UpdateUnitRooms = TriggerCreate("gt_UpdateUnitRooms_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Play Storymode Entry
//--------------------------------------------------------------------------------------------------
bool gt_ScenesPlayStorymodeEntry_Func (bool testConds, bool runActions) {
    string auto7640A032_val;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libComC_gf_LastMap() == null)) {
        return true;
    }

    if (((libComC_gf_LastMapConditionCheck(libComC_ge_MissionCondition_Sucessful) == false) || (libComC_gf_CampaignMapTypeCheck(libComC_gf_LastMap(), c_mapKindMission) == false) || (libComC_gf_LastMapConditionCheck(libComC_ge_MissionCondition_Simulation) == true))) {
        return true;
    }

    auto7640A032_val = libComC_gf_LastMap();
    if (auto7640A032_val == "Nova01") {
        libComC_gf_PlayCinematic("MP01_020", false);
    }
    else if (auto7640A032_val == "Nova02") {
        libNCST_gf_PlayStorymodeScene("MP01_030", true);
    }
    else if (auto7640A032_val == "Nova03") {
        gf_StorySoFarMP02Create();
        while (!((gv_storySoFarScreenFinished == true))) {
            Wait(0.1, c_timeReal);
        }
        gf_StorySoFarMP02Destroy();
        libNCST_gf_PlayStorymodeScene("MP02_005", true);
    }
    else if (auto7640A032_val == "Nova04") {
        libNCST_gf_PlayStorymodeScene("MP02_020", true);
        libNCST_gf_PlayStorymodeScene("MP02_025", true);
    }
    else if (auto7640A032_val == "Nova05") {
        libNCST_gf_PlayStorymodeScene("MP02_030", true);
        libNCST_gf_PlayStorymodeScene("MP02_035", true);
    }
    else if (auto7640A032_val == "Nova06") {
        gf_StorySoFarMP03Create();
        while (!((gv_storySoFarScreenFinished == true))) {
            Wait(0.1, c_timeReal);
        }
        gf_StorySoFarMP03Destroy();
        libNCST_gf_PlayStorymodeScene("MP03_010", true);
    }
    else if (auto7640A032_val == "Nova07") {
        libNCST_gf_PlayStorymodeScene("MP03_020", true);
    }
    else if (auto7640A032_val == "Nova08") {
        libNCST_gf_PlayStorymodeScene("MP03_030", true);
        libNCST_gf_PlayStorymodeScene("MP03_035", true);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesPlayStorymodeEntry_Init () {
    gt_ScenesPlayStorymodeEntry = TriggerCreate("gt_ScenesPlayStorymodeEntry_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_010
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_010_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_CampaignPlayMovieCutscene("Cutscenes\\SMX3_Cutscene_MP01_010.SC2Cutscene", true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_010_Init () {
    gt_ScenesMP01_010 = TriggerCreate("gt_ScenesMP01_010_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_020
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_020_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP01_020Timestamp, true);
    libComC_gf_CampaignPlayMovieCutscene("Cutscenes\\SMX3_Cutscene_MP01_020.SC2Cutscene", true, true);
    libComC_gf_HaltTimestamp();
    TriggerEnable(gt_ScenesMP01_020Timestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_020_Init () {
    gt_ScenesMP01_020 = TriggerCreate("gt_ScenesMP01_020_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_020 - Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_020Timestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_DisplayTimestamp("Cutscene020", true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_020Timestamp_Init () {
    gt_ScenesMP01_020Timestamp = TriggerCreate("gt_ScenesMP01_020Timestamp_Func");
    TriggerEnable(gt_ScenesMP01_020Timestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP01_020Timestamp, c_cutsceneNone, "ShowTimeStamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_030
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_030_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP01_030PlayRTTMovie, true);
    TriggerEnable(gt_ScenesMP01_030RemoveScreen, true);
    TriggerEnable(gt_ScenesMP01_030UpdateScreenAttachment, true);
    TriggerEnable(gt_ScenesMP01_030StopNews, true);
    libNtve_gf_CreateModelAtPoint("SMX3_Cutscene_MP01_30_NewsTV", libNCST_gf_StoryModeDefaultPosition());
    gv_mP01_030_NewsScreen = libNtve_gf_ActorLastCreated();
    ActorSend(gv_mP01_030_NewsScreen, "AliasAdd FunTest");
    ActorSend(gv_mP01_030_NewsScreen, "ExternalFinderAdd");
    libComC_gf_CampaignPlayCutscene("Cutscenes\\SMX3_Cutscene_MP01_030.SC2Cutscene", Point(64.0, 64.0), true, true);
    libNCST_gf_StoryCutsceneFade(true, 0.0, false);
    ActorSend(gv_mP01_030_NewsScreen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP01_030_NewsScreen);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, false);
    TriggerEnable(gt_ScenesMP01_030PlayRTTMovie, false);
    TriggerEnable(gt_ScenesMP01_030RemoveScreen, false);
    TriggerEnable(gt_ScenesMP01_030UpdateScreenAttachment, false);
    TriggerEnable(gt_ScenesMP01_030StopNews, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_030_Init () {
    gt_ScenesMP01_030 = TriggerCreate("gt_ScenesMP01_030_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_035
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_035_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_CampaignPlayMovieCutscene("Cutscenes\\SMX3_Cutscene_MP01_035.SC2Cutscene", true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_035_Init () {
    gt_ScenesMP01_035 = TriggerCreate("gt_ScenesMP01_035_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_030 - Play RTT Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_030PlayRTTMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(ActorFrom("::external.NovaTV"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    ActorSend(gv_mP01_030_NewsScreen, libNtve_gf_ActorMsg1("TextureSelectById", ("video_newsreport_smx3_mp01_030")));
    ActorSend(gv_mP01_030_NewsScreen, MakeMsgTextureVideoPlay("video", c_textureSlotComponentDefault, 30, c_textureVideoPlayFlagSynced, 1, "Transmission"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_030PlayRTTMovie_Init () {
    gt_ScenesMP01_030PlayRTTMovie = TriggerCreate("gt_ScenesMP01_030PlayRTTMovie_Func");
    TriggerEnable(gt_ScenesMP01_030PlayRTTMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP01_030PlayRTTMovie, c_cutsceneNone, "ScenePlay");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_030 - Update Screen Attachment
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_030UpdateScreenAttachment_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(ActorFrom("::external.NovaTV"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_030UpdateScreenAttachment_Init () {
    gt_ScenesMP01_030UpdateScreenAttachment = TriggerCreate("gt_ScenesMP01_030UpdateScreenAttachment_Func");
    TriggerEnable(gt_ScenesMP01_030UpdateScreenAttachment, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP01_030UpdateScreenAttachment, c_cutsceneNone, "Reattach");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_030 - Stop News
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_030StopNews_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_030StopNews_Init () {
    gt_ScenesMP01_030StopNews = TriggerCreate("gt_ScenesMP01_030StopNews_Func");
    TriggerEnable(gt_ScenesMP01_030StopNews, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP01_030StopNews, c_cutsceneNone, "NewsEnd");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_030 - Remove Screen
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_030RemoveScreen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_mP01_030_NewsScreen);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_030RemoveScreen_Init () {
    gt_ScenesMP01_030RemoveScreen = TriggerCreate("gt_ScenesMP01_030RemoveScreen_Func");
    TriggerEnable(gt_ScenesMP01_030RemoveScreen, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP01_030RemoveScreen, c_cutsceneNone, "TVOff");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP01_040
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP01_040_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP01_040.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP01_040_Init () {
    gt_ScenesMP01_040 = TriggerCreate("gt_ScenesMP01_040_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_005
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_005_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_005.SC2Cutscene");
    libNCST_gf_SetAllSoundChannelVolumesStory(libNtve_ge_VolumeChannelMode_Cinematic, 0.5);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_010.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_005_Init () {
    gt_ScenesMP02_005 = TriggerCreate("gt_ScenesMP02_005_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_010
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_010_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_010.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_010_Init () {
    gt_ScenesMP02_010 = TriggerCreate("gt_ScenesMP02_010_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - Nova04VoidRay
//--------------------------------------------------------------------------------------------------
bool gt_ScenesNova04VoidRay_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\Nova04VoidRay.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesNova04VoidRay_Init () {
    gt_ScenesNova04VoidRay = TriggerCreate("gt_ScenesNova04VoidRay_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_020
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_020_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP02_020PlayRTTMovie, true);
    TriggerEnable(gt_ScenesMP02_020StopNews, true);
    TriggerEnable(gt_ScenesMP02_020RemoveScreen, true);
    libNtve_gf_CreateModelAtPoint("SMX3_Nova_Ship_Bridge_MainScreen", libNtve_gf_PointFromXYZ(64.0, 68.046, 4.6144));
    gv_mP02_020_Screen = libNtve_gf_ActorLastCreated();
    ActorSend(gv_mP02_020_Screen, "AliasAdd FunTest");
    ActorSend(gv_mP02_020_Screen, "ExternalFinderAdd");
    ActorSend(gv_mP02_020_Screen, "AnimPlay ShowScreen Morph,A PlayForever 0.000000 0.000000");
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, false);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_020.SC2Cutscene");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeWS");
    ActorSend(gv_mP02_020_Screen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP02_020_Screen);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, false);
    TriggerEnable(gt_ScenesMP02_020PlayRTTMovie, false);
    TriggerEnable(gt_ScenesMP02_020StopNews, false);
    TriggerEnable(gt_ScenesMP02_020RemoveScreen, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_020_Init () {
    gt_ScenesMP02_020 = TriggerCreate("gt_ScenesMP02_020_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_020 - Play RTT Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_020PlayRTTMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(ActorFrom("::external.Nova02_020"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    ActorSend(gv_mP02_020_Screen, libNtve_gf_ActorMsg1("TextureSelectById", ("video_newsreport_smx3_mp02_020")));
    ActorSend(gv_mP02_020_Screen, MakeMsgTextureVideoPlay("video", c_textureSlotComponentDefault, 30, c_textureVideoPlayFlagSynced, 1, "Transmission"));
    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeWS");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_020PlayRTTMovie_Init () {
    gt_ScenesMP02_020PlayRTTMovie = TriggerCreate("gt_ScenesMP02_020PlayRTTMovie_Func");
    TriggerEnable(gt_ScenesMP02_020PlayRTTMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_020PlayRTTMovie, c_cutsceneNone, "Nova02_020Start");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_020 - Stop News
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_020StopNews_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, true);
    Wait(0.5, c_timeReal);
    ActorSend(gv_mP02_020_Screen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP02_020_Screen);
    Wait(3.0, c_timeReal);
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeWS");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_020StopNews_Init () {
    gt_ScenesMP02_020StopNews = TriggerCreate("gt_ScenesMP02_020StopNews_Func");
    TriggerEnable(gt_ScenesMP02_020StopNews, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_020StopNews, c_cutsceneNone, "Nova02_020End");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_020 - Remove Screen
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_020RemoveScreen_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_mP02_020_Screen);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_020RemoveScreen_Init () {
    gt_ScenesMP02_020RemoveScreen = TriggerCreate("gt_ScenesMP02_020RemoveScreen_Func");
    TriggerEnable(gt_ScenesMP02_020RemoveScreen, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_020RemoveScreen, c_cutsceneNone, "Nova02_020Remove");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_025
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_025_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_025.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_025_Init () {
    gt_ScenesMP02_025 = TriggerCreate("gt_ScenesMP02_025_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_030
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_030_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP02_030EchoOn, true);
    TriggerEnable(gt_ScenesMP02_030EchoOff, true);
    TriggerEnable(gt_ScenesMP02_030Timestamp, true);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_030.SC2Cutscene");
    libComC_gf_HaltTimestamp();
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    TriggerEnable(gt_ScenesMP02_030Timestamp, false);
    TriggerEnable(gt_ScenesMP02_030EchoOn, false);
    TriggerEnable(gt_ScenesMP02_030EchoOff, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_030_Init () {
    gt_ScenesMP02_030 = TriggerCreate("gt_ScenesMP02_030_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_030 - EchoOn
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_030EchoOn_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_030EchoOn_Init () {
    gt_ScenesMP02_030EchoOn = TriggerCreate("gt_ScenesMP02_030EchoOn_Func");
    TriggerEnable(gt_ScenesMP02_030EchoOn, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_030EchoOn, c_cutsceneNone, "Nova02_030_EchoOn");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_030 - EchoOff
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_030EchoOff_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_030EchoOff_Init () {
    gt_ScenesMP02_030EchoOff = TriggerCreate("gt_ScenesMP02_030EchoOff_Func");
    TriggerEnable(gt_ScenesMP02_030EchoOff, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_030EchoOff, c_cutsceneNone, "Nova02_030_EchoOff");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_030 - Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_030Timestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_DisplayTimestamp("CutsceneMP02_030", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_030Timestamp_Init () {
    gt_ScenesMP02_030Timestamp = TriggerCreate("gt_ScenesMP02_030Timestamp_Func");
    TriggerEnable(gt_ScenesMP02_030Timestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_030Timestamp, c_cutsceneNone, "ShowTimeStamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_035
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_035_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_035.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_035_Init () {
    gt_ScenesMP02_035 = TriggerCreate("gt_ScenesMP02_035_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP02_040EchoOn, true);
    TriggerEnable(gt_ScenesMP02_040EchoOff, true);
    TriggerEnable(gt_ScenesMP02_040Timestamp, true);
    TriggerEnable(gt_ScenesMP02_040RTTScreenCreate, true);
    TriggerEnable(gt_ScenesMP02_040PlayRTTMovie, true);
    TriggerEnable(gt_ScenesMP02_040StopMovie, true);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP02_040.SC2Cutscene");
    libComC_gf_HaltTimestamp();
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeMS");
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryTV, 100.0, 1.0);
    ActorSend(gv_mP02_040_Screen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP02_040_Screen);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, false);
    TriggerEnable(gt_ScenesMP02_040EchoOn, false);
    TriggerEnable(gt_ScenesMP02_040EchoOff, false);
    TriggerEnable(gt_ScenesMP02_040Timestamp, false);
    TriggerEnable(gt_ScenesMP02_040RTTScreenCreate, false);
    TriggerEnable(gt_ScenesMP02_040PlayRTTMovie, false);
    TriggerEnable(gt_ScenesMP02_040StopMovie, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040_Init () {
    gt_ScenesMP02_040 = TriggerCreate("gt_ScenesMP02_040_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - EchoOn
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040EchoOn_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040EchoOn_Init () {
    gt_ScenesMP02_040EchoOn = TriggerCreate("gt_ScenesMP02_040EchoOn_Func");
    TriggerEnable(gt_ScenesMP02_040EchoOn, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040EchoOn, c_cutsceneNone, "EchoOn");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - EchoOff
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040EchoOff_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Echo_CS_MP02_Flashback");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryDialogue, "Reverb_CS_MP02_Flashback");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040EchoOff_Init () {
    gt_ScenesMP02_040EchoOff = TriggerCreate("gt_ScenesMP02_040EchoOff_Func");
    TriggerEnable(gt_ScenesMP02_040EchoOff, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040EchoOff, c_cutsceneNone, "EchoOff");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040Timestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_DisplayTimestamp("CutsceneMP02_040", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040Timestamp_Init () {
    gt_ScenesMP02_040Timestamp = TriggerCreate("gt_ScenesMP02_040Timestamp_Func");
    TriggerEnable(gt_ScenesMP02_040Timestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040Timestamp, c_cutsceneNone, "ShowTimeStamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - RTT Screen Create
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040RTTScreenCreate_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateModelAtPoint("SMX3_Nova_Ship_Bridge_MainScreen", libNCST_gf_StoryModeDefaultPosition());
    gv_mP02_040_Screen = libNtve_gf_ActorLastCreated();
    ActorSend(gv_mP02_040_Screen, "AliasAdd FunTest");
    ActorSend(gv_mP02_040_Screen, "ExternalFinderAdd");
    ActorSend(gv_mP02_040_Screen, "AnimPlay ShowScreen Morph,A PlayForever 0.000000 0.000000");
    ActorSend(ActorFrom("::external.Nova02_040"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040RTTScreenCreate_Init () {
    gt_ScenesMP02_040RTTScreenCreate = TriggerCreate("gt_ScenesMP02_040RTTScreenCreate_Func");
    TriggerEnable(gt_ScenesMP02_040RTTScreenCreate, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040RTTScreenCreate, c_cutsceneNone, "Nova02_040ScreenCreate");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - Play RTT Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040PlayRTTMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(ActorFrom("::external.Nova02_040"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    ActorSend(gv_mP02_040_Screen, libNtve_gf_ActorMsg1("TextureSelectById", ("video_newsreport_smx3_mp02_040")));
    ActorSend(gv_mP02_040_Screen, MakeMsgTextureVideoPlay("video", c_textureSlotComponentDefault, 30, c_textureVideoPlayFlagSynced, 1, "Transmission"));
    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeMS");
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryTV, 10.0, 1.5);
    Wait(5.0, c_timeGame);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryTV, 50.0, 6.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040PlayRTTMovie_Init () {
    gt_ScenesMP02_040PlayRTTMovie = TriggerCreate("gt_ScenesMP02_040PlayRTTMovie_Func");
    TriggerEnable(gt_ScenesMP02_040PlayRTTMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040PlayRTTMovie, c_cutsceneNone, "Nova02_040Start");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP02_040 - Stop Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP02_040StopMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, true);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryTV, 100.0, 1.0);
    ActorSend(gv_mP02_040_Screen, libNtve_gf_TextureVideoStopAll());
    ActorSend(gv_mP02_040_Screen, "AnimClear ShowScreen");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP02_GriffinBridgeMS");
    libNtve_gf_KillModel(gv_mP02_040_Screen);
    SoundPlayForPlayer(SoundLink("CS_SMX3_Cutscene_MP02_040_MonitorBeep", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP02_040StopMovie_Init () {
    gt_ScenesMP02_040StopMovie = TriggerCreate("gt_ScenesMP02_040StopMovie_Func");
    TriggerEnable(gt_ScenesMP02_040StopMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP02_040StopMovie, c_cutsceneNone, "Nova02_040End");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_010
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_010_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP03_010Timestamp, true);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP03_010.SC2Cutscene");
    libComC_gf_HaltTimestamp();
    TriggerEnable(gt_ScenesMP03_010Timestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_010_Init () {
    gt_ScenesMP03_010 = TriggerCreate("gt_ScenesMP03_010_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_010 - Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_010Timestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_DisplayTimestamp("CutsceneMP03_010", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_010Timestamp_Init () {
    gt_ScenesMP03_010Timestamp = TriggerCreate("gt_ScenesMP03_010Timestamp_Func");
    TriggerEnable(gt_ScenesMP03_010Timestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP03_010Timestamp, c_cutsceneNone, "ShowTimeStamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_020
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_020_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP03_020.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_020_Init () {
    gt_ScenesMP03_020 = TriggerCreate("gt_ScenesMP03_020_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_030
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_030_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP03_030.SC2Cutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_030_Init () {
    gt_ScenesMP03_030 = TriggerCreate("gt_ScenesMP03_030_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_035
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_035_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP03_035Timestamp, true);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP03_035.SC2Cutscene");
    libComC_gf_HaltTimestamp();
    TriggerEnable(gt_ScenesMP03_035Timestamp, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_035_Init () {
    gt_ScenesMP03_035 = TriggerCreate("gt_ScenesMP03_035_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_035 - Timestamp
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_035Timestamp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libComC_gf_DisplayTimestamp("CutsceneMP03_035", false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_035Timestamp_Init () {
    gt_ScenesMP03_035Timestamp = TriggerCreate("gt_ScenesMP03_035Timestamp_Func");
    TriggerEnable(gt_ScenesMP03_035Timestamp, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP03_035Timestamp, c_cutsceneNone, "ShowTimeStamp");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_040
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_040_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ScenesMP03_040OGVScreenCreate, true);
    TriggerEnable(gt_ScenesMP03_040PlayOGVMovie, true);
    TriggerEnable(gt_ScenesMP03_040StopMovie, true);
    libNCST_gf_ActivateDeactivateCreditsTriggers(true);
    libNCST_gf_PlayStorymodeCutscene("Cutscenes\\SMX3_Cutscene_MP03_040.SC2Cutscene");
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP03_ValeriansChamber");
    libNCST_gf_ActivateDeactivateCreditsTriggers(false);
    ActorSend(gv_mP03_040_Screen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP03_040_Screen);
    TriggerEnable(gt_ScenesMP03_040OGVScreenCreate, false);
    TriggerEnable(gt_ScenesMP03_040PlayOGVMovie, false);
    TriggerEnable(gt_ScenesMP03_040StopMovie, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_040_Init () {
    gt_ScenesMP03_040 = TriggerCreate("gt_ScenesMP03_040_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_040 - OGV Screen Create
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_040OGVScreenCreate_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateModelAtPoint("SMX3_Cutscene_MP01_30_NewsTV", libNtve_gf_PointFromXYZ(64.0, 68.046, 4.6144));
    gv_mP03_040_Screen = libNtve_gf_ActorLastCreated();
    ActorSend(gv_mP03_040_Screen, "AliasAdd FunTest");
    ActorSend(gv_mP03_040_Screen, "ExternalFinderAdd");
    ActorSend(ActorFrom("::external.Nova03_040"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_040OGVScreenCreate_Init () {
    gt_ScenesMP03_040OGVScreenCreate = TriggerCreate("gt_ScenesMP03_040OGVScreenCreate_Func");
    TriggerEnable(gt_ScenesMP03_040OGVScreenCreate, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP03_040OGVScreenCreate, c_cutsceneNone, "Nova03_040ScreenCreate");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_040 - Play OGV Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_040PlayOGVMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(ActorFrom("::external.Nova03_040"), "Attach ::external.FunTest {Origin 0} SOpAttachOrigin");
    ActorSend(gv_mP03_040_Screen, libNtve_gf_ActorMsg1("TextureSelectById", ("video_newsreport_smx3_mp03_040")));
    SoundChannelDSPInsert(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP03_ValeriansChamber");
    ActorSend(gv_mP03_040_Screen, MakeMsgTextureVideoPlay("video", c_textureSlotComponentDefault, 30, c_textureVideoPlayFlagSynced, 1, "Transmission"));
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryTV, 100.0, 6.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_040PlayOGVMovie_Init () {
    gt_ScenesMP03_040PlayOGVMovie = TriggerCreate("gt_ScenesMP03_040PlayOGVMovie_Func");
    TriggerEnable(gt_ScenesMP03_040PlayOGVMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP03_040PlayOGVMovie, c_cutsceneNone, "Nova03_040Start");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scenes - MP03_040 - Stop Movie
//--------------------------------------------------------------------------------------------------
bool gt_ScenesMP03_040StopMovie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryTV, true);
    SoundChannelDSPRemove(PlayerGroupAll(), c_soundCategoryTV, "Reverb_NovaMP03_ValeriansChamber");
    ActorSend(gv_mP03_040_Screen, libNtve_gf_TextureVideoStopAll());
    libNtve_gf_KillModel(gv_mP03_040_Screen);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ScenesMP03_040StopMovie_Init () {
    gt_ScenesMP03_040StopMovie = TriggerCreate("gt_ScenesMP03_040StopMovie_Func");
    TriggerEnable(gt_ScenesMP03_040StopMovie, false);
    TriggerAddEventCutsceneBookmarkFired(gt_ScenesMP03_040StopMovie, c_cutsceneNone, "Nova03_040End");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEBUG - Release Cam
//--------------------------------------------------------------------------------------------------
bool gt_DEBUGReleaseCam_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(1, CameraInfoDefault(), 0.0, -1, 10.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DEBUGReleaseCam_Init () {
    gt_DEBUGReleaseCam = TriggerCreate("gt_DEBUGReleaseCam_Func");
    TriggerAddEventChatMessage(gt_DEBUGReleaseCam, c_playerAny, "dbgnocam", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_MapInit_Init();
    gt_Init01StoryData_Init();
    gt_Init02Rooms_Init();
    gt_Init03Scenes_Init();
    gt_BeginStorymode_Init();
    gt_RoomPrepareVoid_Init();
    gt_RoomViewVoid_Init();
    gt_RoomViewStopVoid_Init();
    gt_RoomEntered_Init();
    gt_MovingToRoom_Init();
    gt_StorySoFarAnyButtonPressed_Init();
    gt_UpdateUnitRooms_Init();
    gt_ScenesPlayStorymodeEntry_Init();
    gt_ScenesMP01_010_Init();
    gt_ScenesMP01_020_Init();
    gt_ScenesMP01_020Timestamp_Init();
    gt_ScenesMP01_030_Init();
    gt_ScenesMP01_035_Init();
    gt_ScenesMP01_030PlayRTTMovie_Init();
    gt_ScenesMP01_030UpdateScreenAttachment_Init();
    gt_ScenesMP01_030StopNews_Init();
    gt_ScenesMP01_030RemoveScreen_Init();
    gt_ScenesMP01_040_Init();
    gt_ScenesMP02_005_Init();
    gt_ScenesMP02_010_Init();
    gt_ScenesNova04VoidRay_Init();
    gt_ScenesMP02_020_Init();
    gt_ScenesMP02_020PlayRTTMovie_Init();
    gt_ScenesMP02_020StopNews_Init();
    gt_ScenesMP02_020RemoveScreen_Init();
    gt_ScenesMP02_025_Init();
    gt_ScenesMP02_030_Init();
    gt_ScenesMP02_030EchoOn_Init();
    gt_ScenesMP02_030EchoOff_Init();
    gt_ScenesMP02_030Timestamp_Init();
    gt_ScenesMP02_035_Init();
    gt_ScenesMP02_040_Init();
    gt_ScenesMP02_040EchoOn_Init();
    gt_ScenesMP02_040EchoOff_Init();
    gt_ScenesMP02_040Timestamp_Init();
    gt_ScenesMP02_040RTTScreenCreate_Init();
    gt_ScenesMP02_040PlayRTTMovie_Init();
    gt_ScenesMP02_040StopMovie_Init();
    gt_ScenesMP03_010_Init();
    gt_ScenesMP03_010Timestamp_Init();
    gt_ScenesMP03_020_Init();
    gt_ScenesMP03_030_Init();
    gt_ScenesMP03_035_Init();
    gt_ScenesMP03_035Timestamp_Init();
    gt_ScenesMP03_040_Init();
    gt_ScenesMP03_040OGVScreenCreate_Init();
    gt_ScenesMP03_040PlayOGVMovie_Init();
    gt_ScenesMP03_040StopMovie_Init();
    gt_DEBUGReleaseCam_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
