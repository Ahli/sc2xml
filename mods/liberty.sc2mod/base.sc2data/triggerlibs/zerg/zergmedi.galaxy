//==================================================================================================
//  Zerg Medium Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  ZergUpgradesMedi
//--------------------------------------------------------------------------------------------------
void ZergUpgradesMedi (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_ZR_MeleeAttacks1 );
                AISetStock( player, 1, c_ZR_GroundCarapace1 );
                AISetStock( player, 1, c_ZR_MissileAttacks1 );
                if (AITechCount(player, c_ZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_ZR_ZerglingSpeed );
                }
                if (AITechCount(player, c_ZU_Baneling, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_ZR_BanelingSpeed );
                }
                AISetStock( player, 1, c_ZR_Burrow );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_ZR_MeleeAttacks3 );
                    AISetStock( player, 1, c_ZR_GroundCarapace3 );
                    AISetStock( player, 1, c_ZR_MissileAttacks3 );
                    AISetStock( player, 1, c_ZR_FlyerAttacks2 );
                    AISetStock( player, 1, c_ZR_FlyerCarapace2 );

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_ZR_FlyerAttacks1 );
                AISetStock( player, 1, c_ZR_FlyerCarapace1 );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_ZR_FlyerAttacks3 );
                    AISetStock( player, 1, c_ZR_FlyerCarapace3 );
                    if (AITechCount(player, c_ZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_ZR_HydraliskRange );
                    }
                    AISetStock( player, 1, c_ZR_MissileAttacks2 );
                    AISetStock( player, 1, c_ZR_GroundCarapace2 );
                    AISetStock( player, 1, c_ZR_MeleeAttacks2 );

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenArmyInitMedi
//--------------------------------------------------------------------------------------------------
int ZergOpenArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 8 foodCost and 440 resCost after about 380 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 12);
            AIAddToStockArmy(player, c_ZU_Baneling, 2);
            // validation: 14 units above with average cost 7 food and 450 resources
            duration = 372 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 4);
            // validation: 6 units above with average cost 9 food and 450 resources
            duration = 395 + RandomInt(-13, 19);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 11 foodCost and 660 resCost after about 440 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 16);
            AIAddToStockArmy(player, c_ZU_Baneling, 4);
            // validation: 20 units above with average cost 10 food and 700 resources
            duration = 441 + RandomInt(-14, 22);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 6);
            // validation: 8 units above with average cost 13 food and 650 resources
            duration = 457 + RandomInt(-15, 22);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 15 foodCost and 900 resCost after about 560 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 20);
            AIAddToStockArmy(player, c_ZU_Baneling, 6);
            // validation: 26 units above with average cost 13 food and 950 resources
            duration = 555 + RandomInt(-18, 27);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 8);
            // validation: 10 units above with average cost 17 food and 850 resources
            duration = 565 + RandomInt(-18, 28);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 3);
            // validation: 10 units above with average cost 17 food and 1000 resources
            duration = 604 + RandomInt(-20, 30);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 8 foodCost and 480 resCost after about 240 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 11);
            AIAddToStockArmy(player, c_ZU_Baneling, 3);
            // validation: 14 units above with average cost 7 food and 500 resources
            duration = 237 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 4);
            // validation: 6 units above with average cost 9 food and 450 resources
            duration = 241 + RandomInt(-8, 12);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 9 foodCost and 900 resCost after about 580 seconds
        AIAddToStockArmy(player, c_ZU_Zergling, 2);
        AIAddToStockArmy(player, c_ZU_Mutalisk, 4);
        // validation: 6 units above with average cost 9 food and 850 resources
        duration = 567 + RandomInt(-18, 28);
    }
    else {
        return ZergOpenArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenInitMedi
//--------------------------------------------------------------------------------------------------
void ZergOpenInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, ZergOpenArmyInitMedi);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenBuildMedi
//--------------------------------------------------------------------------------------------------
void ZergOpenBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_ZB_Hatchery_Alias );
        AISetStock( player, 2, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Overlord_Alias );
        AISetStock( player, 9, c_ZU_Drone );
        AISetStock( player, 2, c_ZU_Overlord_Alias );
        AISetStock( player, 13, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_SpawningPool );
        AISetStock( player, 15, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_Extractor );
        AISetStock( player, 16, c_ZU_Drone );
        AISetStock( player, 3, c_ZU_Overlord_Alias );
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 4, c_ZU_Zergling );
        AISetStock( player, 18, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_RoachWarren );
        AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_ZB_Hatchery_Alias );
        AISetStock( player, 2, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Overlord_Alias );
        AISetStock( player, 9, c_ZU_Drone );
        AISetStock( player, 2, c_ZU_Overlord_Alias );
        AISetStock( player, 13, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_SpawningPool );
        AISetStock( player, 15, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_Extractor );
        AISetStock( player, 16, c_ZU_Drone );
        AISetStock( player, 3, c_ZU_Overlord_Alias );
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 4, c_ZU_Zergling );
        AISetStock( player, 18, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_RoachWarren );
        AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms);
        AISetStock( player, 2, c_ZB_Extractor );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_ZB_Hatchery_Alias );
        AISetStock( player, 2, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Overlord_Alias );
        AISetStock( player, 9, c_ZU_Drone );
        AISetStock( player, 2, c_ZU_Overlord_Alias );
        AISetStock( player, 13, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_SpawningPool );
        AISetStock( player, 15, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_Extractor );
        AISetStock( player, 16, c_ZU_Drone );
        AISetStock( player, 3, c_ZU_Overlord_Alias );
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 4, c_ZU_Zergling );
        AISetStock( player, 18, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_RoachWarren );
        AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms);
        AISetStock( player, 2, c_ZB_Extractor );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_ZB_Hatchery_Alias );
        AISetStock( player, 2, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Overlord_Alias );
        AISetStock( player, 9, c_ZU_Drone );
        AISetStock( player, 2, c_ZU_Overlord_Alias );
        AISetStock( player, 15, c_ZU_Drone );
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZB_SpawningPool );
        AISetStock( player, 16, c_ZU_Drone );
        AISetStock( player, 1, c_ZB_Extractor );
        AISetStock( player, 17, c_ZU_Drone );
        AISetStock( player, 3, c_ZU_Overlord_Alias );
        AISetStock( player, 18, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 4, c_ZU_Zergling );
        AISetStock( player, 1, c_ZB_RoachWarren );
        AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms);
        AISetStock( player, 2, c_ZB_Extractor );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_ZB_Hatchery_Alias );
        AISetStock( player, 2, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Overlord_Alias );
        AISetStock( player, 9, c_ZU_Drone );
        AISetStock( player, 2, c_ZU_Overlord_Alias );
        AISetStock( player, 15, c_ZU_Drone );
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZB_SpawningPool );
        AISetStock( player, 16, c_ZU_Drone );
        AISetStock( player, 2, c_ZB_Extractor );
        AISetStock( player, 3, c_ZU_Overlord_Alias );
        AISetStock( player, 18, c_ZU_Drone );
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 1, c_ZB_Lair_Alias );
        AISetStock( player, 4, c_ZU_Overlord_Alias );
        AISetStock( player, 1, c_ZB_Spire_Alias );
        AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms );
        AISetStockUnitNext( player, 24, c_ZU_Drone, c_stockIdle );
    }

    ZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    ZergGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    ZergUpgradesMedi(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 24, c_ZU_Drone);

    ZergTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_ZR_OverseerSpeed );
        AISetStock( player, 1, c_ZR_OverlordTransport );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  ZergMidArmyInitMedi
//--------------------------------------------------------------------------------------------------
int ZergMidArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 16 foodCost and 960 resCost after about 320 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 7);
            AIAddToStockArmy(player, c_ZU_Baneling, 1);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 4);
            // validation: 12 units above with average cost 12 food and 1050 resources
            duration = 313 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 3);
            // validation: 10 units above with average cost 17 food and 1000 resources
            duration = 330 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 4);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 1);
            // validation: 9 units above with average cost 15 food and 1100 resources
            duration = 334 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 20 foodCost and 1200 resCost after about 350 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 12);
            AIAddToStockArmy(player, c_ZU_Baneling, 2);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 5);
            // validation: 19 units above with average cost 17 food and 1450 resources
            duration = 367 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 11 units above with average cost 19 food and 1150 resources
            duration = 340 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 1);
            // validation: 10 units above with average cost 17 food and 1200 resources
            duration = 337 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 21 foodCost and 1260 resCost after about 370 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 8);
            AIAddToStockArmy(player, c_ZU_Baneling, 2);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 6);
            // validation: 16 units above with average cost 17 food and 1550 resources
            duration = 387 + RandomInt(-12, 19);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 6);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 12 units above with average cost 21 food and 1250 resources
            duration = 369 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 4);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 3);
            // validation: 11 units above with average cost 19 food and 1400 resources
            duration = 378 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 29 foodCost and 1740 resCost after about 580 seconds
        // note: mid macro build did not send opening attack at 240 time
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 12);
            AIAddToStockArmy(player, c_ZU_Baneling, 4);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 1);
            // validation: 23 units above with average cost 22 food and 2000 resources
            duration = 581 + RandomInt(-27, 41);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 10);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 16 units above with average cost 29 food and 1650 resources
            duration = 563 + RandomInt(-26, 40);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 8);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 16 units above with average cost 29 food and 1950 resources
            duration = 621 + RandomInt(-28, 43);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 14 foodCost and 1300 resCost after about 350 seconds
        AIAddToStockArmy(player, c_ZU_Mutalisk, 6);
        AIAddToStockArmy(player, c_ZU_Corruptor, 1);
        // validation: 7 units above with average cost 14 food and 1450 resources
        duration = 366 + RandomInt(-12, 18);
    }
    else {
        return ZergMidArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  ZergMidInitMedi
//--------------------------------------------------------------------------------------------------
void ZergMidInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, ZergMidArmyInitMedi);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  ZergMidBuildMedi
//--------------------------------------------------------------------------------------------------
void ZergMidBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    ZergBasicEconomy(player, c_ldPhaseMid, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_ZR_OverseerSpeed );
        AISetStock( player, 1, c_ZR_OverlordTransport );
    }
    ZergBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    ZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    ZergGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 24, c_ZU_Drone);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_ZU_Queen );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_ZU_Queen );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_ZU_Queen );
        if (ZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_ZU_Queen );
        if (ZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_ZU_Queen );
        if (ZergMacroExpand(player)) { return; }
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_ZU_Overseer );
        AISetStock( player, 2, c_ZB_SporeCrawler );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 54, c_ZU_Drone);

    ZergUpgradesMedi(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_ZU_Overseer );

    ZergTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  ZergLateArmyInitMedi
//--------------------------------------------------------------------------------------------------
int ZergLateArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 29 foodCost and 1700 resCost after about 300 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 12);
            AIAddToStockArmy(player, c_ZU_Baneling, 4);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 1);
            // validation: 23 units above with average cost 22 food and 2000 resources
            duration = 303 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 9);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_ZU_Infestor, 1);
            // validation: 16 units above with average cost 29 food and 1800 resources
            duration = 307 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 6);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 14 units above with average cost 25 food and 1750 resources
            duration = 294 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 32 foodCost and 1900 resCost after about 320 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Ultralisk, 3);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 9 units above with average cost 27 food and 2150 resources
            duration = 325 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_BroodLord, 2);
            AIAddToStockArmy(player, c_ZU_Corruptor, 2);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            // validation: 8 units above with average cost 17 food and 2150 resources
            duration = 301 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 35 foodCost and 2100 resCost after about 340 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 6);
            AIAddToStockArmy(player, c_ZU_Infestor, 6);
            // validation: 14 units above with average cost 25 food and 2150 resources
            duration = 320 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Infestor, 3);
            AIAddToStockArmy(player, c_ZU_Infestor, 4);
            // validation: 14 units above with average cost 25 food and 2300 resources
            duration = 330 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 37 foodCost and 2300 resCost after about 360 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 10);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            // validation: 20 units above with average cost 37 food and 2450 resources
            duration = 369 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 5);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 3);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 2);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 1);
            // validation: 15 units above with average cost 33 food and 2750 resources
            duration = 379 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 23 foodCost and 2300 resCost after about 320 seconds
        AIAddToStockArmy(player, c_ZU_Mutalisk, 9);
        AIAddToStockArmy(player, c_ZU_Corruptor, 2);
        // validation: 11 units above with average cost 22 food and 2300 resources
        duration = 317 + RandomInt(-10, 15);
    }
    else {
        return ZergLateArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  ZergFinalArmyInitMedi
//--------------------------------------------------------------------------------------------------
int ZergFinalArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 42 foodCost and 2700 resCost after about 280 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 24);
            AIAddToStockArmy(player, c_ZU_Baneling, 6);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 1);
            // validation: 39 units above with average cost 33 food and 2850 resources
            duration = 272 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 16);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_ZU_Infestor, 1);
            // validation: 25 units above with average cost 47 food and 2800 resources
            duration = 292 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 12);
            AIAddToStockArmy(player, c_ZU_Infestor, 4);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 22 units above with average cost 41 food and 2850 resources
            duration = 284 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 45 foodCost and 2900 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Ultralisk, 6);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            // validation: 12 units above with average cost 45 food and 3650 resources
            duration = 332 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_BroodLord, 5);
            AIAddToStockArmy(player, c_ZU_Corruptor, 2);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            // validation: 11 units above with average cost 29 food and 3800 resources
            duration = 312 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 49 foodCost and 3200 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 8);
            AIAddToStockArmy(player, c_ZU_Infestor, 10);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_ZU_Infestor, 1);
            // validation: 23 units above with average cost 43 food and 3900 resources
            duration = 339 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 10);
            AIAddToStockArmy(player, c_ZU_Infestor, 5);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_ZU_Infestor, 4);
            // validation: 23 units above with average cost 43 food and 3600 resources
            duration = 326 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 52 foodCost and 3500 resCost after about 340 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 10);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_ZU_Infestor, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
            AIAddToStockArmy(player, c_ZU_Corruptor, 1);
            // validation: 23 units above with average cost 46 food and 3475 resources
            duration = 330 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_ZU_Zergling, 2);
            AIAddToStockArmy(player, c_ZU_Roach, 6);
            AIAddToStockArmy(player, c_ZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_ZU_Infestor, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 3);
            AIAddToStockArmy(player, c_ZU_Corruptor, 1);
            AIAddToStockArmy(player, c_ZU_Corruptor, 2);
            // validation: 20 units above with average cost 46 food and 4075 resources
            duration = 353 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 32 foodCost and 3200 resCost after about 300 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_ZU_Mutalisk, 10);
            AIAddToStockArmy(player, c_ZU_Corruptor, 3);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 2);
            // validation: 15 units above with average cost 30 food and 3150 resources
            duration = 294 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_ZU_Mutalisk, 3);
            AIAddToStockArmy(player, c_ZU_Corruptor, 2);
            AIAddToStockArmy(player, c_ZU_BroodLord, 3);
            AIAddToStockArmy(player, c_ZU_Mutalisk, 2);
            // validation: 10 units above with average cost 26 food and 3150 resources
            duration = 284 + RandomInt(-9, 14);
        }
    }
    else {
        return ZergFinalArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  ZergLateInitMedi
//--------------------------------------------------------------------------------------------------
void ZergLateInitMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, ZergLateArmyInitMedi);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, ZergFinalArmyInitMedi);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  ZergLateBuildMedi
//--------------------------------------------------------------------------------------------------
void ZergLateBuildMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    ZergBasicEconomy(player, c_ldPhaseLate, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_ZR_OverseerSpeed );
        AISetStock( player, 1, c_ZR_OverlordTransport );
    }
    ZergBasicExpansion(player, c_ldPhaseLate, 10000, 2500);

    ZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    ZergGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 24, c_ZU_Drone);

    if (buildType == e_buildType_Core) {
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 2, c_ZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_HighTech) {
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 2, c_ZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Special) {
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 2, c_ZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Mixed) {
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 2, c_ZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Air) {
        if (ZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_ZU_Queen );
        AISetStock( player, 2, c_ZB_EvolutionChamber );
    }

    AISetStock( player, 2, c_ZU_Overseer );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_ZR_OverseerSpeed );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 3, c_ZU_Overseer );
    AISetStock( player, 2, c_ZB_SporeCrawler );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 54, c_ZU_Drone);

    if (lateLoop <= 0) { // First Late Loop
        ZergUpgradesMedi(player, c_ldPhaseLate);
        ZergTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        ZergUpgradesMedi(player, c_ldPhaseFinal);
        ZergTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenMedi
//--------------------------------------------------------------------------------------------------
void ZergOpenMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        ZergOpenInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { ZergOpenBuildMedi(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState ZergMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  ZergMidMedi
//--------------------------------------------------------------------------------------------------
void ZergMidMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        ZergMidInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { ZergMidBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState ZergMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  ZergLateMedi
//--------------------------------------------------------------------------------------------------
void ZergLateMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        ZergLateInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { ZergLateBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState ZergMedi"); }
}

