include "LibCOOC_h"

//--------------------------------------------------------------------------------------------------
// Library: UI (COOP)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCOUI_ge_SingularBossBarStyle_BossEnemy = 0;
const int libCOUI_ge_SingularBossBarStyle_Objective = 1;
const int libCOUI_ge_CampaignHeroes_None = 0;
const int libCOUI_ge_CampaignHeroes_Artanis = 1;
const int libCOUI_ge_CampaignHeroes_Kerrigan = 2;
const int libCOUI_ge_CampaignHeroes_Zagara = 3;
const int libCOUI_ge_CampaignHeroes_LaserDrill = 4;
const int libCOUI_ge_CampaignHeroes_Hyperion = 5;
const int libCOUI_ge_CampaignHeroes_KerriganReviveCocoon = 6;
const int libCOUI_ge_CampaignHeroes_ZagaraReviveCocoon = 7;
const int libCOUI_ge_CampaignHeroes_Nova = 8;
const int libCOUI_ge_CampaignHeroes_Alarak = 9;
const int libCOUI_ge_CampaignHeroes_NovaReviveBeacon = 10;
const int libCOUI_ge_CampaignHeroes_AlarakReviveBeacon = 11;
const int libCOUI_ge_CampaignHeroes_Fenix = 12;
const int libCOUI_ge_CampaignHeroes_FenixDragoon = 13;
const int libCOUI_ge_CampaignHeroes_FenixArbiter = 14;
const int libCOUI_ge_CampaignHeroes_Selendis = 15;
const int libCOUI_ge_CampaignHeroes_Colarion = 16;
const int libCOUI_ge_CampaignHeroes_Megalith = 17;
const int libCOUI_ge_CampaignHeroes_Dehaka = 18;
const int libCOUI_ge_CampaignHeroes_DehakasDen = 19;
const int libCOUI_ge_CampaignHeroes_ArtifactTruck = 20;
const int libCOUI_ge_CampaignHeroes_Tychus = 21;
const int libCOUI_ge_CampaignHeroes_TychusReviveBeacon = 22;
const int libCOUI_ge_CampaignHeroes_Zeratul = 23;
const int libCOUI_ge_CampaignHeroes_ZeratulReviveBeacon = 24;
const int libCOUI_ge_CampaignHeroes_Gary = 25;
const int libCOUI_ge_CampaignHeroes_SuperGary = 26;
const int libCOUI_ge_CampaignHeroes_GaryReviveBeacon = 27;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Dialog = 0;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Panel = 1;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Label = 2;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Value = 3;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_ProgressBar = 4;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_MinValue = 0;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_CurValue = 1;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_MaxValue = 2;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_OffsetX = 3;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_OffsetY = 4;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_Attachment = 5;
const int libCOUI_ge_CU_UnitProgressBarDataName_MinValue = 0;
const int libCOUI_ge_CU_UnitProgressBarDataName_CurValue = 1;
const int libCOUI_ge_CU_UnitProgressBarDataName_MaxValue = 2;
const int libCOUI_ge_CU_UnitProgressBarDataName_DisplayValue = 3;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Label = 0;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Value = 1;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Bar = 2;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Broder = 3;

// Constants
const string libCOUI_gv_cUC_AIChoiceEventClosed = "CU_AIChoiceEventClosed";
const int libCOUI_gv_cUC_COMMSELECTMAX = 18;
const string libCOUI_gv_cUC_CommChoiceEventClosed = "CU_CommChoiceEventClosed";
const int libCOUI_gv_cUC_COMMUPGRADETIERCOUNT = 15;
const int libCOUI_gv_cUC_MUTATORMAXCOUNT = 75;
const int libCOUI_gv_cUC_CustomMutatorCountdownTime = 5;
const int libCOUI_gv_cUC_CustomMutatorItemsPerPage = 15;
const int libCOUI_gv_cUC_CustomMutatorItemsActiveMax = 10;
const string libCOUI_gv_cUC_CustomMutatorEventStart = "CU_CustomMutatorEventStart";
const int libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_SMALL = 5;
const int libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_LARGE = 10;
const fixed libCOUI_gv_cUC_BB_HPBarWidth = 289.0;
const int libCOUI_gv_cUC_BB_HPBarHeight = 30;
const fixed libCOUI_gv_cUC_HeroUpdateFrequency = 0.25;
const int libCOUI_gv_cUC_HeroMaxCount = 2;
const int libCOUI_gv_cUC_HEROUILIFEBARHEIGHT = 20;
const int libCOUI_gv_cUC_HEROUISHIELDBARHEIGHT = 8;
const int libCOUI_gv_cUC_HEROUIENERGYBARHEIGHT = 8;
const int libCOUI_gv_cUC_HEROUIBARWIDTH = 200;
const fixed libCOUI_gv_pUC_HealthWatchThreshold = 0.4;
const string libCOUI_gv_cUC_TargetingEventCancel = "PU_TargetingEventCancel";
const string libCOUI_gv_cUC_TargetingParamPlayer = "PU_TargetingParamPlayer";
const int libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE = 5;
const int libCOUI_gv_cU_TychusMedivacMaxCharges = 3;
const int libCOUI_gv_cUC_ZERATUL_MAX_SELECTIONS = 4;
const int libCOUI_gv_cUC_WAVETIMERWINDOWMAX = 3;
const int libCOUI_gv_cUC_WAVETIMERUNITMAX = 3;
const string libCOUI_gv_cUC_ScoreEventClosed = "CU_ScoreEventClosed";
const string libCOUI_gv_cUC_ScoreParameterPlayer = "CU_ScoreParamPlayer";

// Structures
struct libCOUI_gs_CU_PrestigeSelector {
    int lv_button;
    int lv_icon;
};

// Variable Declarations
bool libCOUI_gv_cU_DebugMovieCaptureMode;
int libCOUI_gv_cU_AIChoiceDialog;
int libCOUI_gv_cU_AIChoiceOKButton;
int libCOUI_gv_cU_AIChoiceListBox;
string[11] libCOUI_gv_cU_AIChoicePersonalities;
int libCOUI_gv_cU_RandomMutationSelectDialog;
int libCOUI_gv_cU_RandomMutationSelectOKButton;
int libCOUI_gv_cU_RandomMutationSelectMinSlider;
int libCOUI_gv_cU_RandomMutationSelectMaxSlider;
int libCOUI_gv_cU_RandomMutationSelectMinMutSlider;
int libCOUI_gv_cU_RandomMutationSelectMaxMutSlider;
int libCOUI_gv_cU_RandomMutationSelectLabel;
int libCOUI_gv_cU_CommanderDialog;
int libCOUI_gv_cU_CommanderPanel;
int libCOUI_gv_cU_CommanderReadyButton;
int libCOUI_gv_cU_CommanderMutatorButton;
int libCOUI_gv_cU_CommanderMasteryButton;
int libCOUI_gv_cU_CommanderMasteryCheckbox;
int libCOUI_gv_cU_CommanderMutatorCountLabel;
int libCOUI_gv_cU_CommanderMutatorChallengePulldown;
int libCOUI_gv_cU_CommanderReadyCheckMark;
int libCOUI_gv_cU_CommanderReadyLabelSelf;
int libCOUI_gv_cU_CommanderReadyLabelAlly;
int[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderButton;
int[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderButtonPortrait;
int[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderName;
int[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderButtonSelectionBorder;
int libCOUI_gv_cU_CommanderSelectionPanel;
int libCOUI_gv_cU_CommanderSelectedNameSelf;
int libCOUI_gv_cU_CommanderSelectedNameAlly;
int libCOUI_gv_cU_CommanderAccountNameSelf;
int libCOUI_gv_cU_CommanderAccountNameAlly;
int libCOUI_gv_cU_CommanderSelectedPrestigeSelf;
int libCOUI_gv_cU_CommanderSelectedPrestigeAlly;
int libCOUI_gv_cU_CommanderDifficultyLabelSelf;
int libCOUI_gv_cU_CommanderDifficultyLabelAlly;
int libCOUI_gv_cU_CommanderLevelLabelSelf;
int libCOUI_gv_cU_CommanderMasteryLabelSelf;
int libCOUI_gv_cU_CommanderLevelLabelAlly;
int libCOUI_gv_cU_CommanderMasteryLabelAlly;
string[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderList;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CommanderSelection;
int libCOUI_gv_cU_CommanderSelect_RefCount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CommanderSelect_PlayerReady;
int libCOUI_gv_cU_CommanderPanelUpgrade;
int[libCOUI_gv_cUC_COMMUPGRADETIERCOUNT + 1] libCOUI_gv_cU_CommanderItemButtons;
int[libCOUI_gv_cUC_COMMUPGRADETIERCOUNT + 1] libCOUI_gv_cU_CommanderItemIcons;
int libCOUI_gv_cU_CommanderLevelUpButton;
int libCOUI_gv_cU_CommanderLevelDownButton;
string[51] libCOUI_gv_cU_CommanderMutatorChallengeList;
int libCOUI_gv_cU_MutatorDialog;
int libCOUI_gv_cU_MutatorPanel;
int[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_MutatorItemPanels;
int[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_MutatorNameLabels;
int[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_MutatorDescriptionLabels;
int[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_MutatorCheckboxes;
int libCOUI_gv_cU_MutatorAcceptButton;
int libCOUI_gv_cU_MutatorCancelButton;
string[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_MutatorItems;
int libCOUI_gv_cU_MasteryDialog;
int libCOUI_gv_cU_MasteryPanel;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryItemPanels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryNameLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryPointLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryValueLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryPlusButtons;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryMinusButtons;
int[libCOOC_gv_cCC_MASTERY_CATEGORIES + 1] libCOUI_gv_cU_MasteryCategoryPoints;
int libCOUI_gv_cU_MasteryAcceptButton;
int libCOUI_gv_cU_MasteryResetButton;
int libCOUI_gv_cU_MasteryLevelUpButton;
int libCOUI_gv_cU_MasteryLevelDownButton;
int libCOUI_gv_cU_MasteryLevelLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryLevelCurrent;
int[libCOOC_gv_cCC_MASTERY_CATEGORIES + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryCategoryPointsLeft;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryUpgradePointsSpent;
string[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryUpgrades;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryShiftPressed;
int libCOUI_gv_cU_MasteryRefCount;
int libCOUI_gv_cU_PrestigePanel;
libCOUI_gs_CU_PrestigeSelector[libCOOC_gv_cCC_PLAYERPRESTIGEMAXRANK + 1] libCOUI_gv_cU_PrestigeSelectors;
int libCOUI_gv_cU_CustomMutatorDialog;
int libCOUI_gv_cU_CustomMutatorPanel;
int libCOUI_gv_cU_CustomMutatorChatDisplayStandard;
int libCOUI_gv_cU_CustomMutatorStartButton;
int libCOUI_gv_cU_CustomMutatorMenuButton;
int libCOUI_gv_cU_CustomMutatorPageCountLabel;
int libCOUI_gv_cU_CustomMutatorPageNextButton;
int libCOUI_gv_cU_CustomMutatorPagePrevButton;
int libCOUI_gv_cU_CustomMutatorMapNameLabel;
int libCOUI_gv_cU_CustomMutatorSpeedDropDown;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorCommanderNameLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorCommanderImage;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorPlayerNameLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorPlayerCard;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorLevelLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorMasteryLevelLabel;
int[libCOUI_gv_cUC_CustomMutatorItemsPerPage + 1] libCOUI_gv_cU_CustomMutatorItemButtons;
int[libCOUI_gv_cUC_CustomMutatorItemsPerPage + 1] libCOUI_gv_cU_CustomMutatorItemLabels;
int[libCOUI_gv_cUC_CustomMutatorItemsPerPage + 1] libCOUI_gv_cU_CustomMutatorItemIcons;
int[libCOUI_gv_cUC_CustomMutatorItemsActiveMax + 1] libCOUI_gv_cU_CustomMutatorActiveItemLabels;
int[libCOUI_gv_cUC_CustomMutatorItemsActiveMax + 1] libCOUI_gv_cU_CustomMutatorActiveItemButtons;
int libCOUI_gv_cU_CustomMutatorLeaderExitPanel;
int libCOUI_gv_cU_CustomMutatorLeaderExitButton;
int libCOUI_gv_cU_CustomMutatorLeaderExitTitleLabel;
int libCOUI_gv_cU_CustomMutatorLeaderExitMessageLabel;
string[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_CustomMutatorItems;
bool[libCOUI_gv_cUC_MUTATORMAXCOUNT + 1] libCOUI_gv_cU_CustomMutatorItemStates;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CustomMutatorPageSelection;
int libCOUI_gv_cU_CustomMutatorItemCount;
int[libCOUI_gv_cUC_CustomMutatorItemsActiveMax + 1] libCOUI_gv_cU_CustomMutatorActiveItems;
int libCOUI_gv_cU_CustomMutatorActiveItemCount;
int libCOUI_gv_cU_CustomMutatorPageCount;
bool libCOUI_gv_cU_CustomMutatorStartingUp;
int libCOUI_gv_cU_MutatorListSmallPanel;
int libCOUI_gv_cU_MutatorListLargePanel;
int libCOUI_gv_cU_MutatorListNotificationLabel;
timer libCOUI_gv_cU_MutatorListNotificationTimer;
int[libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_SMALL + 1] libCOUI_gv_cU_MutatorListSmallIcon;
int[libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_SMALL + 1] libCOUI_gv_cU_MutatorListSmallItems;
int[libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_LARGE + 1] libCOUI_gv_cU_MutatorListLargeIcon;
int[libCOUI_gv_cUC_MUTATOR_MAX_DISPLAY_LARGE + 1] libCOUI_gv_cU_MutatorListLargeItems;
int libCOUI_gv_cU_EnemyBrief;
int libCOUI_gv_cU_PlayerPrestigeBrief;
int libCOUI_gv_cU_PlayerAllyPrestigeBrief;
int libCOUI_gv_cU_PlayerPrestigeBriefImage;
int libCOUI_gv_cU_PlayerAllyPrestigeBriefImage;
int libCOUI_gv_cU_ArmyButton;
int libCOUI_gv_cU_ArmyButtonTipPanel;
bool libCOUI_gv_cU_ArmyButtonTipReady;
text libCOUI_gv_cU_BB_Title;
unit libCOUI_gv_cU_BB_Boss;
fixed libCOUI_gv_cU_BB_MaxValue;
fixed libCOUI_gv_cU_BB_CurrentValue;
int libCOUI_gv_cU_BB_HPOldWidth;
int libCOUI_gv_cU_BB_Style;
int libCOUI_gv_cU_BB_Panel;
int libCOUI_gv_cU_BB_TitleLabel;
int libCOUI_gv_cU_BB_HpLabel;
int libCOUI_gv_cU_BB_HpFullImage;
int libCOUI_gv_cU_BB_HpCurrentImage;
int libCOUI_gv_cU_BB_HpBackground;
int libCOUI_gv_cU_BB_HpBackground2;
int libCOUI_gv_cU_BB_BossBG;
int libCOUI_gv_cU_BB_ObjectiveBG;
fixed[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroReviveTimer;
fixed libCOUI_gv_cU_HeroCooldownTime;
unit[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroUnit;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroType;
string[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroIcon;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroPositionX;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroPositionY;
bool[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroShowLevel;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1][libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroExists;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroPanel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImageNoEnergy;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImageAll;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogIconImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogCooldownImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogDamageTakenImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogDamageTakenLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogNameLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogLevelLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogButton;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogLevelBox;
fixed[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_VoidHeroUIDamageTimer;
bool[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_VoidHeroUIRevivable;
int libCOUI_gv_cU_HeroAutomaticIndex;
bool libCOUI_gv_cU_HealthWatchFlashing;
int libCOUI_gv_cU_HealthWatchDialog;
int libCOUI_gv_cU_HealthWatchImage;
fixed libCOUI_gv_cU_HealthWatchLastHP;
sound libCOUI_gv_cU_HealthWatchSoundStart;
sound libCOUI_gv_cU_HealthWatchSoundHeartbeat;
sound libCOUI_gv_cU_HealthWatchSoundBreath;
unit libCOUI_gv_cU_HealthWatchUnit;
int libCOUI_gv_cU_MissionUIContainer;
int libCOUI_gv_cU_ObjectivePanel;
int libCOUI_gv_cU_ProgressBarPanel;
int libCOUI_gv_cU_ProgressBarLabelTitle;
int libCOUI_gv_cU_ProgressBarLabelBarLeft;
int libCOUI_gv_cU_ProgressBarImageBar;
int libCOUI_gv_cU_ProgressBarMax;
int libCOUI_gv_cU_ProgressBarMin;
int libCOUI_gv_cU_ProgressBarProgress;
bool libCOUI_gv_cU_ProgressBarShowing;
int libCOUI_gv_pUC_ProgressBarWidth;
int libCOUI_gv_pUC_ProgressBarHeight;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCutsceneFilter;
int libCOUI_gv_cU_GPAlarakGemClickCount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPInitialized;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPLastEnergyUpdate;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyHighlighting;
bool[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPButtonHighlighted;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPUnit;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPUnitSecondary;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCasterGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCasterGroupSecondary;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPPanel;
int libCOUI_gv_cU_GPPanelHolder;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPAlarakButton;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPMengskEnergyContainer;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPMengskEnergyRegenRoyalGuardContainer;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPMengskEnergyRegenTrooperContainer;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyBar;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyTooltip;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyBarScene;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyGlassScene;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPEnergyLabel;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPVisible;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdPanel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdPanelUnitStatus;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCutscene;
int[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdButtons;
int[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdButtonArrows;
int[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPUnitEnergyLinks;
int[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdButtonActiveImage;
int[5][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_GPCmdButtonBackgroundImage;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingCurrentCharges;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingOverlayDialog;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingOverlayPortrait;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingAbilityDialog;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingPanel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingCancelButton;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingChargesPanel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingInstructionsLabel;
int[6][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_TargetingChargeSinglePanel;
int libCOUI_gv_cU_TimerWindowHighlightFrame;
fixed libCOUI_gv_cU_TimerWindowHighlightDuration;
fixed libCOUI_gv_cU_TimerWindowDangerThreshold;
bool libCOUI_gv_cU_TimerWindowInDanger;
timer libCOUI_gv_cU_TimerWindowTimer;
int libCOUI_gv_cU_TimerWindow;
string libCOUI_gv_cM_Tychus_SharedAbil_ButtonBase;
unit[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadHeroes;
unit libCOUI_gv_cU_TychusSquadBar;
int libCOUI_gv_cU_TychusSquadContainer;
int libCOUI_gv_cU_TychusSquadTrainingProgressBar;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadAvailabilityProgressBars;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadUnitFrames;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadUnitTargets;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadEquipmentStructureTargets;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadBarTargets;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadPortraits;
int[libCOUI_gv_cUC_TYCHUS_MAX_SQUAD_SIZE + 1] libCOUI_gv_cU_TychusSquadPortraitsStatic;
int libCOUI_gv_cU_TychusSquadNextIndex;
int libCOUI_gv_cU_TychusMedivacCurrentCharges;
bool libCOUI_gv_cU_TychusSquadSpawnSkip;
bool libCOUI_gv_cU_TychusPurchaseUpgradePlaying;
int libCOUI_gv_cU_ZeratulSelectionCmdPanel;
int[libCOUI_gv_cUC_ZERATUL_MAX_SELECTIONS + 1] libCOUI_gv_cU_ZeratulSelectionButtonContainers;
int libCOUI_gv_cU_StetmannMaxStetelliteCharges;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindows;
timer[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTimers;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTitle;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTime;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1][libCOUI_gv_cUC_WAVETIMERUNITMAX + 1] libCOUI_gv_cU_WaveTimerWindowIcon;
string[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1][libCOUI_gv_cUC_WAVETIMERUNITMAX + 1] libCOUI_gv_cU_WaveTimerWindowImage;
int libCOUI_gv_cU_WaveTimerActiveCount;
int libCOUI_gv_cU_WaveTimerWindowLast;
int libCOUI_gv_cU_FanfareFlash;
int libCOUI_gv_cU_FanfareCloseButton;
int libCOUI_gv_cU_FanfareConvertToReplayButton;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_FanfareResult;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_FanfareShown;
int libCOUI_gv_cU_FanfarePanel;
int libCOUI_gv_cU_FanfareDialog;
bool libCOUI_gv_cU_FanfareTransmissionPlayed;
int libCOUI_gv_cU_ScoreDialog;
int libCOUI_gv_cU_ScorePanel;
int libCOUI_gv_cU_ScoreTitleLabel;
int libCOUI_gv_cU_ScoreContinueButton;
int[4] libCOUI_gv_cU_ScoreCategoryTitleLabel;
int[4] libCOUI_gv_cU_ScoreCategoryValueLabel;
int libCOUI_gv_cU_ScoreTotalValueLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MinimapAllyViewPing;
bool libCOUI_gv_cU_MinimapAllyViewEnabled;

// Function Declarations
void libCOUI_gf_CU_AIChoiceDisplay (int lp_player);
void libCOUI_gf_CU_AIChoiceCreate ();
void libCOUI_gf_CU_AIChoiceInitFromData ();
void libCOUI_gf_CU_AIChoiceClose (int lp_player);
string libCOUI_gf_CU_AIChoiceSelectedPersonality (int lp_player);
void libCOUI_gf_CU_AIChoiceClosed (trigger t);
void libCOUI_gf_CU_RandomMutationSelectDisplay (int lp_player);
void libCOUI_gf_CU_RandomMutationSelectCreate ();
void libCOUI_gf_CU_RandomMutationSelectClose (int lp_player);
void libCOUI_gf_CU_CommanderDisplay ();
void libCOUI_gf_CU_CommanderCreate ();
void libCOUI_gf_CU_CommanderInitFromData ();
void libCOUI_gf_CU_CommanderFinalizeStates (int lp_player);
void libCOUI_gf_CU_CommanderUpdate (int lp_player);
void libCOUI_gf_CU_CommanderUpdatePrestigeLabels (int lp_player);
void libCOUI_gf_CU_CommanderClose (int lp_player);
void libCOUI_gf_CU_CommanderSelect (int lp_player, string lp_chosenCommander);
void libCOUI_gf_CU_CommanderPlayerReadySet (int lp_player, bool lp_ready);
bool libCOUI_gf_CU_CommanderPlayerReady (int lp_player);
void libCOUI_gf_CU_CommanderClosed (trigger t);
void libCOUI_gf_CU_MutatorDisplay (int lp_player);
void libCOUI_gf_CU_MutatorCreate ();
void libCOUI_gf_CU_MutatorInitFromData (int lp_player);
void libCOUI_gf_CU_MutatorClose (int lp_player);
void libCOUI_gf_CU_MutatorUpdateData ();
void libCOUI_gf_CU_MutatorUpdate (int lp_player);
void libCOUI_gf_CU_MasteryDisplay (int lp_player);
void libCOUI_gf_CU_MasteryCreate ();
void libCOUI_gf_CU_MasteryUpdateData (int lp_player);
void libCOUI_gf_CU_MasteryInitFromData (int lp_player);
void libCOUI_gf_CU_MasteryClose (int lp_player);
void libCOUI_gf_CU_MasteryUpdate (int lp_player);
void libCOUI_gf_CU_MasteryUpdatePoints (int lp_player);
void libCOUI_gf_CU_PrestigeHookup ();
void libCOUI_gf_CU_PrestigeUpdate (int lp_player);
void libCOUI_gf_CU_PrestigeSelect (int lp_player, int lp_index);
void libCOUI_gf_CU_CustomMutatorStartGame (trigger t);
void libCOUI_gf_CU_CustomMutatorCreate ();
void libCOUI_gf_CU_CustomMutatorClose ();
void libCOUI_gf_CU_CustomMutatorInitFromData ();
void libCOUI_gf_CU_CustomMutatorUpdateData ();
void libCOUI_gf_CU_CustomMutatorUpdate (int lp_player);
void libCOUI_gf_CU_CustomMutatorDisplay ();
text libCOUI_gf_CU_CustomMutatorTooltip (string lp_mutator);
void libCOUI_gf_CU_MutatorListCreate ();
void libCOUI_gf_CU_MutatorListInit ();
void libCOUI_gf_CU_MutatorListInitSmall ();
void libCOUI_gf_CU_MutatorListInitLarge ();
void libCOUI_gf_CU_MutatorListSetItem (int lp_index, string lp_mutator);
void libCOUI_gf_CU_MutatorListHideItem (int lp_index);
void libCOUI_gf_CU_MutatorListShowNotification (text lp_message);
void libCOUI_gf_CU_MutatorListShowNotificationToPlayer (text lp_message, int lp_player);
void libCOUI_gf_CU_EnemyBriefInit (string lp_aIPersonality);
void libCOUI_gf_CU_EnemyBriefShowHide (bool lp_showHide);
text libCOUI_gf_CU_PrestigeBriefFormatTooltip (int lp_player);
void libCOUI_gf_CU_PrestigeBriefInit (int lp_player, int lp_playerAlly);
void libCOUI_gf_CU_PrestigeBriefReveal (int lp_player, int lp_playerAlly);
void libCOUI_gf_DisplayArmyButton (bool lp_doDoNot);
int libCOUI_gf_CU_BB_HPBarCurrentWidth ();
text libCOUI_gf_CU_BB_HPBarFormatLabel ();
void libCOUI_gf_CU_BB_HPBarChange ();
void libCOUI_gf_DisplaySingularBossBarVoidCampaign (string lp_portrait, text lp_title, int lp_max);
void libCOUI_gf_SetSingularBossBarMaximumValueVoidCampaign (int lp_max, bool lp_refresh);
void libCOUI_gf_SetSingularBossBarCurrentValueVoidCampaign (int lp_current, bool lp_refresh);
void libCOUI_gf_SetSingularBossBarBossVoidCampaign (unit lp_boss, bool lp_refresh);
void libCOUI_gf_ShowHideSingularBossBarVoidCampaign (bool lp_showHide);
void libCOUI_gf_RefreshSingularBossBarVoidCampaign ();
void libCOUI_gf_SetSingularBossBarColor (color lp_color);
void libCOUI_gf_SetSingularBossBarTitleColor (color lp_color);
void libCOUI_gf_SetSingularBossBarStyle (int lp_style);
void libCOUI_gf_SetHeroPanelUnit (int lp_index, unit lp_heroUnit, int lp_player);
void libCOUI_gf_SetHeroPanelUnitOverride (int lp_index, unit lp_heroUnit, int lp_player);
void libCOUI_gf_CU_ShowHideHeroPanel (bool lp_showHide, int lp_index);
void libCOUI_gf_CU_CreateHeroPanel (int lp_index);
int libCOUI_gf_CU_HeroTypeFromUnitType (string lp_unitType);
string libCOUI_gf_CU_HeroIcon (int lp_heroType, unit lp_heroUnit);
void libCOUI_gf_CU_UpdateHeroPanel (int lp_index, int lp_player);
string libCOUI_gf_CU_PresetToHeroGameLink (int lp_championPreset);
bool libCOUI_gf_CU_ChampionHasShields (int lp_heroType);
bool libCOUI_gf_CU_ChampionHasShields2 (int lp_heroType);
void libCOUI_gf_EnableLowHealthWarning (unit lp_watchedUnit);
void libCOUI_gf_CU_HealthWatchCreate ();
void libCOUI_gf_CM_StopHeroLowHPSound ();
void libCOUI_gf_CU_UpdateObjectivePanel ();
void libCOUI_gf_DisplayProgressBar (text lp_title, int lp_min, int lp_max);
void libCOUI_gf_SetProgressBarTitle (text lp_title);
void libCOUI_gf_SetProgressBarValueRange (int lp_min, int lp_max);
void libCOUI_gf_SetProgressBarLabel (text lp_label);
void libCOUI_gf_SetProgressBarProgress (int lp_progress);
void libCOUI_gf_SetProgressBarColor (color lp_color);
void libCOUI_gf_ShowHideProgressBar (bool lp_showHide);
void libCOUI_gf_CU_UpdateProgressBar ();
color libCOUI_gf_GetProgressBarColorCampaign ();
void libCOUI_gf_DisplayProgressBarUnitOld (unit lp_unit, int lp_minValue, int lp_maxValue, text lp_labelText, int lp_offsetX, int lp_offsetY, string lp_attachment);
void libCOUI_gf_DestroyProgressBarUnitOld (unit lp_unit);
void libCOUI_gf_SetProgressBarProgressUnitOld (unit lp_unit, int lp_value);
void libCOUI_gf_MoveProgressBarUnitOld (unit lp_unit, int lp_offsetX, int lp_offsetY);
void libCOUI_gf_SetProgresBarTitleUnitOld (unit lp_unit, text lp_titleText);
void libCOUI_gf_SetProgressBarValueRangeUnitOld (unit lp_unit, int lp_minValue, int lp_maxValue);
void libCOUI_gf_ShowHideProgressBarUnitOld (unit lp_unit, bool lp_showHide);
void libCOUI_gf_CU_UpdateProgressBarUnitOld (unit lp_unit);
string libCOUI_gf_CU_ProgressBarUnit_DataNameOld (unit lp_unit, int lp_type);
string libCOUI_gf_CU_ProgressBarUnit_DialogNameOld (unit lp_unit, int lp_type);
void libCOUI_gf_DisplayUnitProgressBar (unit lp_unit, text lp_title, int lp_minValue, int lp_maxValue);
void libCOUI_gf_SetUnitProgressBarIsWideBar (unit lp_unit, bool lp_isWideBar);
void libCOUI_gf_SetUnitProgressBarProgress (unit lp_unit, int lp_value);
void libCOUI_gf_SetUnitProgresBarTitle (unit lp_unit, text lp_titleText);
void libCOUI_gf_SetUnitProgressBarProgress2 (unit lp_unit, int lp_value);
void libCOUI_gf_SetUnitProgressBarValueRange (unit lp_unit, int lp_minValue, int lp_maxValue);
void libCOUI_gf_ShowHideUnitProgressBar (unit lp_unit, bool lp_showHide);
void libCOUI_gf_ShowHideUnitProgressBar2 (unit lp_unit, bool lp_showHide);
void libCOUI_gf_CU_UpdateUnitProgressBar (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_Data (unit lp_unit, int lp_type);
string libCOUI_gf_CU_UnitProgressBar_Data2 (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_IsWideBarString (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_Dialog (unit lp_unit, int lp_type);
void libCOUI_gf_CU_GPInit (int lp_player);
void libCOUI_gf_CU_GPInitProtoss (int lp_player);
void libCOUI_gf_CU_GPInitAlarak (int lp_player);
void libCOUI_gf_CU_GPInitFenix (int lp_player);
void libCOUI_gf_LinkUnitEnergyToGlobalCasterButton (unit lp_unit, int lp_player, int lp_index);
void libCOUI_gf_CU_GPInitRaynor (int lp_player);
void libCOUI_gf_CU_GPInitHorner (int lp_player);
void libCOUI_gf_CU_GPInitSwann (int lp_player);
void libCOUI_gf_CU_GPInitAbathur (int lp_player);
void libCOUI_gf_CU_GPInitStukov (int lp_player);
void libCOUI_gf_CU_GPInitDehaka (int lp_player);
void libCOUI_gf_CU_GPInitNova (int lp_player);
void libCOUI_gf_CU_GPInitTychus (int lp_player);
void libCOUI_gf_CU_GPInitZeratul (int lp_player);
void libCOUI_gf_CU_GPInitStetmann (int lp_player);
void libCOUI_gf_CU_GPInitMengsk (int lp_player);
abilcmd libCOUI_gf_CU_GPActiveAbilityCommand (int lp_slot, int lp_player);
void libCOUI_gf_CU_GPSoAUpdateVitals (int lp_player);
void libCOUI_gf_CU_GPHighlightButton (int lp_slot, bool lp_on, int lp_player);
void libCOUI_gf_CU_GPCheckForEnergyHighlight (int lp_player);
void libCOUI_gf_CU_GPEnergyHighlight (bool lp_enable, int lp_player);
void libCOUI_gf_CU_GPSetUnit (unit lp_casterUnit, int lp_player);
void libCOUI_gf_CU_GPShowHide (bool lp_showHide, int lp_player, fixed lp_duration);
void libCOUI_gf_CU_GPVisibilitySet (bool lp_showHide, int lp_player, fixed lp_duration);
void libCOUI_gf_CU_GPVisibilityAutoUpdate (bool lp_showHide, int lp_player, fixed lp_duration);
void libCOUI_gf_PU_TargetingUI_EnterTargetingMode (bool lp_showHide, bool lp_instant, int lp_player);
void libCOUI_gf_CU_TargetingCreate (int lp_player);
void libCOUI_gf_CU_TargetingSetCharges (int lp_current, int lp_max, int lp_player);
void libCOUI_gf_CU_TargetingSetInstructionText (text lp_instructions, int lp_player);
int libCOUI_gf_CU_TargetingTriggeringPlayer ();
void libCOUI_gf_CU_TargetingCancel (trigger t);
void libCOUI_gf_TimerWindowCreate (timer lp_timer, text lp_title, bool lp_visible, bool lp_elapsed);
void libCOUI_gf_SetTimerForTimerWindowCampaign (int lp_window, timer lp_timer);
void libCOUI_gf_RepositionTimerWindow (int lp_timerWindow);
void libCOUI_gf_FlashTimerWindow (fixed lp_duration, bool lp_waitOption);
void libCOUI_gf_SetTimerWindowDangerThreshold (fixed lp_thresholdTime);
void libCOUI_gf_CU_AddTip (text lp_tipName, int lp_tipType, text lp_tipDescription, text lp_tipAlertText, string lp_tipIcon, playergroup lp_players);
void libCOUI_gf_PlayTychusPurchaseUpgradeSound (int lp_tychusPlayer);
void libCOUI_gf_CU_TychusSetBarUnit (unit lp_tychusBarUnit);
void libCOUI_gf_InitTychusSquadUI (int lp_tychusPlayer);
void libCOUI_gf_ModifyTychusMedivacCharges (int lp_chargesDelta);
void libCOUI_gf_UpdateTychusSquadAvailability ();
void libCOUI_gf_UpdateTychusSquadAvailabilityProgressBar (int lp_squadIndex, fixed lp_duration, int lp_tychusPlayer);
void libCOUI_gf_UpdateTychusSquadTargetFrame (string lp_squadInstance, unit lp_targetUnit);
void libCOUI_gf_SetTychusSquadMember (unit lp_unit, int lp_squadIndex, string lp_squadInstance);
int libCOUI_gf_GetNextTychusSquadIndex ();
string libCOUI_gf_GetTychusSquadCasterByIndex (int lp_squadIndex);
string libCOUI_gf_GetTychusSquadInstance (unit lp_unit);
void libCOUI_gf_CU_ZeratulArtifactHintTrack (int lp_player);
void libCOUI_gf_CU_SetStetelliteChargeMax (int lp_player);
void libCOUI_gf_CU_DrawStetelliteChargePips (int lp_player, int lp_currentCharges, int lp_maxCharges);
void libCOUI_gf_CreateWaveTimerWindow (timer lp_timer, text lp_title, string lp_icon);
void libCOUI_gf_DestroyWaveTimerWindow (int lp_window);
void libCOUI_gf_SetWaveTimerWindowIcon (int lp_window, string lp_icon, int lp_slot);
void libCOUI_gf_SetWaveTimerWindowIconTooltip (int lp_window, text lp_tooltip, int lp_slot);
void libCOUI_gf_CU_WaveTimerWindowCreateAll ();
int libCOUI_gf_LastCreatedWaveTimerWindow ();
int libCOUI_gf_CU_WaveTimerWindowIndexFromID (int lp_waveID);
string libCOUI_gf_CU_WaveTimerWindowIndexKey (int lp_waveID);
void libCOUI_gf_CU_FanfareCreate ();
void libCOUI_gf_CU_FanfareDisplay (int lp_result, int lp_player);
void libCOUI_gf_CU_FanfareTransmission ();
void libCOUI_gf_CU_ScoreCreate ();
void libCOUI_gf_CU_ScoreDisplay (int lp_player, int lp_result);
void libCOUI_gf_CU_ScoreUpdate (int lp_player, int lp_result);
void libCOUI_gf_CU_ScoreClose (int lp_player);
int libCOUI_gf_CU_ScoreTriggeringPlayer ();
void libCOUI_gf_CU_ScoreClosed (trigger t);
void libCOUI_gf_CU_MinimapAllyViewInit ();
void libCOUI_gf_ToggleAllyMinimapFrustrum (bool lp_enabled);
void libCOUI_gf_CU_HelpInit ();
void libCOUI_gf_CU_HelpSetupGeneralTips ();
void libCOUI_gf_CU_HelpSetupMutatorTips ();
color libCOUI_gf_ProgressColor (int lp_minValue, int lp_maxValue, int lp_progress, color lp_color1, color lp_color2, color lp_color3, int lp_steps);

// Trigger Declarations
trigger libCOUI_gt_CU_DebugTogSoA;
trigger libCOUI_gt_CU_DebugScreenmode;
trigger libCOUI_gt_CU_DebugCinMode;
trigger libCOUI_gt_CU_DebugAIChoice;
trigger libCOUI_gt_CU_DebugRandomMutationSelect;
trigger libCOUI_gt_CU_DebugMutatorSelect;
trigger libCOUI_gt_CU_DebugMovieCaptureModeToggle;
trigger libCOUI_gt_CU_DebugMovieCaptureModeSuppressCC;
trigger libCOUI_gt_CU_DebugMovieCaptureModeSupressUnits;
trigger libCOUI_gt_CU_AIChoiceOK;
trigger libCOUI_gt_CU_RandomMutationSelectOK;
trigger libCOUI_gt_CU_RandomMutationSelectSliderChange;
trigger libCOUI_gt_CU_CommanderClicked;
trigger libCOUI_gt_CU_CommanderReady;
trigger libCOUI_gt_CU_CommandeAllyLeft;
trigger libCOUI_gt_CU_CommanderLevelUpClicked;
trigger libCOUI_gt_CU_CommanderLevelDownClicked;
trigger libCOUI_gt_CU_CommanderMutatorsClicked;
trigger libCOUI_gt_CU_CommanderMasteryClicked;
trigger libCOUI_gt_CU_CommanderMasteryCheckboxToggle;
trigger libCOUI_gt_CU_CommanderMutatorChallengeSelected;
trigger libCOUI_gt_CU_MutatorAcceptClicked;
trigger libCOUI_gt_CU_MutatorCancelClicked;
trigger libCOUI_gt_CU_MasteryShiftTrackDown;
trigger libCOUI_gt_CU_MasteryShiftTrackUp;
trigger libCOUI_gt_CU_MasteryLevelUpPressed;
trigger libCOUI_gt_CU_MasteryLevelDownPressed;
trigger libCOUI_gt_CU_MasteryItemPlusPressed;
trigger libCOUI_gt_CU_MasteryItemMinusPressed;
trigger libCOUI_gt_CU_MasteryResetPressed;
trigger libCOUI_gt_CU_MasteryAcceptPressed;
trigger libCOUI_gt_CU_PrestigeButtonClicked;
trigger libCOUI_gt_CU_CustomMutatorChangePage;
trigger libCOUI_gt_CU_CustomMutatorToggleItem;
trigger libCOUI_gt_CU_CustomMutatorSuggestItem;
trigger libCOUI_gt_CU_CustomMutatorRemoveActiveItem;
trigger libCOUI_gt_CU_CustomMutatorStartGame;
trigger libCOUI_gt_CU_CustomMutatorOpenMenu;
trigger libCOUI_gt_CU_CustomMutatorLeaderLeaves;
trigger libCOUI_gt_CU_CustomMutatorLeaderLeavesDismiss;
trigger libCOUI_gt_CU_CustomMutatorSpeedChange;
trigger libCOUI_gt_CU_MutatorListNotificationExpired;
trigger libCOUI_gt_CU_FlashArmyButtonHelpTip;
trigger libCOUI_gt_CU_ArmyButtonUsed;
trigger libCOUI_gt_CS_ArmyButtonMissionInit;
trigger libCOUI_gt_CU_BB_BossHPChanged;
trigger libCOUI_gt_CU_HeroPanelUpdate;
trigger libCOUI_gt_CU_HeroUnitDamaged;
trigger libCOUI_gt_CU_HeroUnitVitalChange;
trigger libCOUI_gt_CU_HeroMouseHoverText;
trigger libCOUI_gt_CU_HealthWatchLifeCheck;
trigger libCOUI_gt_CU_HealthWatchUnitDies;
trigger libCOUI_gt_CU_HealthWatchFlash;
trigger libCOUI_gt_CU_HealthWatchStartSound;
trigger libCOUI_gt_CU_HealthWatchHeartLoop;
trigger libCOUI_gt_CU_HealthWatchBreathLoop;
trigger libCOUI_gt_CU_GPVitalChangesP1;
trigger libCOUI_gt_CU_GPVitalChangesP2;
trigger libCOUI_gt_CU_GPBirthFinished;
trigger libCOUI_gt_CU_GPDeathRemove2D;
trigger libCOUI_gt_CU_GPAlarakGemPress;
trigger libCOUI_gt_CU_TargetingCancelButtonUsed;
trigger libCOUI_gt_CU_TimerWindowFlash;
trigger libCOUI_gt_CU_TimerWindowMoveForBossBar;
trigger libCOUI_gt_CU_TimerWindowThresholdCrossed;
trigger libCOUI_gt_CU_TychusSquadSpawnCheat;
trigger libCOUI_gt_CU_TychusSquadMemberTrained;
trigger libCOUI_gt_CU_TychusSquadMemberReviveQueued;
trigger libCOUI_gt_CU_TychusSquadMemberReviveCancelled;
trigger libCOUI_gt_CU_TychusSquadMemberRevived;
trigger libCOUI_gt_CU_TychusSquadMemberDeath;
trigger libCOUI_gt_CU_TychusSquadStructureBuilt;
trigger libCOUI_gt_CU_TychusSquadBarBuilt;
trigger libCOUI_gt_CU_TychusSquadBarDies;
trigger libCOUI_gt_CU_TychusSquadBarUpdateProgress;
trigger libCOUI_gt_CU_TycusMedivacPlatformBuilt;
trigger libCOUI_gt_CU_TychusMedivacAbilityReady;
trigger libCOUI_gt_CU_TychusMedivacAbilityUnready;
trigger libCOUI_gt_CU_TychusEquipmentUpgraded;
trigger libCOUI_gt_CU_ZeratulProphecyReady;
trigger libCOUI_gt_CU_ZeratulProphecyNotReady;
trigger libCOUI_gt_CU_ZeratulArtifactCollected;
trigger libCOUI_gt_CU_ZeratulArtifactUpgraded;
trigger libCOUI_gt_CU_ZeratulArtifactUsed;
trigger libCOUI_gt_CU_StetelliteMaxChargesChanged;
trigger libCOUI_gt_CU_StetelliteChargesChanged;
trigger libCOUI_gt_CU_WaveTimerWindowUpdateTime;
trigger libCOUI_gt_CU_ScoreClosed;
trigger libCOUI_gt_CU_FanfareDismissed;
trigger libCOUI_gt_CU_MinimapAllyViewUpdateP1;
trigger libCOUI_gt_CU_MinimapAllyViewUpdateP2;
trigger libCOUI_gt_CU_MinimapAllyViewCamera;

// Library Initialization
void libCOUI_InitVariables ();

