include "TriggerLibs/NativeLib"
include "LibCOOC_h"

//--------------------------------------------------------------------------------------------------
// Library: Mission (COOP)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCOMI_ge_ObjectivePingType_Primary = 0;
const int libCOMI_ge_ObjectivePingType_Secondary = 1;
const int libCOMI_ge_ObjectivePingType_POI = 2;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_PlayerBase = 0;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_Objective = 1;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_BonusObjective = 2;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_Special = 3;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_ShakurasTempleMainRamp = 4;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_ShakurasTempleSideRamp = 5;
const int libCOMI_ge_CM_CoopAI_WaveAttackTargetType_ShakurasTempleAirRamp = 6;
const int libCOMI_ge_CoopAIAttackWaveBuckets__1Smallest = 0;
const int libCOMI_ge_CoopAIAttackWaveBuckets__2Smaller = 1;
const int libCOMI_ge_CoopAIAttackWaveBuckets__3Small = 2;
const int libCOMI_ge_CoopAIAttackWaveBuckets__4Medium = 3;
const int libCOMI_ge_CoopAIAttackWaveBuckets__5Large = 4;
const int libCOMI_ge_CoopAIAttackWaveBuckets__6Larger = 5;
const int libCOMI_ge_CoopAIAttackWaveBuckets__7Largest = 6;
const int libCOMI_ge_CoopAITechLevelBuckets__1Early = 0;
const int libCOMI_ge_CoopAITechLevelBuckets__2EarlyMid = 1;
const int libCOMI_ge_CoopAITechLevelBuckets__3Mid = 2;
const int libCOMI_ge_CoopAITechLevelBuckets__4LateMid = 3;
const int libCOMI_ge_CoopAITechLevelBuckets__5Late = 4;
const int libCOMI_ge_CoopAITechLevelBuckets_TechLevel06 = 5;
const int libCOMI_ge_CoopAITechLevelBuckets_TechLevel07 = 6;
const int libCOMI_ge_CM_CoopAI_AttackForce_SetUnitType_Type_Relative = 0;
const int libCOMI_ge_CM_CoopAI_AttackForce_SetUnitType_Type_Absolute = 1;
const int libCOMI_ge_UnitBuffMultiplierMethod_Exponential = 0;
const int libCOMI_ge_UnitBuffMultiplierMethod_Linear = 1;
const int libCOMI_ge_CM_ZeratulProphecyEventUnits_ZeratulUnit = 0;
const int libCOMI_ge_CM_ZeratulProphecyEventUnits_ArtifactUnit = 1;
const int libCOMI_ge_CM_SoATargetingPhaseType_None = 0;
const int libCOMI_ge_CM_SoATargetingPhaseType_Location = 1;
const int libCOMI_ge_CM_SoATargetingPhaseType_Direction = 2;
const int libCOMI_ge_CampaignMissionGameResultType_None = 0;
const int libCOMI_ge_CampaignMissionGameResultType_Victory = 1;
const int libCOMI_ge_CampaignMissionGameResultType_Defeat = 2;
const int libCOMI_ge_ObjectiveTimerThresholds_Yellow = 0;
const int libCOMI_ge_ObjectiveTimerThresholds_Red = 1;
string libCOMI_ge_ObjectiveTimerThresholds_Ident (int lp_val);
const int libCOMI_ge_MissionTransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libCOMI_ge_MissionTransmissionPortraitOptioins_DontShowPortrait = 2;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_PlayCueSound = 1;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libCOMI_ge_MissionTransmissionOptions_ChatBubble = 0;
const int libCOMI_ge_DropPodRace_Terran = 0;
const int libCOMI_ge_DropPodRace_Zerg = 1;
const int libCOMI_ge_CacheResourceType_CustomResource = 0;
const int libCOMI_ge_CacheResourceType_Mineral = 1;
const int libCOMI_ge_CacheResourceType_Vespene = 2;
const int libCOMI_ge_ExpansionRockType_TownHallRock = 0;
const int libCOMI_ge_ExpansionRockType_GeyserRock = 1;
const int libCOMI_ge_SleepWakeUpExcludeOption_Always = 0;
const int libCOMI_ge_SleepWakeUpExcludeOption_RespectExclusions = 1;
const int libCOMI_ge_CM_ChatBarMode_CM_ChatBarNormal = 0;
const int libCOMI_ge_CM_ChatBarMode_CM_ChatBarMutator = 1;
const int libCOMI_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libCOMI_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libCOMI_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libCOMI_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libCOMI_ge_CampaignMessageType_MissionVictory = 0;
const int libCOMI_ge_CampaignMessageType_MissionFailed = 1;
const int libCOMI_ge_CampaignMessageType_Hint = 2;
const int libCOMI_ge_CampaignMessageType_SimpleHint = 3;
const int libCOMI_ge_CampaignMessageType_Secret = 4;
const int libCOMI_ge_CampaignMessageType_Warning = 5;
const int libCOMI_ge_CampaignMessageType_NewUnitAcquired = 6;
const int libCOMI_ge_CampaignMessageType_NewUnitAvailable = 7;
const int libCOMI_ge_CampaignMessageType_NewTechAvailable = 8;
const int libCOMI_ge_CampaignMessageType_NewUnitAvailable2 = 9;
const int libCOMI_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libCOMI_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libCOMI_ge_CampaginReticleType_ZergMainObjective = 0;
const int libCOMI_ge_CampaginReticleType_ZergBonusObjective = 1;
const int libCOMI_ge_CampaginReticleType_ZergEnemy = 2;
const int libCOMI_ge_CampaginReticleType_TerranMainObjective = 3;
const int libCOMI_ge_CampaginReticleType_TerranBonusObjective = 4;
const int libCOMI_ge_CampaginReticleType_TerranEnemy = 5;
const int libCOMI_ge_CampaginReticleType_ProtossMainObjective = 6;
const int libCOMI_ge_CampaginReticleType_ProtossBonusObjective = 7;
const int libCOMI_ge_CampaginReticleType_ProtossEnemy = 8;
const int libCOMI_ge_CampaginReticleSize_Large = 0;
const int libCOMI_ge_CampaginReticleSize_Medium = 1;
const int libCOMI_ge_CampaginReticleSize_Small = 2;

// Constants
const string libCOMI_gv_pMC_SoundDataTableIdentifier = "CM_SoundDataTable_";
const int libCOMI_gv_cMC_CoopAI_HighestPlayerIndex = 8;
const int libCOMI_gv_cMC_CoopAI_MaxWaveCount = 100;
const bool libCOMI_gv_cMC_CoopAI_AttackForce_DataTableScope = false;
const int libCOMI_gv_cMC_CoopAI_AttackForce_NotInDataTable = -1;
const int libCOMI_gv_cMC_CoopAI_MaxNumUpgrades = 100;
const int libCOMI_gv_cMC_CoopAI_MaxPingCount = 12;
const fixed libCOMI_gv_cM_CoopAI_PingCombineDist = 20.0;
const string libCOMI_gv_warpGateTrainAbility = "WarpGateTrain";
const string libCOMI_gv_supplicantWarpTrainActualAbility = "WarpGateTrainSupplicantTrue";
const string libCOMI_gv_supplicantWarpTrainDummyUnitLink = "AlarakSupplicantWarpTrainDummy";
const string libCOMI_gv_supplicantWarpTrainCreatorUnitLink = "AlarakSupplicantWarpTrainCreator";
const string libCOMI_gv_supplicantWarpTrainActualUnitLink = "Supplicant";
const string libCOMI_gv_supplicantWarpTrainWarpPowerCheckBehaviorLink = "SupplicantWarpPowerCheck";
const string libCOMI_gv_supplicantWarpTrainWarpRefundBehaviorLink = "SupplicantCancelCheck";
const string libCOMI_gv_supplicantWarpTrainCreatorFinderBehaviorLink = "SupplicantCreatorCheck";
const string libCOMI_gv_supplicantWarpTrainCreatorWarpGateFinderBehaviorLink = "SupplicantCreatorWarpGateCheck";
const string libCOMI_gv_supplicantWarpTrainActualUnitBirthEventLink = "SupplicantBirth";
const string libCOMI_gv_supplicantWarpTrainActualUnitCancelEventLink = "SuplicantWarpCancel";
const string libCOMI_gv_cM_SupplicantWarpGateMarkerPrefix = "CM_SupplicantCreatorWarpGate";
const string libCOMI_gv_StukovInfestedWraithSnareBehavior = "SIWraithSnare";
const fixed libCOMI_gv_StukovInfestedWraithSnareBehavior2 = 1.0;
const fixed libCOMI_gv_StukovInfestedWraithSnareBehavior3 = 1.0;
const string libCOMI_gv_cM_CargoDeathNotifyEffect = "CoopCargoDeathDummy";
const string libCOMI_gv_cM_CargoDeathKillEffect = "CoopCargoDeathKill";
const string libCOMI_gv_cM_MasteryVorazunDarkPylonRadiusPowerSourceNoMasteryLink = "DarkPylonPowerSource";
const string libCOMI_gv_cM_MasteryVorazunDarkPylonRadiusPowerSourceBaseString = "DarkPylonPowerSourceMasteryVorazunDarkPylonRadius";
const string libCOMI_gv_cM_MasteryVorazunDarkPylonRadiusUpgradeLink = "MasteryVorazunDarkPylonRadius";
const string libCOMI_gv_cM_MasteryVorazunDarkPylonRadiusActorLink = "DarkPylonCloakingField";
const string libCOMI_gv_cM_AlarakLightningStrikes_Behavior = "AlarakLightningStrikes";
const string libCOMI_gv_cM_Alarak_SoulAbsorption_ImpactEffect = "AlarakSoulAbsorptionImpactDummy";
const string libCOMI_gv_cM_Alarak_SoulAbsorption_LaunchEffect = "AlarakSoulAbsorptionLaunchDummy";
const string libCOMI_gv_cM_Alarak_SoulAbsorption_ScoreTrackerEffect = "SoulAbsorptionMU";
const fixed libCOMI_gv_cM_Alarak_SoulAbsorption_FoodFactor = 20.0;
const fixed libCOMI_gv_cM_Alarak_EmpowerBaseDmgInc = 1.0;
const fixed libCOMI_gv_cM_Alarak_EmpowerBaseSpellDmgeIncPercent = 0.05;
const fixed libCOMI_gv_cM_Alarak_EmpowerDiminishingReturnsMultiplier = 0.5;
const fixed libCOMI_gv_cM_Alarak_EmpowerDiminishingReturnsSupplyThreshold = 100.0;
const fixed libCOMI_gv_cM_Alarak_EmpowerMaxPower = 200.0;
const string libCOMI_gv_cM_Alarak_EmpowerAuraTarget = "AlarakEmpowerTarget";
const string libCOMI_gv_cM_Alarak_EmpowerWorshiperTarget = "WorshipAlarak";
const string libCOMI_gv_cM_Alarak_EmpowerBehaviorCaster = "AlarakEmpowerDisplay";
const string libCOMI_gv_cM_Alarak_EmpowerAuraTargetPlayerFinalEffect = "AlarakEmpowerTargetPlayerFinal";
const string libCOMI_gv_cM_Alarak_EmpowerAuraTargetPlayerStartEffect = "AlarakEmpowerTargetPlayerStart";
const string libCOMI_gv_cM_DehakaMutaliskReviveCooldownBehavior = "DehakaMutaliskTimerBehavior";
const string libCOMI_gv_cM_DehakaMutaliskReviveCooldownIndicator = "PrimalReconstitutionCooldownIndicator";
const string libCOMI_gv_c_DehakaConsumeCooldownLink = "Abil/DehakaConsume";
const string libCOMI_gv_c_DehakaConsumeAbil = "DehakaConsume";
const string libCOMI_gv_c_DehakaConsumeEffect = "DehakaConsumeImpactEatDamage";
const string libCOMI_gv_c_DehakaConsumeEffectTriggerEffect = "DehakaConsumeImpactEatDamageReal";
const string libCOMI_gv_c_DehakaConsumeBehaviorDisable = "DehakaConsumeDisableCommandCard";
const int libCOMI_gv_c_DehakaConsumeEffectHeroicEssenceAmount = 20;
const string libCOMI_gv_c_DehakaConsumeEffectHeroicLink = "DehakaConsumeEffectHeroic";
const string libCOMI_gv_c_DehakaConsumeEffectUserType = "CoopAbilityDehakaConsumeEffects";
const string libCOMI_gv_c_DehakaConsumeEffectPsiExplodeWeaponDmgLink = "DehakaConsumeEffectPsionicDamage";
const int libCOMI_gv_cM_DehakaEssenceIndex = 17;
const int libCOMI_gv_cMC_Fenix_HeroIndex = 1;
const fixed libCOMI_gv_cM_Fenix_SuitSwapCooldown = 15.0;
const fixed libCOMI_gv_cM_Fenix_OfflineVitalRegenMultiplier = 1.2;
const int libCOMI_gv_cMC_Fenix_ChampionCount = 6;
const string libCOMI_gv_cM_HornerStatUserType = "TheHornersStat";
const string libCOMI_gv_cM_HornerStatBonus = "MasteryHornerMSOBonusDisplayDummy";
const string libCOMI_gv_cM_HornerFactionUserType = "TheHornersFactions";
const string libCOMI_gv_cM_TalentKerriganMalignantCreepUpgrade = "KerriganCreepBonusesCoop";
const int libCOMI_gv_cMC_NovaUnitName_CountMax = 143;
const string libCOMI_gv_cM_Tychus_UserTypeHeroList = "CoopTechTychusSquad";
const string libCOMI_gv_cM_Tychus_OdinSummonEffect_Caller = "TychusCalldownOdinTargetedDummy";
const string libCOMI_gv_cM_Tychus_OdinSummonEffect_Called = "TychusCalldownOdinCreatePrecursor";
const string libCOMI_gv_cM_Tychus_OdinSummonEffect_Created = "TychusCalldownOdinApplyTimedLife";
const fixed libCOMI_gv_c_TychusSpecialistTrainingAuraCooldownFactor = 20.0;
const string libCOMI_gv_cM_Tychus_UserTypeHeroAbilTech = "CoopTechTychusSquad";
const fixed libCOMI_gv_cM_Tychus_InitialTrainTime = 180.0;
const fixed libCOMI_gv_cM_Tychus_RechargeTrainTime = 240.0;
const fixed libCOMI_gv_cM_Tychus_RechargeTrainTimeMasteryReducePerLevel = 2.0;
const int libCOMI_gv_cM_ZeratulProphecyArtifactFinalUniqueNumber = 3;
const int libCOMI_gv_cMC_SOATARGETCOUNTMAX = 5;
const fixed libCOMI_gv_campaignObjectiveDelay = 2.0;
const fixed libCOMI_gv_campaignHintDelay = 2.0;
const fixed libCOMI_gv_campaignSecretDelay = 5.0;
const fixed libCOMI_gv_campaignAchievementDelay = 2.0;
const fixed libCOMI_gv_campaignVictoryDelay = 1.0;
const string libCOMI_gv_cM_HeroReviveHealEffect = "KerriganReviveHeal";
const int libCOMI_gv_cMC_FenixVOTransmissionProbablity = 50;
const fixed libCOMI_gv_cMC_FenixVOTransmissionTimerDelay = 60.0;
const fixed libCOMI_gv_cMC_DehakaVOLearnReminderDelay = 60.0;
const fixed libCOMI_gv_cMC_HornerVOBomberUseDelay = 15.0;
const fixed libCOMI_gv_cMC_HornerVOBomberReminderDelay = 300.0;
const fixed libCOMI_gv_cMC_TychusVOTransportReminderDelay = 900.0;
const fixed libCOMI_gv_cMC_TychusVOTransportFlairCooldown = 30.0;
const fixed libCOMI_gv_cMC_TychusVOOutlawReviveReminderDelay = 120.0;
const fixed libCOMI_gv_cMC_TychusVOOutlawRecruitReminderDelay = 60.0;
const int libCOMI_gv_cC_CoopPresetTeamsCount = 16;

// Structures
struct libCOMI_gs_CM_CoopAI_CachedUpgradeRecord {
    bool lv_initialized;
    int lv_cachedDifficulty;
    int lv_numUpgrades;
    string[libCOMI_gv_cMC_CoopAI_MaxNumUpgrades + 1] lv_upgrade;
    fixed[libCOMI_gv_cMC_CoopAI_MaxNumUpgrades + 1] lv_time;
};

// Variable Declarations
int libCOMI_gv_cM_DebugAbathurBiomassCollected;
int libCOMI_gv_cM_DebugAbathurBiomassLost;
int libCOMI_gv_cM_DebugAbathurBiomassDroppedNormal;
int libCOMI_gv_cM_DebugAbathurBiomassDroppedRefund;
bool libCOMI_gv_cM_DebugAITargetSpawners;
int libCOMI_gv_cM_MissionAutoSaveIndex;
bool libCOMI_gv_cM_MissionAutoSaveDone;
int libCOMI_gv_cM_SoundDataTableIndex;
bool libCOMI_gv_cM_InCinematic;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_ScreenMode;
unit[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cMC_CoopAI_PrimaryNydusNetwork;
int[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_Enemy;
fixed[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_NextStockUpdate;
timer libCOMI_gv_cM_CoopAIPlayer_NextAttackWave;
int libCOMI_gv_cM_CoopAIPlayer_AttackWaveHighWaterMark;
wave[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1][libCOMI_gv_cMC_CoopAI_MaxWaveCount + 1] libCOMI_gv_cM_CoopAIPlayer_AttackWaves;
string[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_Commander;
string libCOMI_gv_cM_CoopAIPlayer_CommanderShared;
int[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1][libCOMI_gv_cMC_CoopAI_MaxWaveCount + 1] libCOMI_gv_cM_CoopAIPlayer_WaveProps_Retreat;
int[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_WaveProps_Count;
bool[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_IsAlive;
wavetarget[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_TargetOfAttackWaves;
fixed[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_WaveResourceDeficit;
string libCOMI_gv_cM_CoopAI_MissionType;
unitgroup libCOMI_gv_cM_CoopAI_AttackForce_Transports;
int libCOMI_gv_cM_CoopAI_LastAIThinker;
int libCOMI_gv_cM_CoopAI_NextAIAttacker;
bool libCOMI_gv_cM_CoopAI_PauseAttackWaves;
bool[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAI_SendAttackWave;
bool libCOMI_gv_cM_CoopAI_AIDetection_Build;
bool libCOMI_gv_cM_CoopAI_AIDetection_AttackWaveAddDetection;
unitgroup libCOMI_gv_cM_CoopAI_AIDetection_AttackWave;
playergroup libCOMI_gv_cM_CoopAI_Players;
libCOMI_gs_CM_CoopAI_CachedUpgradeRecord[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAI_CachedUpgradeData;
unitgroup[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_AttackGroup;
point[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1] libCOMI_gv_cM_CoopAIPlayer_InstantAttackGroupSpawn;
bool libCOMI_gv_cM_CoopAI_WavePingShowAll;
bool[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1][libCOMI_gv_cMC_CoopAI_MaxWaveCount + 1] libCOMI_gv_cM_CoopAI_WaveShowPing;
bool[libCOMI_gv_cMC_CoopAI_HighestPlayerIndex + 1][libCOMI_gv_cMC_CoopAI_MaxWaveCount + 1] libCOMI_gv_cM_CoopAI_DontPingWaves;
unitgroup libCOMI_gv_cM_CoopAI_DontPingUnits;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_APlayer;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_AWave;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_BPlayer;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_BWave;
unitgroup[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_PingGroups;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_PingGroupPing;
playergroup libCOMI_gv_cM_CoopAI_DontPingPlayers;
bool libCOMI_gv_showAIDebugging;
string libCOMI_gv_catalogAdditiveBonusPrefix;
abilcmd libCOMI_gv_candyChargeCmd;
fixed libCOMI_gv_supplicantWarpTrainActualUnitCost;
abilcmd libCOMI_gv_supplicantWarpTrainActualCommand;
unitgroup libCOMI_gv_cM_PrestigeRaynor_AirUnits;
int libCOMI_gv_cM_Abathur_Enemy_Death_Create_Locusts_Random_Modifier;
abilcmd libCOMI_gv_cM_AlarakLightningStrikes_SacrificeCmd;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Alarak_EmpowerSlaves;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Alarak_EmpowerWorshipers;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaReviveFootprint;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaReviveEatUsed;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaReviveEatTextTag;
fixed libCOMI_gv_c_DehakaConsumeLifeCooldownFactor;
unitfilter libCOMI_gv_c_DehakaConsumeCooldownFilter;
abilcmd libCOMI_gv_dataDehakaLearnAbilCmdLink;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaBossBuildingBuilt_Glevig;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaBossBuildingBuilt_Murvar;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaBossBuildingBuilt_Dakrun;
fixed libCOMI_gv_cM_DehakaEatReviveTimerAdjustment;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_dehakaGlevigFirebreathAutocast;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_dehakaMurvarPukeAutocast;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_dehakaMurvarSpawnCreepersAutocast;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaLevelsMax;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_DehakaVeterencyBehavior;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Dehaka_CurrentLevel;
int[21] libCOMI_gv_cM_DehakaNextLevelValueArray;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Dehaka_TotalEssence;
string libCOMI_gv_cM_Dehaka_EssenceAttribute;
bool libCOMI_gv_cM_DehakaLevelMaxMusicPlayed;
int libCOMI_gv_cM_DebugDehakaEssenceLost;
int libCOMI_gv_cM_DebugDehakaEssenceDroppedRefund;
int libCOMI_gv_cM_DebugDehakaEssenceDroppedNormal;
int libCOMI_gv_cM_DebugDehakaEssenceCollected;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_fenixAchievementCarrierAmount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_fenixAchievementCarrierResearched;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_HeroGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_DummyGroup;
string[4] libCOMI_gv_cM_Fenix_AbilCmdArray;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ActiveHero;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ActiveHero_Abil;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ActiveHero_Slot;
unit[4][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_Suits;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_OfflineHealthRegen;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_OfflineShieldRegen;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_OfflineEnergyRegen;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_KillCount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_KilledSelf;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_SuicideLife;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_SuicideShield;
unitgroup libCOMI_gv_cM_Fenix_RalliedGroup;
fixed[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionRespawnTimer;
int[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionKills;
unit[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionUnit;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionUnitType;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionUnitReplaceType;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionStructure;
bool[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionAvailable;
unitgroup[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionVolunteerUnitGroup;
abilcmd[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionMorphAbil;
point[libCOMI_gv_cMC_Fenix_ChampionCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Fenix_ChampionDeathPosition;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionNetworkUpgrades;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionShellCountEffects;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionNetworkMaxCountDummy;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionNetworkStacksPerSupplyDummy;
string[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionAvengingProtocolBehaviors;
int[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionAvengingProtocolBuffStacks;
int[libCOMI_gv_cMC_Fenix_ChampionCount + 1] libCOMI_gv_cM_Fenix_ChampionAvengingProtocolBuffStackMaxCount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_fenixWhirlwindAutocast;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_fenixShieldCapacitorAutocast;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_HornerAirFleet_Cost;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_miraFactionSupply;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_mattFactionSupply;
unit libCOMI_gv_cM_Horner_TechLab;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Horner_BomberPlatforms;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Horner_BomberPlatforms_Ready;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Horner_BomberPlatforms_TotalCount;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Horner_BomberPlatforms_ReadyCount;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_kerriganPsiStrikeFacing;
fixed libCOMI_gv_kerriganPsiStrikeEnergyCost;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_LaserDrillUnit;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_LaserDrillUnitGroup;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_LaserDrillDistance;
region[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillSoundRegion;
actor[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillSoundRegionActor;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillSoundRegionCreated;
region[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillBFGSoundRegion;
actor[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillBFGSoundRegionActor;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillBFGSoundRegionCreated;
region[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillNukeSoundRegion;
actor[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillNukeSoundRegionActor;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_laserDrillNukeSoundRegionCreated;
bool libCOMI_gv_cM_Mengsk_CheckRoyalGuardSupply;
unitgroup libCOMI_gv_cM_Mengsk_XPHungryUnits;
unitgroup libCOMI_gv_cM_Mengsk_VeteranUnits;
unitgroup libCOMI_gv_cM_Mengsk_PropagandaUnits;
unitgroup libCOMI_gv_cM_Mengsk_ReturningWorkers;
unitgroup libCOMI_gv_cM_Mengsk_WeaponPickups;
unitgroup libCOMI_gv_cM_Mengsk_WeaponPickerUppers;
fixed libCOMI_gv_cM_Mengsk_ArtilleryExperimentalStrikeRange;
fixed libCOMI_gv_cM_Mengsk_EnergyRegenRoyalGuard;
fixed libCOMI_gv_cM_Mengsk_EnergyRegenTrooper;
int libCOMI_gv_cM_NovaUnitName_CountCurrentPosition;
text[libCOMI_gv_cMC_NovaUnitName_CountMax + 1] libCOMI_gv_cM_NovaUnitName_Text;
int libCOMI_gv_cM_NovaUnitName_CountStep;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinTransportUnit;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinTransportUnitGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinGroundUnitsTransportGroupAir;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinGroundUnitsTransportGroupGround;
point[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinTranportLoadPoint;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_NovaGriffinBombingRunCost;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_NovaPsiStrikeFacing;
fixed libCOMI_gv_NovaPsiStrikeEnergyCost;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_novaBarrackBuilt;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_novaFactoryBuilt;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_novaStarportBuilt;
int libCOMI_gv_cM_Stetmann_StetelliteChargesLevel;
bool libCOMI_gv_cM_Stetmann_StetzoneChanged;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_InfestedStructure;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_HordeGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_HordeCurrentWave;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_HordeCount;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_RallyTarget;
point[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_RallyPoint;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_RallyBeaconUnit;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Stukov_BunkerGroup;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicTransportUnit;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicTransportUnitGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicGroundUnitsTransportGroupAir;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicGroundUnitsTransportGroupGround;
point[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicTranportLoadPoint;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_TychusMedicTranportSendViaTopBar;
int libCOMI_gv_cM_Tychus_MaxHeroCount;
string[4] libCOMI_gv_c_CM_Tychus_UserTypeHeroRequirmentArray;
int libCOMI_gv_tychusHeroMaxCharges;
unit libCOMI_gv_cM_Tychus_FirebatOilCaster;
int libCOMI_gv_cM_Tychus_UltimatesPurchased;
unitgroup libCOMI_gv_cM_Zeratul_DevolvedUnits;
unit libCOMI_gv_cM_ZeratulVoidSeeker;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Zeratul_HeroStructure;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Zeratul_HeroStructureUnitGroup;
unit libCOMI_gv_cM_ZeratulProphecyCamera;
fixed libCOMI_gv_cM_ZeratulArtifact_1_Hint_1_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_1_Hint_2_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_1_Hint_3_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_2_Hint_1_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_2_Hint_2_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_2_Hint_3_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_3_Hint_1_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_3_Hint_2_Timing;
fixed libCOMI_gv_cM_ZeratulArtifact_3_Hint_3_Timing;
unit libCOMI_gv_cM_ZeratulProphecyHintUnit;
unit libCOMI_gv_cM_ZeratulProphecyArtifact;
int libCOMI_gv_cM_ZeratulProphecyArtifactNumber;
bool libCOMI_gv_cM_ZeratulProphecyArtifactDebug;
region libCOMI_gv_cM_ZeratulProphecyArtifactBadRegion;
unitgroup[17] libCOMI_gv_cM_ZeratulTopBarRallyUnits;
unitgroup[17] libCOMI_gv_cM_ZeratulTopBarRallyRedirectUnits;
point[17] libCOMI_gv_cM_ZeratulTopBarRallyPoint;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_Zeratul_VoidRift;
int libCOMI_gv_cM_ZeratulPlayer;
unitgroup libCOMI_gv_cM_Zeratul_RalliedGroup;
bool libCOMI_gv_cM_SoAExitInstantly;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingChargesSpent;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingChargesTotal;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoACasterUnit;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoACasterGroup;
int libCOMI_gv_cM_SoATargetingUsageCount;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingPhase;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingTransitioning;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnrefundableStageEntered;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingAlreadyCanceled;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingModel;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnitType;
unit[libCOMI_gv_cMC_SOATARGETCOUNTMAX + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnit;
actor[libCOMI_gv_cMC_SOATARGETCOUNTMAX + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingActors;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingBehavior;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingActivateAbility;
abilcmd[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingExecuteCommand;
text[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingInstructionsPrimary;
text[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingInstructionsSecondary;
string[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingCooldown;
order[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingOrder;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingDirectionGroup;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingCycling;
timer libCOMI_gv_cM_SoATimeFreezeTimer;
timer libCOMI_gv_cM_SoASuperChronoTimer;
int libCOMI_gv_cM_GameOverResult;
bool libCOMI_gv_cM_MissionVictoryActionQueyeEmpty;
int libCOMI_gv_cM_MissionCompleteTime;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_EndMissionResult;
int libCOMI_gv_cM_CurrentSpawn;
int libCOMI_gv_cM_MaxSpawn;
unitgroup libCOMI_gv_cM_CreepGroup;
timer libCOMI_gv_cM_CreepTimer;
int libCOMI_gv_cM_SpawnTime;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_PrimaryTownHall;
int libCOMI_gv_cM_ZerglingRespawnCount;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_HeroUnit;
unitgroup libCOMI_gv_cM_HeroUnitsOfAllCommanders;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_HeroReviver;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_HeroDeathCount;
point[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_HeroReviveTargetLocation;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GlobalCasterUnit;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GlobalCasterUnitSecondary;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GlobalCasterUnitGroup;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GlobalCasterUnitGroupSecondary;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GlobalCasterLastKnownEnergy;
int libCOMI_gv_cM_RevealerCount;
bool libCOMI_gv_cM_RevealersEnabled;
playergroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SharedVisionPlayers;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GPRemindersOn;
int[3] libCOMI_gv_playerColor;
timer libCOMI_gv_cM_CombatTimer;
int libCOMI_gv_cM_VOGroupGender;
bool libCOMI_gv_cM_HeroReviveQueue_ActiveListeners;
bool[4][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_FenixVOTransmissionFirstPlay;
timer libCOMI_gv_cM_FenixVOTransmissionTimer;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_FenixVOTalandarRecalled;
timer libCOMI_gv_cM_DehakaVOLearnReminderTimer;
int libCOMI_gv_cM_DehakaVODehakaPlayer;
bool libCOMI_gv_cM_DehakaVOWurmStructureAlive;
int libCOMI_gv_cM_HornerVOHornerPlayer;
timer libCOMI_gv_cM_HornerVOBomberReminderTimer;
timer libCOMI_gv_cM_HornerVOBomberUseTimer;
bool libCOMI_gv_cM_HornerVOBomberBuilt;
bool libCOMI_gv_cM_HornerVOFleetOffCooldown;
int libCOMI_gv_cM_TychusVOTychusPlayer;
timer libCOMI_gv_cM_TychusVOTransportReminderTimer;
timer libCOMI_gv_cM_TychusVOTransportFlairCooldownTimer;
timer libCOMI_gv_cM_TychusVOOutlawReviveReminderTimer;
timer libCOMI_gv_cM_TychusVOOutlawRecruitReminderTimer;
timer libCOMI_gv_cM_ArtifactTransmission_SelectAbilityReminder;
fixed libCOMI_gv_cMC_ZeratulVOTransmissionProphacyCastDelay;
bool libCOMI_gv_cM_AbilityTransmission_StetelliteReminder_First;
bool libCOMI_gv_cM_MengskSnarkExecuted;
bool libCOMI_gv_cM_MengskEliteBuilt;
bool libCOMI_gv_cM_MengskArtilleryBuilt;
bool libCOMI_gv_cM_MengskTrooperEquipped;
timer libCOMI_gv_cM_MengskTransmissionTimerDirtyBomb;
timer libCOMI_gv_cM_MengskTransmissionTimerForcedConscription;
int libCOMI_gv_cM_VOResourceReqSendButton;
string libCOMI_gv_cM_TransmissionCurrentType;
int libCOMI_gv_cM_TransmissionSource;
int libCOMI_gv_cM_TransmissionCount;
playergroup libCOMI_gv_cM_TransmissionPrimaryPlayers;
playergroup libCOMI_gv_cM_TransmissionSecondaryPlayers;
int libCOMI_gv_cM_SendTransmissionCampaignIndex;
int libCOMI_gv_cM_SendTransmissionCampaignPortrait;
unit libCOMI_gv_cM_SendTransmissionCampaignSpeaker;
trigger libCOMI_gv_cM_SendTransmissionCampaignTrigger;
int libCOMI_gv_cM_SendTransmissionCampaignPlayingTick;
bool libCOMI_gv_cM_SendTransmissionCampaignChatBubbleOn;
unitgroup[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_VisionShareUnits;
bool libCOMI_gv_cM_VisionShareEnabled;
point libCOMI_gv_cM_DropPod_TP_Location;
unitgroup libCOMI_gv_cM_DropPod_TP_Units;
int libCOMI_gv_cM_DropPod_TP_Player;
unit libCOMI_gv_cM_DropPod_TP_ZergBuilding;
actor libCOMI_gv_cM_UpgradeReticle;
int libCOMI_gv_cM_UpgradeTextTag;
unit libCOMI_gv_cM_UpgradeUnit;
int libCOMI_gv_cM_DrillTextTagInitial;
int libCOMI_gv_cM_DrillTextTagCreated;
int libCOMI_gv_cM_DrillTextTagDamaged;
int libCOMI_gv_cM_CybCoreTextTag;
int libCOMI_gv_cM_SolarForgeTextTag;
int libCOMI_gv_cM_FullScreenUpperContainer;
trigger libCOMI_gv_cM_CampaignMissionStartTrigger;
bool libCOMI_gv_cM_CampaignMissionPerfTest;
playergroup[libCOMI_gv_cC_CoopPresetTeamsCount + 1] libCOMI_gv_coopPresetTeams;

// Function Declarations
int libCOMI_gf_PingTypeFromObjectiveType (bool lp_objectiveType);
void libCOMI_gf_AttentionGrabbingObjectivePing (point lp_pingLocation);
void libCOMI_gf_CreateObjectivePing (bool lp_objectiveType, point lp_position, text lp_tooltip);
void libCOMI_gf_CreateObjectivePingAC (int lp_objectiveType, point lp_position, text lp_tooltip);
void libCOMI_gf_PingMinimapCampaign (playergroup lp_players, point lp_pos, fixed lp_dur, color lp_color);
void libCOMI_gf_DestroyPingCoop (int lp_ping);
void libCOMI_gf_CreatePingFacingAngleCoop (playergroup lp_players, point lp_position, fixed lp_angle, string lp_model, color lp_color, fixed lp_duration);
void libCOMI_gf_CreatePingWithPointFacingCoop (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration, int lp_playerId);
void libCOMI_gf_CreatePingCoop (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration);
void libCOMI_gf_ShowHidePingCoop (int lp_ping, bool lp_visible);
void libCOMI_gf_CM_MissionAutoSave (text lp_description);
void libCOMI_gf_CreateMissionAutosavePoint (text lp_description);
bool libCOMI_gf_PlayerInCinematicModeCampaign ();
string libCOMI_gf_CM_SoundDataTableName ();
void libCOMI_gf_PlaySoundCinematic (soundlink lp_soundLink, playergroup lp_players, fixed lp_volume, fixed lp_offset);
void libCOMI_gf_StopCinematicSounds ();
void libCOMI_gf_SetScreenModeCoop (int lp_mode, fixed lp_duration, int lp_player);
void libCOMI_gf_CinematicModeCampaign (bool lp_onOff, fixed lp_duration, bool lp_waitOptions);
void libCOMI_gf_CM_CinematicModeNoWait (bool lp_onOff, fixed lp_duration);
void libCOMI_gf_CM_CinematicModeInternal (bool lp_onOff, fixed lp_duration);
void libCOMI_gf_CM_CinematicModeActivate ();
bool libCOMI_gf_AISuspectDetectionDanger (int lp_player);
void libCOMI_gf_CM_CoopAIPersonalitySet (string lp_personality);
string libCOMI_gf_CM_CoopAIPersonality ();
timer libCOMI_gf_CM_CoopAI_Get_NextAttackWaveTimer (int lp_player);
void libCOMI_gf_CM_CoopAI_Set_EnemyPlayer (int lp_aIPlayer, int lp_targetPlayer);
int libCOMI_gf_CM_CoopAI_Get_EnemyPlayer (int lp_aIPlayer);
int libCOMI_gf_CM_CoopAI_WaveProp_Get_Retreat (int lp_player, wave lp_wave);
void libCOMI_gf_CM_CoopAI_Set_TargetOfAttackWaves (int lp_aIPlayer, wavetarget lp_waveTarget);
wavetarget libCOMI_gf_CM_CoopAI_Get_TargetOfAttackWaves (int lp_aIPlayer);
bool libCOMI_gf_CM_CoopAI_IsSpikeWave (int lp_player);
int libCOMI_gf_CM_CoopAIPersonalityUniqueIndex (string lp_personality);
void libCOMI_gf_SetCoopAIWaveTarget (int lp_aI, wavetarget lp_waveTarget);
void libCOMI_gf_AddAttackWaveUnitType (int lp_count, string lp_unitType);
bool libCOMI_gf_CM_CoopAI_AttackWaveContainsPingworthyUnits (unitgroup lp_attackWave);
bool libCOMI_gf_CM_CoopAI_RandomMapInitAllowed (string lp_aIPersonality, string lp_aIRace);
void libCOMI_gf_StartCoopAI (int lp_player, int lp_aIPlayerEnemy);
void libCOMI_gf_StartCoopAIwithSpecificPersonality (int lp_player, int lp_aIEnemy, string lp_personalityUserData);
void libCOMI_gf_CM_StartCoopMissionMechanic (int lp_player, string lp_aICommander);
void libCOMI_gf_StartCoopMissionMechanicAI (int lp_player, string lp_aICommander);
void libCOMI_gf_SetCoopAIEnemy (int lp_coopAIPlayer, int lp_humanTargetPlayer);
void libCOMI_gf_SetCoopAIGatherPoint (int lp_player, point lp_gatherPoint);
fixed libCOMI_gf_CM_CoopAI_GetResourceAmount (int lp_resourceSize, int lp_difficulty);
string libCOMI_gf_CM_CoopAI_GetTechLevel (int lp_player, int lp_techLevel);
void libCOMI_gf_AddCommanderUnitstoAttackWavePresetBucketTechLevel (int lp_player, bool lp_instantAttackGroup, int lp_resourceSize, int lp_techLevel);
unitgroup libCOMI_gf_CreateCoopAIAttackGroup2 (int lp_player, int lp_resourceSize, int lp_techLevel);
void libCOMI_gf_CreateCommanderDropAttack (int lp_player, int lp_resourceSize, int lp_techLevel, point lp_dropPoint, point lp_attackPoint);
unitgroup libCOMI_gf_CreateCommanderAttackGroupatPoint (int lp_player, int lp_resourceSize, int lp_techLevel, point lp_spawnLocation);
unitgroup libCOMI_gf_CreateDropAttack (int lp_player, unitgroup lp_attackGroup, point lp_dropLocation);
unitgroup libCOMI_gf_CM_CoopAI_CreateDropAttack_Terran (int lp_player, unitgroup lp_attackGroup, point lp_dropLocation);
unitgroup libCOMI_gf_CM_CoopAI_CreateDropAttack_Zerg (int lp_player, unitgroup lp_attackGroup, point lp_dropLocation);
unitgroup libCOMI_gf_CM_CoopAI_CreateDropAttack_Protoss (int lp_player, unitgroup lp_dropGroup, point lp_dropLocation);
void libCOMI_gf_CM_CoopAIPlayer_FakeWarpIn2 (unit lp_unit);
void libCOMI_gf_CM_CoopAI_CreateDropAttack_ProtossCleanup (unit lp_pylon, unit lp_superWarpGate);
void libCOMI_gf_DropPodWarpInUnitGroup (unitgroup lp_dropPodUnits, point lp_dropLocation);
void libCOMI_gf_CM_CoopAI_AttackForce_DropTerran (int lp_player, unitgroup lp_dropGroup, point lp_dropLocation);
void libCOMI_gf_CM_CoopAI_AttackForce_DropZerg (int lp_player, unitgroup lp_dropGroup, point lp_dropLocation);
void libCOMI_gf_CM_CoopAI_AttackForce_DropProtoss (unitgroup lp_dropGroup, point lp_dropLocation);
void libCOMI_gf_CM_CoopAI_SetupAttackForce (int lp_playerA, int lp_playerB, int lp_resourceSize, int lp_techLevel, point lp_spawnLocation);
void libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn (int lp_playerA, int lp_playerB, int lp_resourceSize, int lp_techLevel, point lp_spawnLocation);
void libCOMI_gf_CreateCoopAttackForceatLocationandWaitforthemtospawn2 (int lp_playerA, int lp_playerB, int lp_resourceSize, int lp_techLevel, point lp_spawnLocation, bool lp_dropWarpin);
void libCOMI_gf_CreateCoopDropForceinTransportsatLocationandWaitforthemtospawn (int lp_playerA, int lp_playerB, int lp_resourceSize, int lp_techLevel, point lp_spawnLocation, string lp_transportType);
string libCOMI_gf_CM_CoopAI_AttackForce_ForceName ();
string libCOMI_gf_CM_CoopAI_AttackForce_GatherPointName ();
unitgroup libCOMI_gf_LastCreatedCoopAttackForce ();
point libCOMI_gf_LastCreatedCoopAttackForceGatherPoint ();
unitgroup libCOMI_gf_LastCreatedCoopAttackForceTransports ();
void libCOMI_gf_SendAttackWaveusingCoopAttackForce (unitgroup lp_attackForce, int lp_time, bool lp_waitDontWait);
void libCOMI_gf_SendAttackWaveusingCoopAttackForceWaveAttackTargetType (unitgroup lp_attackForce, int lp_time, bool lp_waitDontWait, int lp_attackTargetType);
void libCOMI_gf_SendAttackWaveusingCoopAttackForceForceSetSpawnLocationHook (unitgroup lp_attackForce, int lp_time, bool lp_waitDontWait, int lp_attackTargetType, point lp_spawnLocation);
void libCOMI_gf_SendAttackWaveusingCoopAttackForceInternal (unitgroup lp_attackForce, int lp_time, bool lp_waitDontWait);
void libCOMI_gf_CM_CoopAI_AttackForce_SendPlayerAttack (int lp_player, unitgroup lp_attackingUnits, int lp_time, bool lp_waitDontWait);
void libCOMI_gf_AddAttackForceWaypoint (point lp_waypoint, bool lp_useTransport);
void libCOMI_gf_CM_CoopAI_AttackForce_ClearWaypointList ();
point libCOMI_gf_CM_CoopAI_AttackForce_GetWaypoint (int lp_pARAM_AAAAAAAAAA);
void libCOMI_gf_CM_CoopAI_AttackForce_SetWaypoint (point lp_waypoint, int lp_index);
string libCOMI_gf_CM_CoopAI_AttackForce_WaypointName (int lp_index);
string libCOMI_gf_CM_CoopAI_AttackForce_UseTransportName (int lp_waypointIndex);
bool libCOMI_gf_CM_CoopAI_AttackForce_GetUseTransport (int lp_waypointIndex);
string libCOMI_gf_CM_CoopAI_AttackForce_WaypointTotalName ();
int libCOMI_gf_CM_CoopAI_AttackForce_GetWaypointTotal ();
void libCOMI_gf_CM_CoopAI_AttackForce_SetWaypointTotal (int lp_waypointIndex);
string libCOMI_gf_CM_CoopAI_AttackForce_GetDataTableName_Unit (int lp_index);
string libCOMI_gf_CM_CoopAI_AttackForce_GetDataTableName_Count (int lp_index);
string libCOMI_gf_CM_CoopAI_AttackForce_ExcludedPlayers_Name (int lp_unitTypeIndex);
string libCOMI_gf_CM_CoopAI_AttackForce_UnitTypeTotal_Name ();
void libCOMI_gf_CM_CoopAI_SetupCoopAttackForceDataTable (playergroup lp_attackForcePlayers, fixed lp_resourceAllocation, string lp_commanderUnitTier);
string libCOMI_gf_CM_CoopAI_AttackForce_GetUnitType (int lp_unitTypeIndex);
int libCOMI_gf_CM_CoopAI_AttackForce_GetUnitTypeIndex (string lp_unitType);
void libCOMI_gf_CM_CoopAI_AttackForce_SetUnitTypeIndex (string lp_unitType, int lp_index);
int libCOMI_gf_CM_CoopAI_AttackForce_GetUnitTypeCount (int lp_index);
void libCOMI_gf_CM_CoopAI_AttackForce_SetUnitTypeCount (int lp_index, int lp_count, int lp_relativeAbsolute);
void libCOMI_gf_CM_CoopAI_AttackForce_SetExcludedPlayers (playergroup lp_excludePlayers, string lp_unitType);
playergroup libCOMI_gf_CM_CoopAI_AttackForce_GetExcludedPlayers (int lp_unitTypeIndex);
void libCOMI_gf_CM_CoopAI_AttackForce_AddUnitType (string lp_unitType, int lp_count);
int libCOMI_gf_CM_CoopAI_AttackForce_UnitTypeCount ();
void libCOMI_gf_CM_CoopAI_AttackForce_SetUnitTypeTotal (int lp_unitTypeTotal);
void libCOMI_gf_CM_CoopAI_AttackForce_ClearTable ();
void libCOMI_gf_CM_CoopAI_CreateAttackWave2 (int lp_player, bool lp_instantAttackGroup, fixed lp_resourceAllocation, string lp_commanderUnitTier);
void libCOMI_gf_CM_AIThinkCoop (int lp_player);
void libCOMI_gf_CM_CoopAI_AIDetection_AddDetectionDanger (int lp_player);
void libCOMI_gf_CM_CoopAI_SetupStartingTech (int lp_player);
void libCOMI_gf_CM_CoopAI_CacheUpgradeData (int lp_player, int lp_difficulty);
void libCOMI_gf_CM_CoopAI_Upgrades (int lp_player);
int libCOMI_gf_GetMissionDifficulty ();
string libCOMI_gf_GetUnitRace (unit lp_unit);
void libCOMI_gf_SetCoopAIAttackGroupSpawnPoint (int lp_player, point lp_spawnPoint);
void libCOMI_gf_CM_CoopAIPlayer_FakeWarpIn (int lp_player, string lp_unitType, point lp_warpInPoint);
void libCOMI_gf_EnableDisableCoopAIWavePings (bool lp_enableDisable);
void libCOMI_gf_EnableDisableCoopAIWavePing (wave lp_attackWave, bool lp_enableDisable);
void libCOMI_gf_EnableDisableCoopAIPlayerAttackPings (playergroup lp_players, bool lp_enableDisable);
bool libCOMI_gf_CM_CoopAI_PingWorthyUnit (unit lp_pingableUnit);
bool libCOMI_gf_UnitisValidforanAttackWavePing (unit lp_pingableUnit);
void libCOMI_gf_TacticalAIFilterSortByLife (aifilter lp_filter, fixed lp_damage, fixed lp_distance);
void libCOMI_gf_CreateExplosionatPointAdvanced (point lp_point, string lp_actor, soundlink lp_sound);
void libCOMI_gf_CatalogFieldValueAdditiveBonus (int lp_catalog, string lp_entry, string lp_fieldPath, int lp_player, string lp_label, fixed lp_percentage, bool lp_fieldIsPeriod);
void libCOMI_gf_InheritDmgandAttackSpeedFromParenttoChild (unit lp_parent, unit lp_child);
void libCOMI_gf_CopyBehaviorToMagazineAmmos (unit lp_unit, string lp_behavior);
string libCOMI_gf_TraingingUnitTypeInAbilCommand (abilcmd lp_abilityCommand, int lp_p, int lp_unitIndex);
bool libCOMI_gf_HeroCanSpendSkillPoint (unit lp_hero, string lp_learnAbility);
void libCOMI_gf_SetUnitBuffMultiplier (unit lp_unit, fixed lp_multiplierAmount, string lp_behavior, fixed lp_baseValue, int lp_method);
void libCOMI_gf_SetUnitAttributePoints (string lp_attribute, unit lp_unit, int lp_points);
void libCOMI_gf_PlayerApplySkinSignal (int lp_player, string lp_skin, bool lp_activateDeactivate, string lp_extraMessage);
void libCOMI_gf_ButtonReplacement (int lp_player, string lp_button, string lp_buttonReplacement);
void libCOMI_gf_FindandAttackNearestEnemy (unit lp_attacker, fixed lp_searchRadius, fixed lp_satisfiedPathingDistance, fixed lp_thinkPeriod, unitfilter lp_targetFilter, unitfilter lp_fallbackTargetFilter);
fixed libCOMI_gf_CombinedPropertyofUnitGroup (unitgroup lp_unitGroup, int lp_unitProperty, bool lp_currentDefault);
unitgroup libCOMI_gf_ConjoinedTrainsofTrainCar (unit lp_trainCar);
void libCOMI_gf_SynchronizeConjoinedTrainHealth (unitgroup lp_trainCars, fixed lp_maxHealth);
void libCOMI_gf_CM_MasteryKerriganArmyVespeneCostList (int lp_player);
void libCOMI_gf_CM_MasteryKerriganArmyVespeneCostReduction (string lp_unitType, int lp_player, int lp_upgradeCount);
void libCOMI_gf_CM_MasteryMengskRoyalGuardCostList (int lp_player);
void libCOMI_gf_CM_MasteryMengskRoyalGuardCostReduction (string lp_unitType, int lp_player, int lp_upgradeCount);
void libCOMI_gf_CM_MasteryZagraRoachLifeIncrease (int lp_player);
void libCOMI_gf_CM_MasteryKerriganArmyVespeneCostList3 (int lp_player);
void libCOMI_gf_CM_MasteryKaraxUnitVitalIncrease (string lp_unitType, int lp_player, int lp_upgradeCount);
void libCOMI_gf_CM_MasterySwannSiegeTankImmortalityProtocolCostReduction (int lp_player);
void libCOMI_gf_CM_MasteryKerriganMutatingCarapaceDegradation (int lp_player);
void libCOMI_gf_CM_MasteryKerriganResearchSpeedCost (int lp_player);
void libCOMI_gf_CM_MasteryStetmannUpgradeCost (int lp_player);
void libCOMI_gf_CM_MasteryResearchCostReduction (int lp_player, string lp_masteryUpgrade, fixed lp_percentReductionPerPoint);
void libCOMI_gf_CM_PrestigeNova_SpecializeUnitCharges (string lp_unitType, unit lp_unit, int lp_novaPlayer);
void libCOMI_gf_CM_PrestigeRaynor_AirSupplySetBonus (int lp_raynorPlayer);
bool libCOMI_gf_CM_Resources_IsSaturated (unit lp_resourceNodeorTownHall);
void libCOMI_gf_CM_Resources_FindWork (unit lp_worker, unit lp_townHall, fixed lp_workRadius);
void libCOMI_gf_CM_DataUtilInit ();
void libCOMI_gf_CM_DetectionUpgradesApply ();
void libCOMI_gf_CM_Abathur_BiomassSetStack (unit lp_biomass, int lp_stack);
int libCOMI_gf_CM_Abathur_BiomassGetStack (unit lp_biomass);
void libCOMI_gf_CM_Abathur_BiomassTransfer (int lp_indexPlayer, unit lp_trainUnit, int lp_biomassBuff100Count, int lp_biomassBuff10Count, int lp_biomassBuff1Count);
void libCOMI_gf_CM_Abathur_BiomassScale (unit lp_biomassUnit, bool lp_instantScale);
void libCOMI_gf_CM_Abathur_BiomassMerge (unit lp_biomassUnit, int lp_biomassUnitCount);
void libCOMI_gf_CM_DehakaConsumeFloatText (text lp_text, int lp_p, point lp_loc);
void libCOMI_gf_CM_DehakaConsumeUpdatePsiExplodeDamage (int lp_dehakaPlayer, unit lp_dehakaUnit, fixed lp_maguroMemorialWeaponDamage);
void libCOMI_gf_CM_Dehaka_SetLevelValues (int lp_player);
void libCOMI_gf_CM_Dehaka_LevelUp (int lp_dehakaPlayer, unit lp_dehakaUnit);
void libCOMI_gf_CM_Dehaka_EssenceSetStack (unit lp_essence, int lp_stack);
int libCOMI_gf_CM_Dehaka_EssenceGetStack (unit lp_essence);
void libCOMI_gf_CM_Dehaka_EssenceTransfer (int lp_indexPlayer, unit lp_trainUnit, int lp_essenceBuff100Count, int lp_essenceBuff10Count, int lp_essenceBuff1Count);
void libCOMI_gf_CM_Dehaka_EssenceScale (unit lp_essenceUnit, bool lp_instantScale);
void libCOMI_gf_CM_Dehaka_EssenceMerge (unit lp_essenceUnit, int lp_essenceUnitCount);
void libCOMI_gf_TransferGuardianShell (unit lp_source, unit lp_target);
void libCOMI_gf_CM_Fenix_SuicideRecallTalandarThread (int lp_player, abilcmd lp_cmd, point lp_targetPoint);
void libCOMI_gf_CM_Fenix_VitalMatch (unit lp_hero);
void libCOMI_gf_CM_Fenix_SetActiveHeroUIState (unit lp_unit, bool lp_active);
void libCOMI_gf_CM_Fenix_SetActiveHeroRally (unit lp_unit);
void libCOMI_gf_CM_Fenix_AvengingProtocol (int lp_group, int lp_player, int lp_stacksToApply);
void libCOMI_gf_CM_Fenix_UpdateNetworkValues (int lp_group, int lp_player);
void libCOMI_gf_CM_Fenix_UpdateFenixChampionShellCountValues (int lp_group, int lp_player);
void libCOMI_gf_CM_Horner_ScrapResourceSetStack (unit lp_scrap, int lp_minerals, int lp_vespene);
void libCOMI_gf_CM_HornerStatUpdate (int lp_player);
void libCOMI_gf_CM_Horner_BomberStatusCheck (int lp_player);
void libCOMI_gf_CM_KaraxSetRepairBeamLimit (int lp_player);
void libCOMI_gf_CM_KerriganMalignantCreep ();
point libCOMI_gf_CM_LaserDrillTargetPoint (point lp_casterPoint, point lp_targetPoint, region lp_region, int lp_player);
void libCOMI_gf_CM_Mengsk_CheckRoyalGuardSupply ();
fixed libCOMI_gf_CM_Mengsk_SupplyLevel (unitgroup lp_unitGroup);
void libCOMI_gf_CM_Mengsk_EnergyChanged (int lp_mengskPlayer);
void libCOMI_gf_CM_Mengsk_GlobalCasterEnergyRegen (unit lp_mengskGlobalCaster);
void libCOMI_gf_CM_Mengsk_GlobalCasterEnergyRegenCalculateRoyalGuard (int lp_mengskPlayer);
void libCOMI_gf_CM_Mengsk_GlobalCasterEnergyRegenCalculateTrooper (int lp_mengskPlayer);
void libCOMI_gf_CM_Mengsk_ForceMorphTrooper (unit lp_trooper, unit lp_pickup, string lp_morphEffect, string lp_morphBehavior, string lp_actorSignal);
text libCOMI_gf_CC_StoryArmyUnitUnitType2 (string lp_unitType);
text libCOMI_gf_CC_StoryArmyUnitUnitType (int lp_armyUnit);
void libCOMI_gf_NovaUnitNames_KillUpdateText (unit lp_updatingUnit, int lp_iD);
void libCOMI_gf_CM_Nova_IterateExistingBuildings (int lp_novaPlayer);
void libCOMI_gf_CM_ModifyCooldown (fixed lp_maxRegenTime, fixed lp_maxChargeCount, string lp_cooldownName, int lp_player);
void libCOMI_gf_CM_RaynorUpgradeResearchCost (int lp_player, int lp_level);
void libCOMI_gf_StetmannPowerTowerEvent (trigger t, string lp_event);
int libCOMI_gf_EventStetmannPowerTowerTechLevel (string lp_techLevelParameter);
int libCOMI_gf_EventStetmannPowerTowerPlayer ();
void libCOMI_gf_CM_Stetmann_ThrowPowerTowerEvent (int lp_player);
void libCOMI_gf_CM_Stetmann_AdjustStetelliteChargesUsed (int lp_player);
void libCOMI_gf_CM_Stukov_SingleUnitGoToRally (unit lp_rallyingUnit, bool lp_overrideExistingOrders);
void libCOMI_gf_CM_Stukov_HordeGoToRally (int lp_player);
void libCOMI_gf_CM_Stukov_NewBunkerUnitProcess (unit lp_newUnit);
void libCOMI_gf_CM_Stukov_InfestStructureInitialCooldown (int lp_player);
void libCOMI_gf_TychusHeroEvent (trigger t, string lp_event);
unit libCOMI_gf_EventTychusHero ();
string libCOMI_gf_EventTychusHeroInstance ();
void libCOMI_gf_TychusStructureEvent (trigger t, string lp_event);
unit libCOMI_gf_EventTychusStructure ();
void libCOMI_gf_CM_Tychus_UpdateHeroTechTree (int lp_p);
void libCOMI_gf_CM_Tychus_SetHeroRequiredTechLevel (int lp_p, int lp_level);
void libCOMI_gf_CM_Tychus_SetHeroCostMultiply (int lp_p, fixed lp_multiplyMinerals, fixed lp_multiplyVespene);
int libCOMI_gf_CM_Tychus_TechLevel (int lp_p);
int libCOMI_gf_CM_Tychus_TechLevel2 (int lp_p);
void libCOMI_gf_CM_Tychus_UltimateTimeAchievement (int lp_player);
void libCOMI_gf_CM_Tychus_InitHeroTechLimit (int lp_player);
fixed libCOMI_gf_CalculateTychusRecruitmentChargeCooldown (int lp_tychusPlayer);
void libCOMI_gf_ApplyTychusMaxChargesPerk (int lp_player);
void libCOMI_gf_CM_ReplaceTychusRageEffect (string lp_rageEffect, string lp_dummyEffectInstance, point lp_targetPoint, unit lp_targetUnit, unit lp_tychusUnit);
void libCOMI_gf_CM_ApplyTychusRageBuffs (string lp_rageBuff, unit lp_targetUnit, unit lp_tychusUnit);
void libCOMI_gf_CM_Zeratul_ApplyDevolve (unit lp_targetUnit);
bool libCOMI_gf_CM_Zeratul_DevolveUnitTypeAllowed (string lp_devolveUnitType);
int libCOMI_gf_CM_Zeratul_DevolveGetUnitTier (string lp_unitType);
string libCOMI_gf_CM_Zeratul_DevolveGetNewUnitType (string lp_oldUnitType, int lp_newTier);
void libCOMI_gf_CM_ZeratulProphecyEvent (trigger t, string lp_event);
void libCOMI_gf_CM_SendZeratulProphecyEventArtifact (string lp_event, int lp_zeratulPlayer, unit lp_artifactUnit, int lp_artifactNumber);
unit libCOMI_gf_CM_ZeratulProphecyEventGetUnit (int lp_unit);
int libCOMI_gf_CM_ZeratulProphecyEventGetArtifactNumber ();
int libCOMI_gf_CM_ZeratulProphecyEventGetPlayer ();
void libCOMI_gf_CM_Zeratul_PurificationNova_SpawnSmallOrb (unit lp_caster, point lp_spawnPoint, point lp_targetPoint);
int libCOMI_gf_CM_Zeratul_ProphecyHintLevel (int lp_artifactNumber);
void libCOMI_gf_CM_Zeratul_GiveProphecyHint (int lp_hintLevel);
void libCOMI_gf_CM_Zeratul_SetProphecyCooldown ();
void libCOMI_gf_CM_Zeratul_SpawnResourcePickups (int lp_count, point lp_location);
void libCOMI_gf_CM_Zeratul_PlaceArtifact (int lp_p);
void libCOMI_gf_CM_ZeratulProphecyArtifactBadRegion_Set ();
int libCOMI_gf_CM_Zeratul_GetArtifactDifficultyIndex (int lp_artifactNumber, string lp_artifactData);
point libCOMI_gf_CM_Zeratul_FindArtifactPlacementPointOld (fixed lp_maxDistance);
point libCOMI_gf_CM_Zeratul_FindArtifactPlacementPointNew (int lp_artifactNumber);
point libCOMI_gf_CM_Zeratul_FindArtifactPlacementPointDebug (int lp_artifactNumber, color lp_color, color lp_pickedColor);
string libCOMI_gf_CM_Zeratul_GetArtifactPlacementDataInstance ();
point libCOMI_gf_CM_Zeratul_GetArtifactPlacementOrigin (string lp_artifactPlacementData);
int libCOMI_gf_CM_Zeratul_GetArtifactLimit (int lp_zeratulPlayer);
void libCOMI_gf_ResourcePickupAlly (int lp_player, int lp_minerals, int lp_vespene);
void libCOMI_gf_CM_SoACasterUnitSet (unit lp_unit, int lp_player);
void libCOMI_gf_CM_SoATargetingModeEnter (int lp_player);
void libCOMI_gf_CM_SoATargetingModeExit (int lp_player);
void libCOMI_gf_CM_SoATargetingCleanupActorsAndUnits (int lp_player);
void libCOMI_gf_CM_SetFogAlphaOverTime (fixed lp_targetAlpha, fixed lp_duration, int lp_player);
void libCOMI_gf_CM_ResetFogAlphaOverTime (fixed lp_duration, int lp_player);
void libCOMI_gf_CM_SoATargetingCancel (int lp_player);
void libCOMI_gf_CM_SoATimeFreezeApply (int lp_castingPlayer);
fixed libCOMI_gf_Lerp (fixed lp_valueZero, fixed lp_valueOne, fixed lp_amount);
int libCOMI_gf_DifficultyValueInt2 (int lp_difficulty, int lp_beginner, int lp_normal, int lp_advanced, int lp_expert, int lp_virtuoso, int lp_master);
fixed libCOMI_gf_DifficultyValueFixed2 (int lp_difficulty, fixed lp_beginner, fixed lp_normal, fixed lp_advanced, fixed lp_expert, fixed lp_virtuoso, fixed lp_master);
string libCOMI_gf_DifficultyValueFixed3 (int lp_difficulty, string lp_beginner, string lp_normal, string lp_advanced, string lp_expert, string lp_virtuoso, string lp_master);
bool libCOMI_gf_DifficultyValueFixed4 (int lp_difficulty, bool lp_beginner, bool lp_normal, bool lp_advanced, bool lp_expert, bool lp_virtuoso, bool lp_master);
int libCOMI_gf_MinimumDifficultyValueCoopInteger (int lp_casual, int lp_normal, int lp_hard, int lp_brutal, int lp_extreme, int lp_unlikely);
fixed libCOMI_gf_MinimumDifficultyValueCoopReal (fixed lp_beginner, fixed lp_normal, fixed lp_advanced, fixed lp_expert, fixed lp_virtuoso, fixed lp_master);
void libCOMI_gf_CM_MissionEndAwardAchievements (int lp_player);
void libCOMI_gf_GameOver (int lp_gameOverType);
bool libCOMI_gf_GameIsOver ();
void libCOMI_gf_RunMissionVictorySequence (trigger lp_victoryCinematic);
void libCOMI_gf_EndCampaignMission (int lp_type);
void libCOMI_gf_ZerglingRespawnSetPrimaryHatchery (unit lp_hatchery);
unit libCOMI_gf_CM_PrimaryTownHall (int lp_player);
void libCOMI_gf_CM_StartingTechForHumanPlayer (int lp_player);
void libCOMI_gf_VoicePackOverridesApply (int lp_player);
void libCOMI_gf_VoicePackCommanderDefaultApply (int lp_player);
void libCOMI_gf_EnableDisableZerglingRespawn (bool lp_enableDisable);
void libCOMI_gf_CM_HeroHandleDeath (int lp_player);
text libCOMI_gf_CM_HeroNormalReviveMsgPending (int lp_player, fixed lp_duration);
text libCOMI_gf_CM_HeroReviveMsgNoTownHall (int lp_player);
text libCOMI_gf_CM_HeroReviveMsgComplete (int lp_player);
void libCOMI_gf_CM_HeroWaitForRevive (int lp_player);
void libCOMI_gf_CM_HeroCreateForPlayer (point lp_spawnPoint, int lp_player, fixed lp_facing, int lp_flags);
void libCOMI_gf_CM_HeroStructureCreateForPlayer (point lp_spawnPoint, int lp_player, fixed lp_facing, int lp_flags);
void libCOMI_gf_CM_GlobalCasterCreateUnit (int lp_player);
unit libCOMI_gf_CM_GlobalCasterUnitForCommander (string lp_commanderType);
void libCOMI_gf_CM_PlayerSetGlobalCaster (int lp_player, unit lp_unit);
unit libCOMI_gf_CM_PlayerGetGlobalCaster (int lp_player);
void libCOMI_gf_CreateRevealerCoop (int lp_player, region lp_area);
void libCOMI_gf_EnableDisableRevealerCoop (revealer lp_r, bool lp_enable);
void libCOMI_gf_DestroyRevealerCoop (revealer lp_r);
int libCOMI_gf_CM_RevealerIndex (revealer lp_revealer);
revealer libCOMI_gf_CM_RevealerFromIndex (int lp_revealerIndex);
void libCOMI_gf_CM_RevealersEnableDisable (bool lp_enabled);
void libCOMI_gf_AutoRevealRegionCoop (region lp_visibilityRegion, region lp_triggeringRegion, int lp_player);
void libCOMI_gf_SetAllianceCoop (int lp_sourcePlayer, int lp_targetPlayer, int lp_alliance);
void libCOMI_gf_SetAllianceOneWayCoop (int lp_sourcePlayer, int lp_targetPlayer, int lp_alliance);
void libCOMI_gf_SetAllianceAspectCoop (int lp_inSourcePlayer, int lp_inAllianceId, int lp_inTargetPlayer, bool lp_ally);
void libCOMI_gf_SetPlayerGroupAlliance (playergroup lp_players, int lp_alliance);
void libCOMI_gf_CM_RestorePlayerVision ();
void libCOMI_gf_CM_GPRemindersInit ();
void libCOMI_gf_CM_GPReminderRaynor (int lp_player);
void libCOMI_gf_CM_GPReminderArtanis (int lp_player);
void libCOMI_gf_CM_GPReminderVorazun (int lp_player);
void libCOMI_gf_CM_GPReminderAbathur (int lp_player);
void libCOMI_gf_CM_GPReminderHorner (int lp_player);
void libCOMI_gf_CM_GPReminderTychus (int lp_player);
void libCOMI_gf_CM_GPReminderDisable (int lp_player);
bool libCOMI_gf_ValidAntiAirUnitIsNearUnit (int lp_player, unit lp_unit);
void libCOMI_gf_RemindPlayertoCreateAntiAirUnits ();
void libCOMI_gf_SetPlayerColors ();
int libCOMI_gf_EnemyPlayerColor ();
int libCOMI_gf_HumanPlayerColor (int lp_player);
int libCOMI_gf_AllyPlayerColor ();
void libCOMI_gf_ResearchAIUpgrade (int lp_count, string lp_upgrade, int lp_player);
void libCOMI_gf_ShareVisionAmongPlayers (playergroup lp_players);
void libCOMI_gf_TurnPlayerFlagOnOffForGroup (playergroup lp_players, int lp_playerFlag, bool lp_onOff);
void libCOMI_gf_CreateAlertAtPointCampaign (string lp_alertType, text lp_text, string lp_icon, point lp_point);
void libCOMI_gf_CreateAlertAtUnitCampaign (string lp_alertType, text lp_text, string lp_icon, unit lp_unit);
void libCOMI_gf_SetAlliedCommandersstartingResources ();
int libCOMI_gf_DifficultyLevelForPlayerCoop (int lp_player);
bool libCOMI_gf_PlayerIsInCombat (int lp_player);
int libCOMI_gf_MissionObjectiveItemCountCoop (string lp_objectiveData);
string libCOMI_gf_CM_ObjectiveRequiredCount (string lp_objectiveData);
string libCOMI_gf_CM_ObjectiveTimer (string lp_objective);
void libCOMI_gf_SetMissionObjectiveProgress (string lp_objective, int lp_current);
void libCOMI_gf_CreateObjectiveCampaign (string lp_objectiveData);
void libCOMI_gf_ZS_SetMissionObjectiveState (string lp_objective, int lp_state);
void libCOMI_gf_SetObjectiveRequiredCountCampaign (string lp_objective, int lp_requiredCount);
void libCOMI_gf_SetObjectiveTimerCampaign (string lp_objective, timer lp_timer);
void libCOMI_gf_SetObjectiveTimerColorThresholdCampaign (string lp_objective, int lp_color, int lp_remainingTime);
void libCOMI_gf_SetMissionObjectiveCustomText (string lp_objective, text lp_customText);
void libCOMI_gf_CM_UpdateObjectiveTextCampaign (string lp_objective);
void libCOMI_gf_CM_UpdateObjectiveTimerCampaign (string lp_objective);
void libCOMI_gf_AddMissionTipCampaign (string lp_tipData);
void libCOMI_gf_DisplayMissionTip ();
void libCOMI_gf_CM_CommanderVOInit ();
void libCOMI_gf_CM_CommanderVOSend (int lp_listenerPlayer, soundlink lp_vOSound, playergroup lp_targetPlayers);
void libCOMI_gf_CM_CommanderVOAbilityWatch (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, abilcmd lp_abilityCommand);
void libCOMI_gf_CM_CommanderVOAbilityWatchUnit (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, string lp_ability);
void libCOMI_gf_CM_HeroReviveQueue_PlaySound (soundlink lp_soundLink, fixed lp_soundDelay, playergroup lp_listeningPlayers);
void libCOMI_gf_CM_AbilityTransmissionAbathurNestReminderActionVer (int lp_abathurPlayer);
void libCOMI_gf_CM_AbilityTransmissionNovaNukeReadyActionVer (int lp_novaPlayer);
void libCOMI_gf_CM_AbilityTransmissionFenixSuitsReadyFirstTime (int lp_player, string lp_cooldownLink, unit lp_unit);
void libCOMI_gf_CM_AbilityTransmissionDehakaWurmReminderActionVer (int lp_dehakaPlayer);
void libCOMI_gf_CM_UnitTransmissionHornerBomberBuildReminderActionVer (int lp_hornerPlayer);
void libCOMI_gf_CM_AbilityTransmissionHornerMagMineReminderActionVer (int lp_hornerPlayer);
void libCOMI_gf_CM_AbilityTransmissionHornerFleetReminderActionVer (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, string lp_ability);
void libCOMI_gf_CM_AbilityTransmission_StetelliteReminder (int lp_stetmannPlayer);
void libCOMI_gf_CM_AbilityTransmission_StetzoneReminder (int lp_stetmannPlayer);
void libCOMI_gf_CM_AbilityTransmission_GaryUpgradeReminder (int lp_stetmannPlayer);
void libCOMI_gf_CM_AbilityTransmission_MengskReminders (int lp_mengskPlayer);
void libCOMI_gf_CM_VOResourceInit ();
void libCOMI_gf_SendMissionTransmission (string lp_transmissionType, bool lp_waitUntilDone, int lp_sourcePlayer);
void libCOMI_gf_SendVictoryTransmission (string lp_mapVictoryTransmission);
void libCOMI_gf_SendSplitMissionTransmission (string lp_transmissionType, bool lp_waitUntilDone, int lp_primaryPlayer, int lp_sourcePlayer);
void libCOMI_gf_WaitForMissionTransmission ();
void libCOMI_gf_CM_TransmissionUpdateConvoPlayers (string lp_conversation);
bool libCOMI_gf_CM_PlayerHasTransmission (int lp_player);
void libCOMI_gf_CM_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libCOMI_gf_CM_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, int lp_ping, int lp_localIndex);
void libCOMI_gf_HideCampaignTransmissionPortrait ();
void libCOMI_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
fixed libCOMI_gf_ConvesationLineDuration (string lp_conversationLine);
void libCOMI_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libCOMI_gf_SendTransmissionCampaignPlaceHolder (unit lp_unit, string lp_model, text lp_speaker, text lp_message, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libCOMI_gf_ShareVisionofUnitCoop (unit lp_unit, bool lp_shareUnshare, int lp_player);
void libCOMI_gf_ShareVisionofUnitWithHumansCoop (unit lp_unit, bool lp_shareUnshare);
void libCOMI_gf_CM_VisionShareEnable (bool lp_enable);
void libCOMI_gf_CM_DropPod_Zerg_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libCOMI_gf_CM_DropPod_Terran_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libCOMI_gf_CreateDropPod (int lp_race, point lp_location, unitgroup lp_units, bool lp_waitDontWait, int lp_player);
void libCOMI_gf_CreateDropPodForZergBuilding (string lp_buildingType, point lp_landingPoint, int lp_player, bool lp_waitDontWait);
void libCOMI_gf_CM_DropPodCreateZergBuilding_DontWait (string lp_buildingType, point lp_landingPoint, int lp_player);
void libCOMI_gf_CM_DropPodCreateZergBuilding_Wait (string lp_buildingType, point lp_landingPoint, int lp_player);
string libCOMI_gf_CM_DropPod_LastDroppedUnitsDataTableName ();
unitgroup libCOMI_gf_LastDroppedUnits ();
unit libCOMI_gf_CM_NexusBestWorkerRallyMineral (unit lp_nexus);
void libCOMI_gf_SetWorkerRallyPointforNexus (unit lp_nexus);
void libCOMI_gf_SetWorkerRallyPointsPlayersNexuses (int lp_player);
void libCOMI_gf_CM_UseUnitNameAsUnitTip (unit lp_unit);
void libCOMI_gf_CM_ApplyCampaignTeachingToUnit (unit lp_teachUnit);
void libCOMI_gf_SetUnitInfoTextCampaign (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libCOMI_gf_SetUnitInfoTextCampaignDetailed (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libCOMI_gf_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
void libCOMI_gf_SendActorMessageToDoodadsInRegion (string lp_message, string lp_doodadType, region lp_target);
void libCOMI_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libCOMI_gf_GivePlayerResources (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libCOMI_gf_DisplayRewardFloatingText (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libCOMI_gf_DisplayMissionObjectiveRewardFloatingText (point lp_location, string lp_objective, int lp_player);
bool libCOMI_gf_CM_StartingWorkerAutoHarvestEnabled ();
void libCOMI_gf_StartingWorkersAutoHarvest (region lp_regionMineralWorker, region lp_regionGasWorker);
bool libCOMI_gf_UnitMoverExists (string lp_unitType, string lp_mover);
fixed libCOMI_gf_ExpansionRockLife (int lp_rockType);
void libCOMI_gf_SleepWakeUpUnitCoop (unit lp_unit, bool lp_sleepWakeUp, int lp_alwaysExclusions);
point libCOMI_gf_CM_NearbyGroundPathablePoint (point lp_initialDropPoint, fixed lp_distanceOffsetMin, fixed lp_distanceOffsetMax);
void libCOMI_gf_CM_ChatBarSetMode (int lp_mode, playergroup lp_players);
void libCOMI_gf_DisplayCampaignMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
string libCOMI_gf_CM_ReticleModelOfStyle (int lp_type, int lp_size);
string libCOMI_gf_CM_ReticleTextFontOfStyle (int lp_type);
void libCOMI_gf_CreateReticleEffectAndTextTagAtPoint (int lp_type, int lp_size, text lp_text, point lp_location);
void libCOMI_gf_AttachReticleEffectAndTextTagOnUnit (int lp_type, int lp_size, text lp_text, unit lp_target, string lp_attachPoint);
int libCOMI_gf_LeaderboardTimeScore (int lp_maxScore, int lp_parTimeMinutes);
int libCOMI_gf_LeaderboardFinalScoreChecker (int lp_scoreValue, int lp_objective, bool lp_checkCompletion);
int libCOMI_gf_LeaderboardObjectiveHealthScore (unit lp_objectiveUnit, int lp_maxScore);
fixed libCOMI_gf_LeaderboardObjectDurationModifierValue (int lp_maxScore, int lp_maxDurationMinutes);
void libCOMI_gf_CM_CampaignMissionInit ();
void libCOMI_gf_CM_CampaignHelpPanelTempSetup ();
void libCOMI_gf_CM_DifficultyApplySettings (int lp_player);
void libCOMI_gf_PlayMapIntroZoom (bool lp_waitDontWait);
void libCOMI_gf_LoadCoopMission (string lp_map, trigger lp_startTrigger);
void libCOMI_gf_CoopPresetCommanderAndTeam ();

// Trigger Declarations
trigger libCOMI_gt_VoidPingSound;
trigger libCOMI_gt_CM_DebugAbathurBiomassReport;
trigger libCOMI_gt_CM_DebugAIPersonalityChange;
trigger libCOMI_gt_CM_DebugHeroReviveInstant;
trigger libCOMI_gt_CM_DebugCommanderCooldowns;
trigger libCOMI_gt_CM_DebugApplySkin;
trigger libCOMI_gt_CM_DebugTargetSpawnersSet;
trigger libCOMI_gt_CM_CinematicModeOn;
trigger libCOMI_gt_CM_CinematicModeOff;
trigger libCOMI_gt_CM_CoopAI_AIManager;
trigger libCOMI_gt_CM_CoopAI_AttackWaveSetup;
trigger libCOMI_gt_CM_CoopAI_AIDetectionManager;
trigger libCOMI_gt_CM_CoopAI_AttackWavePingManager;
trigger libCOMI_gt_CM_CoopAI_InitAIDebugging;
trigger libCOMI_gt_ToggleAIDebugMessages;
trigger libCOMI_gt_BanelingScourgeDeathrattleScrapDeaths;
trigger libCOMI_gt_BanelingScourgeEconDrop;
trigger libCOMI_gt_BanelingScourgeLocusts;
trigger libCOMI_gt_BanelingScourgeEssenceDrop;
trigger libCOMI_gt_BanelingScourgeBiomassDrop;
trigger libCOMI_gt_ShieldColorUnitCreate;
trigger libCOMI_gt_ShieldColorUnitMorph;
trigger libCOMI_gt_DeathPreventGrantKillCredit;
trigger libCOMI_gt_AttackFastBuffHack;
trigger libCOMI_gt_DmgandAttackSpeedInheritNew;
trigger libCOMI_gt_DmgandAttackSpeedInheritExisting;
trigger libCOMI_gt_ConjoinedVitalRegenOnOff;
trigger libCOMI_gt_CM_TargetLockOrder;
trigger libCOMI_gt_CM_TargetLockOrderRaven;
trigger libCOMI_gt_ChronoAnimSpeedOn;
trigger libCOMI_gt_ChronoAnimSpeedOff;
trigger libCOMI_gt_SamePlaceRevive;
trigger libCOMI_gt_MU_CandyBowlMassBuy;
trigger libCOMI_gt_CM_InstantRevive;
trigger libCOMI_gt_SupplicantWarpTrain;
trigger libCOMI_gt_SupplicantActualTrain;
trigger libCOMI_gt_SupplicantWarpFinish;
trigger libCOMI_gt_SupplicantWarpCancel;
trigger libCOMI_gt_StukovSnareBehaviorOn2;
trigger libCOMI_gt_CM_CargoDeath;
trigger libCOMI_gt_CM_MasteryVorazunDarkPylonRadius;
trigger libCOMI_gt_CM_PrestigeRaynor_AirSupplyChanged;
trigger libCOMI_gt_CM_PrestigeTychus_LoneWolfChanged;
trigger libCOMI_gt_CM_AchievementRaynorBansheesUsed;
trigger libCOMI_gt_CM_AchievementSwannCombatDropUsed;
trigger libCOMI_gt_CM_AchievementVorazunBlackHoleUsed;
trigger libCOMI_gt_CM_AchievementArtanisSolarBombardmentUsed;
trigger libCOMI_gt_CM_AchievementKaraxSolarLanceUsed;
trigger libCOMI_gt_CM_AchievementFenixChampionAllExist;
trigger libCOMI_gt_CreepTumorBuild;
trigger libCOMI_gt_CM_DebugVictoryS;
trigger libCOMI_gt_CM_DebugGiveOfflineControl;
trigger libCOMI_gt_MindControlSupplyOn;
trigger libCOMI_gt_MindControlSupplyOff;
trigger libCOMI_gt_BehaviorPermanentlyChangesOwner;
trigger libCOMI_gt_CM_Abathur_TriggersInit;
trigger libCOMI_gt_CM_Abathur_ToxicNestDeathFailsafe;
trigger libCOMI_gt_CM_Abathur_MeleeBonusUpgrade;
trigger libCOMI_gt_CM_Abathur_BiomassDrop;
trigger libCOMI_gt_CM_Abathur_BiomassPickup;
trigger libCOMI_gt_CM_Abathur_BiomassRefund;
trigger libCOMI_gt_CM_DebugAbathurBiomassLost;
trigger libCOMI_gt_CM_Abathur_BiomassTrain;
trigger libCOMI_gt_CM_Abathur_BiomassManualUpdate;
trigger libCOMI_gt_CM_Abathur_BiomassScaler;
trigger libCOMI_gt_CM_Abathur_Enemy_Death_Create_Locusts;
trigger libCOMI_gt_CM_Abathur_ToxicNest;
trigger libCOMI_gt_CM_Abathur_SwarmHostLocustLaunchCast;
trigger libCOMI_gt_CM_Abathur_RavagerSpellCooldown;
trigger libCOMI_gt_CM_Alarak_Upgrade;
trigger libCOMI_gt_CM_Alarak_Sacrific_Scale;
trigger libCOMI_gt_CM_AlarakLightningStrikes_FlashOn;
trigger libCOMI_gt_CM_AlarakLightningStrikes_FlashOff;
trigger libCOMI_gt_CM_AlarakLightningStrikes_Sacriface;
trigger libCOMI_gt_CM_Alarak_SoulAbsorption_Impact;
trigger libCOMI_gt_CM_Alarak_SoulAbsorption_Launch;
trigger libCOMI_gt_CM_Alarak_SoulAbsorption_PrestigeMechBuff;
trigger libCOMI_gt_CM_Alarak_EmpowerAdd;
trigger libCOMI_gt_CM_Alarak_EmpowerRemove;
trigger libCOMI_gt_CM_Alarak_EmpowerWorshiperAdd;
trigger libCOMI_gt_CM_Alarak_EmpowerWorshiperRemove;
trigger libCOMI_gt_CM_Alarak_EmpowerUpdate;
trigger libCOMI_gt_CM_DehakaGeneThornsOn;
trigger libCOMI_gt_CM_DehakaDenReviveFootprintOn;
trigger libCOMI_gt_CM_DehakaDenReviveFootprintOff;
trigger libCOMI_gt_CM_DehakaDenReviveEatTextTagDead;
trigger libCOMI_gt_CM_DehakaDenReviveEatTextTagRevived;
trigger libCOMI_gt_CM_DehakaDenReviveEatUsed;
trigger libCOMI_gt_CM_DehakaBossFacingSetting;
trigger libCOMI_gt_CM_DehakaMutaliskReviveCooldownOn;
trigger libCOMI_gt_CM_DehakaMammothBreathLookAtStart;
trigger libCOMI_gt_CM_DehakaMammothBreathLookAtStop;
trigger libCOMI_gt_CM_DehakaConsumeTimeStopHackOn;
trigger libCOMI_gt_CM_DehakaConsumeExecuted;
trigger libCOMI_gt_CM_DehakaConsumeDetachFailSafe;
trigger libCOMI_gt_CM_DehakaConsumeLaunchFailSafe;
trigger libCOMI_gt_CM_DehakaConsumeEffectHeroic;
trigger libCOMI_gt_CM_DehakaConsumeLearnLevel2;
trigger libCOMI_gt_CM_DehakaConsumeLearnLevel3;
trigger libCOMI_gt_CM_DehakaLearn;
trigger libCOMI_gt_CM_DehakaPackLeaderGlevigBuilt;
trigger libCOMI_gt_CM_DehakaPackLeaderMurvarBuilt;
trigger libCOMI_gt_CM_DehakaPackLeaderDakrunBuilt;
trigger libCOMI_gt_CM_DehakaReviveGasWorkerBehaviorAdd;
trigger libCOMI_gt_CM_DehakaReviveGasWorkerBehaviorRemove;
trigger libCOMI_gt_CM_DehakaReviveEatButtonClicked;
trigger libCOMI_gt_CM_DehakaReviveTimerAdjustments;
trigger libCOMI_gt_CM_DehakaGlevigTimerAdjustments;
trigger libCOMI_gt_CM_DehakaAutocastSettingsOn;
trigger libCOMI_gt_CM_DehakaAutocastSettingsOff;
trigger libCOMI_gt_CM_DehakaAutocastBossSummonStateAdjust;
trigger libCOMI_gt_CM_Dehaka_TriggersInit;
trigger libCOMI_gt_CM_Dehaka_EssenceDrop;
trigger libCOMI_gt_CM_Dehaka_EssencePickup;
trigger libCOMI_gt_CM_Dehaka_EssenceManualUpdate;
trigger libCOMI_gt_CM_Dehaka_LevelUp_Stage2_ColossusLegs;
trigger libCOMI_gt_CM_Dehaka_LevelUp_Stage3;
trigger libCOMI_gt_CM_Dehaka_LevelUp_Stun_Off;
trigger libCOMI_gt_CM_Dehaka_LevelUp_LearnOrder;
trigger libCOMI_gt_CM_Dehaka_UnitCostRefund;
trigger libCOMI_gt_CM_Dehaka_PrestigeClone;
trigger libCOMI_gt_CM_Dehaka_PrestigeCloneRevive;
trigger libCOMI_gt_CM_Fenix_AchievementCarrierAmount;
trigger libCOMI_gt_CM_Fenix_AchievementCarrierResearched;
trigger libCOMI_gt_CM_Fenix_SentryNullShield;
trigger libCOMI_gt_CM_Fenix_TaldarinDetonationStore;
trigger libCOMI_gt_CM_Fenix_TaldarinDetonationRelease;
trigger libCOMI_gt_CM_Fenix_InitialDummySpawn;
trigger libCOMI_gt_CM_Fenix_HeroSpawn;
trigger libCOMI_gt_CM_Fenix_HeroSpawnCleanup;
trigger libCOMI_gt_CM_Fenix_HeroKilled;
trigger libCOMI_gt_CM_Fenix_SuicideUpdateVital;
trigger libCOMI_gt_CM_Fenix_ResearchRemoveSuicide;
trigger libCOMI_gt_CM_Fenix_RallySetToFenix;
trigger libCOMI_gt_CM_Fenix_ChampionInitialSetup;
trigger libCOMI_gt_CM_Fenix_ChampionPotentialVoluteerTrained;
trigger libCOMI_gt_CM_Fenix_ChampionBuildingReBuilt;
trigger libCOMI_gt_CM_Fenix_ChampionUpgradeResearched;
trigger libCOMI_gt_CM_Fenix_ChampionTimers;
trigger libCOMI_gt_CM_Fenix_ChampionMorphed;
trigger libCOMI_gt_CM_Fenix_ChampionDies;
trigger libCOMI_gt_CM_Fenix_NetworkedUnitDies;
trigger libCOMI_gt_CM_Fenix_ProbiusSwap;
trigger libCOMI_gt_CM_Fenix_AvengingProtocol_BuffExpires;
trigger libCOMI_gt_CM_Fenix_ConclaiveTrainStart;
trigger libCOMI_gt_CM_Fenix_ConclaiveTrainStop;
trigger libCOMI_gt_CM_Fenix_ChampionAugmentAbilitySoundTrigger;
trigger libCOMI_gt_CM_Fenix_ChargedBusterOnCost;
trigger libCOMI_gt_CM_Fenix_ChargedBusterOffCost;
trigger libCOMI_gt_CM_FenixAutocastSettingsOn;
trigger libCOMI_gt_CM_FenixAutocastSettingsOff;
trigger libCOMI_gt_CM_FenixAutocastSuitSummonStateAdjust;
trigger libCOMI_gt_CM_Fenix_TriggersInit;
trigger libCOMI_gt_CM_Horner_AirFleet_Activated;
trigger libCOMI_gt_CM_Horner_DeathRattleHellionFearApply;
trigger libCOMI_gt_CM_Horner_DeathRattle_Reaper;
trigger libCOMI_gt_CM_Horner_DeathRattle_WidowMine;
trigger libCOMI_gt_CM_Horner_DeathRattle_Hellion;
trigger libCOMI_gt_CM_Horner_DeathRattle_Hellbat;
trigger libCOMI_gt_CM_Horner_DoubleSupplyStun;
trigger libCOMI_gt_CM_Horner_MTO_Upgrade;
trigger libCOMI_gt_CM_Horner_HangerFinish;
trigger libCOMI_gt_CM_Horner_ScrapDrop;
trigger libCOMI_gt_CM_Horner_ScrapDropForSwannWreckage;
trigger libCOMI_gt_CM_Horner_ScrapPickup;
trigger libCOMI_gt_CM_Horner_SupplyAchievement;
trigger libCOMI_gt_CM_Horner_StarportCreateTechLabOrder;
trigger libCOMI_gt_CM_Horner_StarportCreateTechLabStart;
trigger libCOMI_gt_CM_Horner_StarportCreateTechLabFinish;
trigger libCOMI_gt_CM_Horner_StarportRecreateTechLabOrder;
trigger libCOMI_gt_CM_Horner_StarportRecreate;
trigger libCOMI_gt_CM_Horner_StarportFinishCreateTechLabOrder;
trigger libCOMI_gt_CM_Horner_BomberPlatform_PlatformCreated;
trigger libCOMI_gt_CM_Horner_BomberPlatform_PlatformDies;
trigger libCOMI_gt_CM_Horner_BomberPlatform_BomberLaunched;
trigger libCOMI_gt_CM_Horner_BomberPlatform_BomberReturned;
trigger libCOMI_gt_CM_Horner_BomberPlatform_BomberRebuilt;
trigger libCOMI_gt_CM_Horner_BomberPlatform_TopBar_TargetSelected;
trigger libCOMI_gt_CM_Horner_BomberPlatform_Individual_TargetSelected;
trigger libCOMI_gt_CM_Horner_VikingTacticalJumpMorph;
trigger libCOMI_gt_CM_Horner_MagMines;
trigger libCOMI_gt_CM_Horner_TriggersInit;
trigger libCOMI_gt_CM_KaraxRepairBeamLimit;
trigger libCOMI_gt_CM_KaraxUnitReviveBarrier;
trigger libCOMI_gt_CM_KaraxSolarForgeSOAEnergy;
trigger libCOMI_gt_CM_MasteryKerriganInstantReviveCooldown;
trigger libCOMI_gt_KerriganPsiStrike;
trigger libCOMI_gt_KerriganEconDrop;
trigger libCOMI_gt_CM_Kerrigan_WeaponSwap;
trigger libCOMI_gt_CM_LaserDrillBFGActivate;
trigger libCOMI_gt_CM_LaserDrillNukeActivate;
trigger libCOMI_gt_CM_LaserDrillBFG;
trigger libCOMI_gt_LaserDrillBeamSoundRegionClear;
trigger libCOMI_gt_LaserDrillBeamSoundFiring;
trigger libCOMI_gt_LaserDrillBFGBeamSoundFiring;
trigger libCOMI_gt_LaserDrillNukeBeamSoundFiring;
trigger libCOMI_gt_LaserDrillNukeBeamSoundRegionClear;
trigger libCOMI_gt_CM_LaserDrillTopbarOrder;
trigger libCOMI_gt_CM_Mengsk_TopBarKills;
trigger libCOMI_gt_CM_Mengsk_TriggersInit;
trigger libCOMI_gt_CM_Mengsk_ArtilleryBombardmentTarget;
trigger libCOMI_gt_CM_Mengsk_ArtilleryExperimentalStrikeTarget;
trigger libCOMI_gt_CM_Mengsk_ArtilleryGlobalExperimentalStrikeTarget;
trigger libCOMI_gt_CM_Mengsk_GlobalAbilityCast;
trigger libCOMI_gt_CM_Mengsk_ArtilleryExperimentalStrikeFearApply;
trigger libCOMI_gt_CM_Mengsk_NuclearAnnihilationSmallNukes;
trigger libCOMI_gt_CM_Mengsk_ArtilleryBombardmentCargoChange;
trigger libCOMI_gt_CM_Mengsk_RegisterVeteranUnit;
trigger libCOMI_gt_CM_Mengsk_RemoveVeteranUnit;
trigger libCOMI_gt_CM_Mengsk_VeteranDies;
trigger libCOMI_gt_CM_Mengsk_VeteranDing;
trigger libCOMI_gt_CM_Mengsk_RegisterPropagandaUnit;
trigger libCOMI_gt_CM_Mengsk_RemovePropagandaUnit;
trigger libCOMI_gt_CM_Mengsk_PropagandaUpgraded;
trigger libCOMI_gt_CM_Mengsk_VeterancyEarned;
trigger libCOMI_gt_CM_Mengsk_MedivacAirlift;
trigger libCOMI_gt_CM_Mengsk_MedivacAirliftDing;
trigger libCOMI_gt_CM_Mengsk_EnlistStart;
trigger libCOMI_gt_CM_Mengsk_EnlistStop;
trigger libCOMI_gt_CM_Mengsk_ReturnToWork;
trigger libCOMI_gt_CM_Mengsk_WeaponPickupRegister;
trigger libCOMI_gt_CM_Mengsk_WeaponPickerUpperRegister;
trigger libCOMI_gt_CM_Mengsk_WeaponPickerUpperUnregister;
trigger libCOMI_gt_CM_Mengsk_WeaponPickup;
trigger libCOMI_gt_CM_Mengsk_ZergSeekDestroy;
trigger libCOMI_gt_CM_Mengsk_ZerglingMengskSpawn;
trigger libCOMI_gt_CM_Mengsk_HydraliskMengskSpawn;
trigger libCOMI_gt_CM_Mengsk_MutaliskMengskSpawn;
trigger libCOMI_gt_CM_Mengsk_UltraliskMengskSpawn;
trigger libCOMI_gt_CM_Mengsk_BunkerDepotDropFillCargo;
trigger libCOMI_gt_CM_Mengsk_DirtyBombSweetener;
trigger libCOMI_gt_NovaUnitNames_GenerateNameList;
trigger libCOMI_gt_NovaUnitNames_Assign;
trigger libCOMI_gt_NovaUnitNames_KillCountUpdate;
trigger libCOMI_gt_NovaUnitNames_KillCountUpdateLaserTurret;
trigger libCOMI_gt_CM_NovaGriffinTransportActived;
trigger libCOMI_gt_CM_NovaGriffinTransportStop;
trigger libCOMI_gt_CM_NovaGriffinTransportTimeOut;
trigger libCOMI_gt_CM_NovaGriffinTransportAirBehaviorApplied;
trigger libCOMI_gt_CM_NovaGriffinTransportGroundBehaviorApplied;
trigger libCOMI_gt_CM_NovaGriffinTransportTeleportUnload;
trigger libCOMI_gt_CM_NovaGriffinBombingRunActivated;
trigger libCOMI_gt_CM_NovaGriffinBombingRunFinish;
trigger libCOMI_gt_CM_Nova_TriggersInit;
trigger libCOMI_gt_CM_NovaSiegeModeProgressiveRangeIncreaseApply;
trigger libCOMI_gt_CM_NovaPsiStrike;
trigger libCOMI_gt_CM_Nova_BuildingCompletedTrigger;
trigger libCOMI_gt_CM_HyperionMinimapIconDynamicFacingDisplay;
trigger libCOMI_gt_CM_Stetmann_EventHook_LairHiveCreated;
trigger libCOMI_gt_CM_Stetmann_EventHook_LairHiveMorphed;
trigger libCOMI_gt_CM_Stetmann_GaryTransformAchievement;
trigger libCOMI_gt_CM_Stetmann_StetelliteOverchargeAllyAchievement;
trigger libCOMI_gt_CM_Stetmann_TriggersInit;
trigger libCOMI_gt_CM_Stetmann_PowerFieldToggle;
trigger libCOMI_gt_CM_Stetmann_BanelingEnergyDamageBoost;
trigger libCOMI_gt_CM_Stetmann_BroodLordArmBroodling;
trigger libCOMI_gt_CM_Stetmann_PowerTowerTechLevel;
trigger libCOMI_gt_CM_Stetmann_GaryUpgrade;
trigger libCOMI_gt_CM_Stetmann_Set;
trigger libCOMI_gt_CM_Stetmann_StetelliteChainCast;
trigger libCOMI_gt_AdvancedConstructionAutoUser;
trigger libCOMI_gt_AdvancedConstructionAutoAutoCast;
trigger libCOMI_gt_SwannVespeneDroneTrigger;
trigger libCOMI_gt_SwannSiegeTankRebuildController;
trigger libCOMI_gt_SwannThorRebuildController;
trigger libCOMI_gt_SwannLaserDrillCallForHelp;
trigger libCOMI_gt_CM_Stukov_FullSupplyCheat;
trigger libCOMI_gt_CM_Stukov_AutoCreepTumor;
trigger libCOMI_gt_CM_Stukov_InfestedStructureInitialSpawn;
trigger libCOMI_gt_CM_Stukov_InfestedStructureRebuilt;
trigger libCOMI_gt_CM_Stukov_HordeWaveSpawner;
trigger libCOMI_gt_CM_Stukov_HordeWaveCreated;
trigger libCOMI_gt_CM_Stukov_HordeWaveExploderCreated;
trigger libCOMI_gt_CM_Stukov_HordeWaveInteruptionReissueOrder;
trigger libCOMI_gt_CM_Stukov_RallyPlaced;
trigger libCOMI_gt_CM_Stukov_RallyToUnitDies;
trigger libCOMI_gt_CM_Stukov_TriggersInit;
trigger libCOMI_gt_CM_Stukov_InfestedBunkerAutoLoad;
trigger libCOMI_gt_CM_Stukov_InfestedTimedLifeFoodHackBurrow;
trigger libCOMI_gt_CM_Stukov_InfestedTimedLifeFoodHackTrain;
trigger libCOMI_gt_CM_Stukov_InfestedBunkerUnloadRally;
trigger libCOMI_gt_CM_Stukov_InfestedBunkerRegister;
trigger libCOMI_gt_CM_Stukov_InfestedBunkerInitialSpawn;
trigger libCOMI_gt_CM_Stukov_UnitCostRefund;
trigger libCOMI_gt_CM_Stukov_InfestedSiegeTankDeath;
trigger libCOMI_gt_CM_TychusHERC_ShieldCooldown;
trigger libCOMI_gt_CM_TychusHERC_CriticalText;
trigger libCOMI_gt__CM_TychusEventHook;
trigger libCOMI_gt__CM_TychusStructureEventHook;
trigger libCOMI_gt_CM_Tychus_OdinSummon_Used;
trigger libCOMI_gt_CM_Tychus_OdinSummon_CameraShake;
trigger libCOMI_gt_CM_Tychus_Odin_Timeout;
trigger libCOMI_gt_CM_Tychus_WarhoundFearApply;
trigger libCOMI_gt_CM_TychusSpecialistTrainingAuraOn;
trigger libCOMI_gt_CM_TychusSpecialistTrainingAuraOff;
trigger libCOMI_gt_CM_TychusMedicTransportActived;
trigger libCOMI_gt_CM_TychusMedicTopBarButton;
trigger libCOMI_gt_CM_TychusMedicTransportTargetOn;
trigger libCOMI_gt_CM_TychusMedicTransportTargetOff;
trigger libCOMI_gt_CM_TychusMedicTransportStop;
trigger libCOMI_gt_CM_TychusMedicTransportTimeOut;
trigger libCOMI_gt_CM_TychusMedicTransportAirBehaviorApplied;
trigger libCOMI_gt_CM_TychusMedicTransportGroundBehaviorApplied;
trigger libCOMI_gt_CM_TychusMedicTransportTeleportUnload;
trigger libCOMI_gt_CM_Tychus_HeroQueue;
trigger libCOMI_gt_CM_Tychus_HeroCancel;
trigger libCOMI_gt_CM_Tychus_TrainMaxChargesRemove;
trigger libCOMI_gt_CM_Tychus_HeroReviveUsed;
trigger libCOMI_gt_CM_Tychus_HeroReviveFailSafe;
trigger libCOMI_gt_CM_Tychus_OilBombFireDamageResponse;
trigger libCOMI_gt_CM_Tychus_UltimateAchievement;
trigger libCOMI_gt_CM_Tychus_HealAchievement;
trigger libCOMI_gt_CM_Tychus_SnareFailSafe;
trigger libCOMI_gt_CM_Tychus_TriggersInit;
trigger libCOMI_gt_CM_Tychus_TriUnitSpeed_Upgrade;
trigger libCOMI_gt_CM_Tychus_TriUnitHealth_Upgrade;
trigger libCOMI_gt_CM_TychusReplaceResearchCenter;
trigger libCOMI_gt_CM_Tychus_Hero_Charge_Timing;
trigger libCOMI_gt_CM_Tychus_CalldownOdinDeselect;
trigger libCOMI_gt_CM_Tychus_CalldownOdinUpdateTarget;
trigger libCOMI_gt_CM_Tychus_CalldownOdinTychusSelect;
trigger libCOMI_gt_CM_TychusWarhound_Revive;
trigger libCOMI_gt_CM_TychusHeroPurchaseDummy;
trigger libCOMI_gt_CM_TychusReaper_Revive;
trigger libCOMI_gt_RoachDropScale;
trigger libCOMI_gt_CM_Zagara_WeaponSwap;
trigger libCOMI_gt_CM_Zeratul_Entropic_Spawner;
trigger libCOMI_gt_CM_Zeratul_Devolve;
trigger libCOMI_gt_CM_ZeratulProphecyEventVision;
trigger libCOMI_gt_CM_ZeratulProphecyEventArtifactMissed;
trigger libCOMI_gt_CM_ZeratulProphecyEventArtifactPickedUp;
trigger libCOMI_gt_CM_ZeratulProphecyEventArtifactRevealed;
trigger libCOMI_gt_CM_ZeratulProphecyEventArtifactUsed;
trigger libCOMI_gt_CM_ZeratulProphecyEventProphecyCast;
trigger libCOMI_gt_CM_Zeratul_TransportDropOff;
trigger libCOMI_gt_CM_Zeratul_TransportResetRally;
trigger libCOMI_gt_CM_Zeratul_PurificationNova_Finale;
trigger libCOMI_gt_CM_Zeratul_PurificationNova_Create;
trigger libCOMI_gt_CM_Zeratul_PurificationNova_MainImpact;
trigger libCOMI_gt_CM_ZeratulStasisBeamIssueOrder;
trigger libCOMI_gt_CM_ZeratulStasisBeam;
trigger libCOMI_gt_CM_Zeratul_ProphecyMiss;
trigger libCOMI_gt_CM_Zeratul_ProphecyCastStop;
trigger libCOMI_gt_CM_Zeratul_ProphecyIntroQ;
trigger libCOMI_gt_CM_Zeratul_ProphecyArtifactPickedUp;
trigger libCOMI_gt_CM_Zeratul_ProphecyArtifactRevealed;
trigger libCOMI_gt_CM_Zeratul_ProphecyArtifactPathingSafety;
trigger libCOMI_gt_CM_Zeratul_ProphecyArtifactDebug;
trigger libCOMI_gt_CM_ZeratulTopBarWarpTrainStart;
trigger libCOMI_gt_CM_ZeratulTopBarWarpTrainFinish;
trigger libCOMI_gt_CM_ZeratulTopBarRallySet;
trigger libCOMI_gt_CM_ZeratulTopBarRallyRedirect;
trigger libCOMI_gt_CM_ZeratulTopBarRallyCancel;
trigger libCOMI_gt_CM_Zeratul_Trade;
trigger libCOMI_gt_CM_Zeratul_Trade_FullEnergyOn;
trigger libCOMI_gt_CM_Zeratul_Trade_FullEnergyOff;
trigger libCOMI_gt_CM_Zeratul_AutomatedAssimilatorAutoBuild;
trigger libCOMI_gt_CM_Zeratul_ReflectionShield;
trigger libCOMI_gt_CM_Zeratul_DarkTemplarRetreat;
trigger libCOMI_gt_CM_Zeratul_WarpPrismAutoUnload;
trigger libCOMI_gt_CM_Zeratul_WarpPrismAutoUnloadOff;
trigger libCOMI_gt_CM_Zeratul_WarpPrismSelectRift;
trigger libCOMI_gt_CM_Zeratul_WarpPrismMorphUnloadState;
trigger libCOMI_gt_CM_Zeratul_Projection_UnitLink;
trigger libCOMI_gt_CM_Zeratul_Projection_TimedLifeFate;
trigger libCOMI_gt_CM_Zeratul_Projection_Cancel;
trigger libCOMI_gt_CM_Zeratul_DevolveKills;
trigger libCOMI_gt_CM_Zeratul_ArtifactRush;
trigger libCOMI_gt_CM_Zeratul_TriggersInit;
trigger libCOMI_gt_CM_ZeratulArtifactUpgrades;
trigger libCOMI_gt_CM_ZeratulArtifactTriggerUpgrades;
trigger libCOMI_gt_CM_Zeratul_StasisDuration;
trigger libCOMI_gt_CM_ZeratulAvatarMinimapIcon;
trigger libCOMI_gt_CM_Zeratul_RallySetToZeratul;
trigger libCOMI_gt_ResourcePickupAllyNew;
trigger libCOMI_gt_CM_SoAShiftCheatFailSafeThermal;
trigger libCOMI_gt_CM_SoAShiftCheatFailSafeHHCallFleet;
trigger libCOMI_gt_CM_SoAShiftCheatFailSafeNovaBombing;
trigger libCOMI_gt_CM_SoATargetingForceOff;
trigger libCOMI_gt_CM_SoATargetingDeactivated;
trigger libCOMI_gt_CM_SoATargetingPointChosen;
trigger libCOMI_gt_CM_SoATargetingDirectionChosen;
trigger libCOMI_gt_CM_SoATargetingEffectFired;
trigger libCOMI_gt_CM_SoATargetingCancel;
trigger libCOMI_gt_CM_SoATargetingCancelFromUI;
trigger libCOMI_gt_CM_SoATargetingCameraShake;
trigger libCOMI_gt_CM_SoAOrbitalStrikeActivated;
trigger libCOMI_gt_CM_SoAOrbitalStrikeActivatedKarax;
trigger libCOMI_gt_CM_SoAGravitonBombActivated;
trigger libCOMI_gt_CM_SoAThermalLanceActivated;
trigger libCOMI_gt_CM_SoATimeFreezeOn;
trigger libCOMI_gt_CM_SoATimeFreezeCleanup;
trigger libCOMI_gt_PM_SoATargetingPurifierBeamOn;
trigger libCOMI_gt_PM_SoATargetingPurifierBeamOff;
trigger libCOMI_gt_PM_SoAStrafeActivated;
trigger libCOMI_gt_PM_SoASuperShieldsActivated;
trigger libCOMI_gt_CM_SoASuperChronoApply;
trigger libCOMI_gt_CM_SoASuperChronoCleanup;
trigger libCOMI_gt_CODConstrucInvulnerableOn;
trigger libCOMI_gt_CODConstrucInvulnerableOff;
trigger libCOMI_gt_VoidACShardModifyHealth;
trigger libCOMI_gt_ExpansionRocksChangeOwner;
trigger libCOMI_gt_CM_AbortMission;
trigger libCOMI_gt_CM_MissionScoreScreenExited;
trigger libCOMI_gt_CM_MissionHandlePlayerQuitGiveResources;
trigger libCOMI_gt_CM_MissionHandlePlayerQuitGameEnd;
trigger libCOMI_gt_CM_MissionVictoryCheatEndMission;
trigger libCOMI_gt_CM_MissionVictoryCallbackBlockActionQueueOneMinute;
trigger libCOMI_gt_CM_MissionVictoryCallbackBlockActionQueue;
trigger libCOMI_gt_CM_HatcheryPrimarySearch;
trigger libCOMI_gt_CM_StartingTech;
trigger libCOMI_gt_VoicePackDebug;
trigger libCOMI_gt_CM_HatcheryEggModels;
trigger libCOMI_gt_CM_HatcheryEggBirths;
trigger libCOMI_gt_CM_HeroDied;
trigger libCOMI_gt_CM_NovaRespawnBuyBack;
trigger libCOMI_gt_CM_NovaRespawnBuyBackCostAdjustment;
trigger libCOMI_gt_CM_HeroSpawn;
trigger libCOMI_gt_CM_GlobalCasterInit;
trigger libCOMI_gt_CM_AutoRevealRegionController;
trigger libCOMI_gt_CM_GPReminderAbilityUsed;
trigger libCOMI_gt_CM_HeroReviveQueue_HeroRevived;
trigger libCOMI_gt_CM_AbilityTransmissionRaynorHyperion;
trigger libCOMI_gt_CM_AbilityTransmissionRaynorBansheesUsed;
trigger libCOMI_gt_CM_AbilityTransmissionSwannDrone;
trigger libCOMI_gt_CM_AbilityTransmissionSwannLaserDrill;
trigger libCOMI_gt_CM_AbilityTransmissionSwannCombatDropUsed;
trigger libCOMI_gt_CM_AbilityTransmissionKerriganCrushingGrip;
trigger libCOMI_gt_CM_AbilityTransmissionKerriganAssimilation;
trigger libCOMI_gt_CM_AbilityTransmissionZagaraRoachDrop;
trigger libCOMI_gt_CM_AbilityTransmissionArtanisSuperShields;
trigger libCOMI_gt_CM_AbilityTransmissionVorazunTimeStop;
trigger libCOMI_gt_CM_AbilityTransmissionKaraxPassiveChronoBoost;
trigger libCOMI_gt_CM_AbilityTransmissionKaraxChronoMap;
trigger libCOMI_gt_CM_AbilityTransmissionAbathurMend;
trigger libCOMI_gt_CM_AbilityTransmissionAlarakEmpower;
trigger libCOMI_gt_CM_AbilityTransmissionAlarakDeathFleet;
trigger libCOMI_gt_CM_AbilityTransmissionAlarakOvercharge;
trigger libCOMI_gt_CM_AbilityTransmissionAlarakSacrifice;
trigger libCOMI_gt_CM_AbilityTransmissionNovaBombingRun;
trigger libCOMI_gt_CM_AbilityTransmissionNovaTransport;
trigger libCOMI_gt_CM_AbilityTransmissionNovaDMatrix;
trigger libCOMI_gt_CM_AbilityTransmissionStukovAleksander;
trigger libCOMI_gt_CM_AbilityTransmissionStukovApocalisk;
trigger libCOMI_gt_CM_AbilityTransmissionStukovInfestStructure;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateTalis;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateKaldalis;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateTaldarin;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateWarbringer;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateMojo;
trigger libCOMI_gt_CM_AbilityTransmissionFenixCreateClolarion;
trigger libCOMI_gt_CM_AbilityTransmissionFenixZealotSuit;
trigger libCOMI_gt_CM_AbilityTransmissionFenixDragoonSuit;
trigger libCOMI_gt_CM_AbilityTransmissionFenixArbiterSuit;
trigger libCOMI_gt_CM_AbilityTransmissionFenixMassRecall;
trigger libCOMI_gt_CM_HeroTransmissionFenixHeroDies;
trigger libCOMI_gt_CM_HeroTransmissionFenixHeroRepaired;
trigger libCOMI_gt_CM_HeroTransmissionFenixNameChange;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaGlevig;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaMurvar;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaDakrun;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaPrimalWurm;
trigger libCOMI_gt_CM_UnitTransmissionDehakaGlevigConstruct;
trigger libCOMI_gt_CM_UnitTransmissionDehakaMurvarConstruct;
trigger libCOMI_gt_CM_UnitTransmissionDehakaDakrunConstruct;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaChangeReminderLevel;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaChangeReminderLearn;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaChangeReminderTimerExpire;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaWurmStructureBuilt;
trigger libCOMI_gt_CM_AbilityTransmissionDehakaWurmStructureKilled;
trigger libCOMI_gt_CM_AbilityTransmissionHornerFleet;
trigger libCOMI_gt_CM_AbilityTransmissionHornerStation;
trigger libCOMI_gt_CM_UnitTransmissionHornerBomberBuild;
trigger libCOMI_gt_CM_AbilityTransmissionHornerBomberUse;
trigger libCOMI_gt_CM_AbilityTransmissionHornerBomberReminder;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateReaper;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateWarhound;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateFirebat;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateMarauder;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateHERC;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateGhost;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreatePhantom;
trigger libCOMI_gt_CM_AbilityTransmissionTychusCreateMedic;
trigger libCOMI_gt_CM_AbilityTransmissionTychusOdinUse;
trigger libCOMI_gt_CM_AbilityTransmissionTychusTransportUse;
trigger libCOMI_gt_CM_AbilityTransmissionTychusTransportReminder;
trigger libCOMI_gt_CM_UnitTransmissionTychusTransportBuild;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawFirstDeath;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawDeath;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawRevived;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawReviveReminder;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawRecruitAvailable;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawRecruited;
trigger libCOMI_gt_CM_UnitTransmissionTychusOutlawRecruitReminder;
trigger libCOMI_gt_CM_ArtifactTransmission_Hint;
trigger libCOMI_gt_CM_ArtifactTransmission_PickedUp;
trigger libCOMI_gt_CM_ArtifactTransmission_ProphecyCast;
trigger libCOMI_gt_CM_ArtifactTransmission_Upgraded;
trigger libCOMI_gt_CM_ArtifactTransmission_SelectAbilityReminder;
trigger libCOMI_gt_CM_GaryDeath;
trigger libCOMI_gt_CM_GaryUpgradeReminder;
trigger libCOMI_gt_CM_Mengsk_ArtilleryBuilt;
trigger libCOMI_gt_CM_Mengsk_ArtilleryStarted;
trigger libCOMI_gt_CM_AbilityTransmissionMengskNuclearAnnihilation;
trigger libCOMI_gt_CM_AbilityTransmissionMengskDirtyBomb;
trigger libCOMI_gt_CM_AbilityTransmissionMengskZergCalldown;
trigger libCOMI_gt_CM_AbilityTransmissionMengskForcedConscription;
trigger libCOMI_gt_CM_VOResourceSent;
trigger libCOMI_gt_CM_VOResourceRequest;
trigger libCOMI_gt_CM_VOEnemySpotted;
trigger libCOMI_gt_CM_VOUnitsLostCheck;
trigger libCOMI_gt_CM_VOEnemyCloakedSpotted;
trigger libCOMI_gt_CM_TransmissionSend;
trigger libCOMI_gt_CM_SendTransmissionCampaignTick;
trigger libCOMI_gt_CM_DropPod_Zerg_DontWait;
trigger libCOMI_gt_CM_DropPod_Terran_DontWait;
trigger libCOMI_gt_CM_CampaignUnitTeaching;
trigger libCOMI_gt_CM_CampaignUnitCreated;
trigger libCOMI_gt_CM_CampaignCyberneticsSelected;
trigger libCOMI_gt_CM_CampaignCybCoreBuilding;
trigger libCOMI_gt_CM_CampaignCyberneticsDestroyed;
trigger libCOMI_gt_CM_CampaignLaserDrillCreated;
trigger libCOMI_gt_CM_CampaignLaserDrillSelected;
trigger libCOMI_gt_CM_CampaignLaserDrillDamaged;
trigger libCOMI_gt_CM_CampaignSolarForgeSelected;
trigger libCOMI_gt_CM_CampaignUnitChangeOwner;
trigger libCOMI_gt_CM_CampaignUnitInfoUnitMorphes;
trigger libCOMI_gt_CM_CampaignMissionPerfLog;
trigger libCOMI_gt_CM_CampaignMissionInitialize;
trigger libCOMI_gt_CM_CampaignMissionPerfTestEnable;
trigger libCOMI_gt_CM_CampaignMissionIntroZoomIn;

// Library Initialization
void libCOMI_InitVariables ();

