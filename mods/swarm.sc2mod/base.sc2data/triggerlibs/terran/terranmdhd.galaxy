//==================================================================================================
//  Terran MediumHard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  TerranUpgradesMdHd
//--------------------------------------------------------------------------------------------------
void TerranUpgradesMdHd (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_TR_MarineStimPack );
            AISetStock( player, 1, c_TR_MarineShield );
            if (AITechCount(player, c_TU_Marauder, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_MarauderSlow );
            }
            if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_BansheeCloak );
            }
            AISetStock( player, 1, c_TR_InfantryWeapons1 );
            AISetStock( player, 1, c_TR_InfantryArmor1 );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_TR_InfantryWeapons2 );
                AISetStock( player, 1, c_TR_InfantryArmor2 );
                if (AITechCount(player, c_TU_Hellion, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_TR_HellionDamage );
                }
                if (AITechCount(player, c_TU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_TR_GhostCloak );
                }
                AISetStock( player, 1, c_TR_MechWeapons1 );
                AISetStock( player, 1, c_TR_MechPlating1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_TU_Battlecruiser, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_TR_BattlecruiserYamato );
                    }
                    AISetStock( player, 1, c_TR_InfantryWeapons3 );
                    AISetStock( player, 1, c_TR_InfantryArmor3 );
                    AISetStock( player, 1, c_TR_MechWeapons3 );
                    AISetStock( player, 1, c_TR_MechPlating3 );
                    if (AITechCount(player, c_TU_WidowMine, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_WidowMineActivate );
                    }
                    AISetStock( player, 1, c_TR_BuildingArmor );
                    AISetStock( player, 1, c_TR_BunkerSpace );
                    AISetStock( player, 1, c_TR_MissileTurretRange );
                    if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_TR_RavenTimed );
                    }
                    if (AITechCount(player, c_TU_Medivac, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_TR_MedivacEnergy );
                    }
                    if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_RavenEnergy );
                    }
                    if (AITechCount(player, c_TU_Battlecruiser, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_BattlecruiserEnergy );
                    }

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {

            if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_BansheeCloak );
            }
            AISetStock( player, 1, c_TR_MechWeapons1 );
            AISetStock( player, 1, c_TR_MechPlating1 );
            if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_MissileTurretRange );
            }

            if (phase >= c_ldPhaseLate) {

                if (AITechCount(player, c_TU_Battlecruiser, c_techCountInProgressOrBetter) >= 2) {
                    AISetStock( player, 1, c_TR_BattlecruiserYamato );
                }
                AISetStock( player, 1, c_TR_MechWeapons2 );
                AISetStock( player, 1, c_TR_MechPlating2 );
                if (AITechCount(player, c_TU_Marine, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_TR_MarineStimPack );
                }
                if (AITechCount(player, c_TU_Marine, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_TR_MarineShield );
                }

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_TR_MechWeapons3 );
                    AISetStock( player, 1, c_TR_MechPlating3 );
                    if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_TR_RavenTimed );
                    }
                    if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_RavenEnergy );
                    }
                    if (AITechCount(player, c_TU_Battlecruiser, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_BattlecruiserEnergy );
                    }
                    if (AITechCount(player, c_TU_Marauder, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_TR_MarauderSlow );
                    }
                    AISetStock( player, 1, c_TR_InfantryWeapons3 );
                    AISetStock( player, 1, c_TR_InfantryArmor3 );
                    if (AITechCount(player, c_TU_Hellion, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_HellionDamage );
                    }
                    if (AITechCount(player, c_TU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_TR_GhostCloak );
                    }
                    if (AITechCount(player, c_TU_WidowMine, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_TR_WidowMineActivate );
                    }
                    AISetStock( player, 1, c_TR_BuildingArmor );
                    AISetStock( player, 1, c_TR_BunkerSpace );
                    AISetStock( player, 1, c_TR_MissileTurretRange );
                    if (AITechCount(player, c_TU_Medivac, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_TR_MedivacEnergy );
                    }

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int TerranOpenArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 11 foodCost and 560 resCost after about 360 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TB_Barracks, 2);
            AIAddToStockArmy(player, c_TU_Marine, 5);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            // validation: 11 units above with average cost 11 food and 612 resources
            duration = 373 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TB_Factory, 1);
            AIAddToStockArmy(player, c_TU_Marine, 5);
            AIAddToStockArmy(player, c_TU_Hellion, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            // validation: 10 units above with average cost 11 food and 550 resources
            duration = 358 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 15 foodCost and 880 resCost after about 420 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 7);
            AIAddToStockArmy(player, c_TU_Marauder, 3);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            // validation: 14 units above with average cost 17 food and 949 resources
            duration = 447 + RandomInt(-14, 22);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 5);
            AIAddToStockArmy(player, c_TU_Hellion, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            // validation: 13 units above with average cost 17 food and 850 resources
            duration = 428 + RandomInt(-14, 21);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 20 foodCost and 1200 resCost after about 540 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            // validation: 18 units above with average cost 22 food and 1224 resources
            duration = 558 + RandomInt(-18, 27);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 6);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmy(player, c_TU_Hellion, 5);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            // validation: 17 units above with average cost 24 food and 1250 resources
            duration = 576 + RandomInt(-19, 28);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 11 foodCost and 620 resCost after about 240 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 4);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Marauder, 1);
            // validation: 10 units above with average cost 12 food and 674 resources
            duration = 254 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 5);
            AIAddToStockArmy(player, c_TU_Hellion, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marine, 2, c_TU_Hellion, 1);
            // validation: 11 units above with average cost 13 food and 650 resources
            duration = 255 + RandomInt(-8, 12);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 12 foodCost and 1200 resCost after about 560 seconds
        AIAddToStockArmy(player, c_TU_Banshee, 3);
        AIAddToStockArmy(player, c_TU_Viking, 2);
        // validation: 5 units above with average cost 13 food and 1200 resources
        duration = 571 + RandomInt(-19, 28);
    }
    else {
        return TerranOpenArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenInitMdHd
//--------------------------------------------------------------------------------------------------
void TerranOpenInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, TerranOpenArmyInitMdHd);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenBuildMdHd
//--------------------------------------------------------------------------------------------------
void TerranOpenBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_TB_CommandCenter_Alias );
        AISetStock( player, 10, c_TU_SCV );
        AISetStock( player, 1, c_TB_SupplyDepot );
        AISetStock( player, 12, c_TU_SCV );
        AISetStock( player, 1, c_TB_Barracks );
        AISetStock( player, 14, c_TU_SCV );
        AISetStock( player, 1, c_TB_Refinery );
        AISetStock( player, 16, c_TU_SCV );
        AISetStock( player, 1, c_TU_Marine );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStock( player, 2, c_TB_SupplyDepot );
        AISetStock( player, 2, c_TU_Marine );
        AISetStockUnitNext( player, 20, c_TU_SCV, c_stockIdle );
        AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_TB_CommandCenter_Alias );
        AISetStock( player, 10, c_TU_SCV );
        AISetStock( player, 1, c_TB_SupplyDepot );
        AISetStock( player, 12, c_TU_SCV );
        AISetStock( player, 1, c_TB_Barracks );
        AISetStock( player, 14, c_TU_SCV );
        AISetStock( player, 1, c_TB_Refinery );
        AISetStock( player, 16, c_TU_SCV );
        AISetStock( player, 1, c_TU_Marine );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStock( player, 2, c_TB_SupplyDepot );
        AISetStock( player, 2, c_TU_Marine );
        AISetStockUnitNext( player, 20, c_TU_SCV, c_stockIdle );
        AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_TB_Barracks );
        AISetStock( player, 1, c_TB_BarracksTechLab );
        AISetStock( player, 2, c_TB_Refinery );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_TB_CommandCenter_Alias );
        AISetStock( player, 10, c_TU_SCV );
        AISetStock( player, 1, c_TB_SupplyDepot );
        AISetStock( player, 12, c_TU_SCV );
        AISetStock( player, 1, c_TB_Barracks );
        AISetStock( player, 14, c_TU_SCV );
        AISetStock( player, 1, c_TB_Refinery );
        AISetStock( player, 16, c_TU_SCV );
        AISetStock( player, 1, c_TU_Marine );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStock( player, 2, c_TB_SupplyDepot );
        AISetStock( player, 2, c_TU_Marine );
        AISetStockUnitNext( player, 20, c_TU_SCV, c_stockIdle );
        AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_TB_Barracks );
        AISetStock( player, 1, c_TB_BarracksTechLab );
        AISetStock( player, 2, c_TB_Refinery );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_TB_CommandCenter_Alias );
        AISetStock( player, 10, c_TU_SCV );
        AISetStock( player, 1, c_TB_SupplyDepot );
        AISetStock( player, 12, c_TU_SCV );
        AISetStock( player, 1, c_TB_Barracks );
        AISetStock( player, 16, c_TU_SCV );
        if (TerranMacroExpand(player)) { return; }
        AISetStock( player, 1, c_TU_Marine );
        AISetStock( player, 17, c_TU_SCV );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStock( player, 2, c_TB_SupplyDepot );
        AISetStock( player, 2, c_TU_Marine );
        AISetStock( player, 1, c_TB_Refinery );
        AISetStockUnitNext( player, 26, c_TU_SCV, c_stockIdle );
        AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_TB_Barracks );
        AISetStockUnitNext( player, 1, c_TB_BarracksTechLab, c_stockIdle );
        AISetStock( player, 2, c_TB_Refinery );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_TB_CommandCenter_Alias );
        AISetStock( player, 10, c_TU_SCV );
        AISetStock( player, 1, c_TB_SupplyDepot );
        AISetStock( player, 15, c_TU_SCV );
        if (TerranMacroExpand(player)) { return; }
        AISetStock( player, 16, c_TU_SCV );
        AISetStock( player, 1, c_TB_Refinery );
        AISetStock( player, 17, c_TU_SCV );
        AISetStock( player, 1, c_TB_Barracks );
        AISetStock( player, 18, c_TU_SCV );
        AISetStock( player, 2, c_TB_Refinery );
        AISetStock( player, 19, c_TU_SCV );
        AISetStock( player, 2, c_TB_SupplyDepot );
        AISetStock( player, 1, c_TB_Factory );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStockUnitNext( player, 26, c_TU_SCV, c_stockIdle );
        AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_TB_Starport );
        AISetStock( player, 2, c_TB_StarportTechLab );
    }

    TerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    TerranGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    TerranUpgradesMdHd(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 26, c_TU_SCV);

    TerranTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_TU_Medivac );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int TerranMidArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 20 foodCost and 1200 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Marauder, 5);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            // validation: 17 units above with average cost 22 food and 1349 resources
            duration = 323 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 6);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 12 units above with average cost 20 food and 1300 resources
            duration = 310 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 25 foodCost and 1500 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Ghost, 1, c_TU_Reaper, 2);
            // validation: 18 units above with average cost 24 food and 1500 resources
            duration = 327 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Marauder, 3);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 15 units above with average cost 24 food and 1525 resources
            duration = 329 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 6);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 1);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Viking, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            // validation: 14 units above with average cost 25 food and 1750 resources
            duration = 352 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 26 foodCost and 1580 resCost after about 350 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Ghost, 1, c_TU_Reaper, 2);
            // validation: 20 units above with average cost 26 food and 1600 resources
            duration = 351 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 9);
            AIAddToStockArmy(player, c_TU_Marauder, 3);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 16 units above with average cost 25 food and 1575 resources
            duration = 347 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 7);
            AIAddToStockArmy(player, c_TU_Marauder, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 1);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Viking, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            // validation: 15 units above with average cost 26 food and 1800 resources
            duration = 370 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 36 foodCost and 2200 resCost after about 560 seconds
        // note: mid macro build did not send opening attack at 240 time
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            // validation: 24 units above with average cost 32 food and 2424 resources
            duration = 571 + RandomInt(-27, 40);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_Hellion, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 3);
            // validation: 23 units above with average cost 35 food and 2349 resources
            duration = 577 + RandomInt(-27, 40);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Marauder, 3);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_Ghost, 1);
            AIAddToStockArmy(player, c_TU_SiegeTank, 1);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Viking, 1);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            // validation: 22 units above with average cost 35 food and 2599 resources
            duration = 614 + RandomInt(-28, 42);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 18 foodCost and 1800 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Viking, 3);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 1);
            // validation: 8 units above with average cost 20 food and 1887 resources
            duration = 345 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 6);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            // validation: 11 units above with average cost 22 food and 1750 resources
            duration = 344 + RandomInt(-11, 17);
        }
    }
    else {
        return TerranMidArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  TerranMidInitMdHd
//--------------------------------------------------------------------------------------------------
void TerranMidInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, TerranMidArmyInitMdHd);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidBuildMdHd
//--------------------------------------------------------------------------------------------------
void TerranMidBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    TerranBasicEconomy(player, c_ldPhaseMid, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_TU_Medivac );
    }
    TerranBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    TerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    TerranGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 26, c_TU_SCV);

    if (buildType == e_buildType_Rush) {
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStock( player, 2, c_TB_Factory );
        AISetStock( player, 2, c_TB_FactoryTechLab );
        AISetStock( player, 2, c_TB_Starport );
        AISetStock( player, 2, c_TB_StarportTechLab );
    }
    else if (buildType == e_buildType_Power) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStock( player, 2, c_TB_Factory );
        AISetStock( player, 2, c_TB_FactoryTechLab );
        AISetStock( player, 2, c_TB_Starport );
        AISetStock( player, 2, c_TB_StarportTechLab );
    }
    else if (buildType == e_buildType_Macro) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStock( player, 2, c_TB_Factory );
        AISetStock( player, 2, c_TB_FactoryTechLab );
        AISetStock( player, 2, c_TB_Starport );
        AISetStock( player, 2, c_TB_StarportTechLab );
    }
    else if (buildType == e_buildType_Air) {
        if (TerranMacroExpand(player)) { return; }
        AISetStock( player, 2, c_TB_Starport );
        AISetStock( player, 2, c_TB_StarportTechLab );
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_TU_Raven );
        AISetStock( player, 1, c_TB_OrbitalCommand );
        AISetStock( player, 2, c_TB_MissileTurret );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 60, c_TU_SCV);

    TerranUpgradesMdHd(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_TU_Raven );
    AISetStock( player, 1, c_TB_OrbitalCommand );

    TerranTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  TerranLateArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int TerranLateArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 36 foodCost and 2200 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 16);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_Ghost, 1);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            // validation: 27 units above with average cost 34 food and 2324 resources
            duration = 282 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 14);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 26 units above with average cost 40 food and 2600 resources
            duration = 308 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 1);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            // validation: 23 units above with average cost 37 food and 2475 resources
            duration = 296 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 39 foodCost and 2400 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Hellion, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 8);
            // validation: 18 units above with average cost 36 food and 2800 resources
            duration = 315 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_SiegeTank, 5);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Thor, 2);
            // validation: 17 units above with average cost 39 food and 2975 resources
            duration = 329 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_SiegeTank, 3);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            AIAddToStockArmy(player, c_TU_Viking, 4);
            AIAddToStockArmy(player, c_TU_Banshee, 1);
            // validation: 19 units above with average cost 38 food and 3075 resources
            duration = 333 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 41 foodCost and 2600 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmy(player, c_TU_Ghost, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Ghost, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_Medivac, 1);
            AIAddToStockArmy(player, c_TU_Raven, 2);
            // validation: 25 units above with average cost 36 food and 3350 resources
            duration = 348 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 4);
            AIAddToStockArmy(player, c_TU_Raven, 2);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            // validation: 19 units above with average cost 36 food and 3050 resources
            duration = 333 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 44 foodCost and 2800 resCost after about 340 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 16);
            AIAddToStockArmy(player, c_TU_Marauder, 8);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_Medivac, 3);
            // validation: 31 units above with average cost 46 food and 3450 resources
            duration = 376 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            AIAddToStockArmy(player, c_TU_SiegeTank, 3);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 25 units above with average cost 45 food and 3225 resources
            duration = 363 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
            // validation: 21 units above with average cost 42 food and 3200 resources
            duration = 356 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 28 foodCost and 2800 resCost after about 300 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Viking, 3);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 1);
            // validation: 10 units above with average cost 28 food and 2825 resources
            duration = 301 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 3);
            // validation: 7 units above with average cost 28 food and 3050 resources
            duration = 311 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            AIAddToStockArmy(player, c_TU_Viking, 1);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 1);
            // validation: 15 units above with average cost 33 food and 2800 resources
            duration = 313 + RandomInt(-10, 15);
        }
    }
    else {
        return TerranLateArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  TerranFinalArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int TerranFinalArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 49 foodCost and 3200 resCost after about 260 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 28);
            AIAddToStockArmy(player, c_TU_Marauder, 8);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_Medivac, 3);
            // validation: 41 units above with average cost 54 food and 3600 resources
            duration = 280 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 20);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 3);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            // validation: 35 units above with average cost 53 food and 3775 resources
            duration = 284 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 16);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmy(player, c_TU_Medivac, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Banshee, 2, c_TU_Thor, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
            // validation: 31 units above with average cost 54 food and 3800 resources
            duration = 286 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 52 foodCost and 3500 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Hellion, 4);
            AIAddToStockArmy(player, c_TU_SiegeTank, 8);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            // validation: 25 units above with average cost 50 food and 3700 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_SiegeTank, 6);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Thor, 3);
            // validation: 21 units above with average cost 50 food and 3850 resources
            duration = 288 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_SiegeTank, 4);
            AIAddToStockArmy(player, c_TU_WidowMine, 2);
            AIAddToStockArmy(player, c_TU_Thor, 2);
            AIAddToStockArmy(player, c_TU_Viking, 4);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            // validation: 22 units above with average cost 50 food and 4100 resources
            duration = 297 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 56 foodCost and 3800 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_TU_Marine, 16);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmy(player, c_TU_Ghost, 4);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Ghost, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Ghost, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 4);
            AIAddToStockArmy(player, c_TU_Medivac, 1);
            AIAddToStockArmy(player, c_TU_Raven, 2);
            // validation: 35 units above with average cost 50 food and 4200 resources
            duration = 305 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 12);
            AIAddToStockArmy(player, c_TU_Marauder, 4);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 4);
            AIAddToStockArmy(player, c_TU_Raven, 2);
            AIAddToStockArmy(player, c_TU_Thor, 1);
            // validation: 27 units above with average cost 48 food and 3750 resources
            duration = 288 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 60 foodCost and 4100 resCost after about 320 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_TU_Marine, 20);
            AIAddToStockArmy(player, c_TU_Marauder, 16);
            AIAddToStockArmy(player, c_TU_Ghost, 2);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            // validation: 42 units above with average cost 66 food and 4600 resources
            duration = 344 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_TU_Marine, 10);
            AIAddToStockArmy(player, c_TU_Marauder, 6);
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_Hellion, 4);
            AIAddToStockArmy(player, c_TU_SiegeTank, 3);
            AIAddToStockArmy(player, c_TU_WidowMine, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 2);
            // validation: 32 units above with average cost 66 food and 4762 resources
            duration = 349 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Marine, 8);
            AIAddToStockArmy(player, c_TU_Marauder, 3);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmyPickFrom2Count(player, c_TU_Marauder, 1, c_TU_Reaper, 2);
            AIAddToStockArmy(player, c_TU_SiegeTank, 2);
            AIAddToStockArmy(player, c_TU_WidowMine, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 2);
            // validation: 27 units above with average cost 61 food and 4924 resources
            duration = 348 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 38 foodCost and 3800 resCost after about 280 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_TU_Viking, 4);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 2);
            // validation: 12 units above with average cost 36 food and 3750 resources
            duration = 275 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_TU_Viking, 2);
            AIAddToStockArmy(player, c_TU_Banshee, 1);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 5);
            // validation: 8 units above with average cost 37 food and 4200 resources
            duration = 290 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_TU_Marine, 16);
            AIAddToStockArmy(player, c_TU_Thor, 2);
            AIAddToStockArmy(player, c_TU_Viking, 1);
            AIAddToStockArmy(player, c_TU_Banshee, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_TU_Viking, c_TU_Banshee), 2);
            AIAddToStockArmy(player, c_TU_Battlecruiser, 1);
            // validation: 24 units above with average cost 47 food and 3700 resources
            duration = 293 + RandomInt(-9, 14);
        }
    }
    else {
        return TerranFinalArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  TerranLateInitMdHd
//--------------------------------------------------------------------------------------------------
void TerranLateInitMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, TerranLateArmyInitMdHd);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, TerranFinalArmyInitMdHd);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  TerranLateBuildMdHd
//--------------------------------------------------------------------------------------------------
void TerranLateBuildMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    TerranBasicEconomy(player, c_ldPhaseLate, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_TU_Medivac );
    }
    TerranBasicExpansion(player, c_ldPhaseLate, 12000, 3500);

    TerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    TerranGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 26, c_TU_SCV);

    if (buildType == e_buildType_Core) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_StarportTechLab, c_stockIdle );
    }
    else if (buildType == e_buildType_HighTech) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_StarportTechLab, c_stockIdle );
    }
    else if (buildType == e_buildType_Special) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_StarportTechLab, c_stockIdle );
    }
    else if (buildType == e_buildType_Mixed) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_StarportTechLab, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (TerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_TB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_BarracksTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_FactoryTechLab, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_TB_StarportTechLab, c_stockIdle );
    }

    AISetStock( player, 2, c_TU_Raven );
    AISetStock( player, 1, c_TB_OrbitalCommand );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 3, c_TU_Medivac );
    AISetStock( player, 3, c_TU_Raven );
    AISetStock( player, 2, c_TB_MissileTurret );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 60, c_TU_SCV);

    if (lateLoop <= 0) { // First Late Loop
        TerranUpgradesMdHd(player, c_ldPhaseLate);
        TerranTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        TerranUpgradesMdHd(player, c_ldPhaseFinal);
        TerranTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenMdHd
//--------------------------------------------------------------------------------------------------
void TerranOpenMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        TerranOpenInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { TerranOpenBuildMdHd(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState TerranMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranMidMdHd
//--------------------------------------------------------------------------------------------------
void TerranMidMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        TerranMidInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { TerranMidBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState TerranMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLateMdHd
//--------------------------------------------------------------------------------------------------
void TerranLateMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        TerranLateInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { TerranLateBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState TerranMdHd"); }
}

