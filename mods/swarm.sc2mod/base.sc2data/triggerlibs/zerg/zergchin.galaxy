//==================================================================================================
//  Zerg Melee Cheater-Insane
//==================================================================================================

// very similar to Very Hard builds, just tweaked for the extra resource rate

bool ZergOpenRush6PoolChIn (int player);                     // 6 pool zergling rush
bool ZergOpenRush10PoolChIn (int player);                    // 10 pool zergling rush
bool ZergOpenTimingLingBaneChIn (int player);                // zergling + baneling build
bool ZergOpenTimingRoachChIn (int player);                   // pure roach build
bool ZergOpenTimingLingRoachChIn (int player);               // zergling + roach build
bool ZergOpenPowerMacroQuickExpGndChIn (int player);         // 1v1 quick ground expansion
bool ZergOpenPowerMacroDefenseExpGndChIn (int player);       // team game defensive ground expansion
bool ZergOpenAirOneBaseMutaChIn (int player);                // single base "island" muta build
bool ZergOpenAirOneBaseDropChIn (int player);                // single base "island" drop build
bool ZergOpenAirQuickExpandAirChIn (int player);             // quick expand air build

bool ZergMidRushTimingLingBaneRoachChIn (int player);        // continue the early pressure with ling/bane/roach
bool ZergMidRushTimingDefensiveExpandChIn (int player);      // transition from early pressure to a macro game
bool ZergMidPowerPureMutaChIn (int player);                  // 2 base muta harassment, with ling+static defense
bool ZergMidPowerLingBaneMutaChIn (int player);              // attack with ling+bane+muta together
bool ZergMidPowerFoodCapRoachChIn (int player);              // quick food cap roach rush
bool ZergMidPowerRoachInfestorChIn (int player);             // standard 2-3 base roach + infestor
bool ZergMidPowerRoachHydraChIn (int player);                // 2-3 base roach + hydra build
bool ZergMidPowerSwarmHostChIn (int player);                 // 2 base swarm host build
bool ZergMidMacroRoachHydraChIn (int player);                // macro toward late game roach + hydra
bool ZergMidMacroRoachInfestorChIn (int player);             // macro toward late game roach + infestor
bool ZergMidMacroUltraliskChIn (int player);                 // macro toward late game ultralisk 
bool ZergMidMacroBroodlordChIn (int player);                 // macro toward late game broodlord
bool ZergMidAirOneBaseMutaChIn (int player);                 // continue single base "island" air build
bool ZergMidAirOneBaseDropChIn (int player);                 // continue single base "island" drop build
bool ZergMidAirExpansionMutaChIn (int player);               // quick expand air only attack
bool ZergMidAirExpansionMixedAirChIn (int player);           // quick expand air only attack
bool ZergMidAirExpansionDropChIn (int player);               // quick expand drop + air attack
bool ZergMidAirMacroChIn (int player);                       // macro toward a large late game air force

//--------------------------------------------------------------------------------------------------
//  ZergOpenChIn
//--------------------------------------------------------------------------------------------------
void ZergOpenChIn (int player) {
    bool done = false;
    int buildIndex;

    AIEarlyDefenseScouting(player);

    // see if we need to switch builds
    UpdateHDZergOpening(player);

    buildIndex = AIGetUserInt(player, c_currentBuildIndex);
    if (buildIndex == e_hdBuildIndex_ZOpenRush_6Pool)                     { done = ZergOpenRush6PoolChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenRush_10Pool)               { done = ZergOpenRush10PoolChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenTiming_LingBane)           { done = ZergOpenTimingLingBaneChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenTiming_Roach)              { done = ZergOpenTimingRoachChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenTiming_LingRoach)          { done = ZergOpenTimingLingRoachChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenPowerMacro_QuickExpGnd)    { done = ZergOpenPowerMacroQuickExpGndChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenPowerMacro_DefenseExpGnd)  { done = ZergOpenPowerMacroDefenseExpGndChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenAir_OneBaseMuta)           { done = ZergOpenAirOneBaseMutaChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenAir_OneBaseDrop)           { done = ZergOpenAirOneBaseDropChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZOpenAir_QuickExpandAir)        { done = ZergOpenAirQuickExpandAirChIn(player); }
    else { ErrorMeleeScript(player, "Invalid Open BuildIndex ZergChIn"); }

    if (done) {
        ZergHDInitMid(player); // Transition to MidGame
    }
}

//--------------------------------------------------------------------------------------------------
//  ZergMidChIn
//--------------------------------------------------------------------------------------------------
void ZergMidChIn (int player) {
    bool done = false;
    int buildIndex;
    
    // enable scouting as appropriate
    if (AIGetUserInt(player, c_numGroundStartLocs) > 0) {
        AIScoutingEnable(player, 15, c_ZU_Drone);
        AIEarlyDefenseScouting(player);
    }
    else {
        AIScoutingEnable(player, 1, c_ZU_Zergling);
    }

    // see if we need to switch builds
    UpdateHDZergMidGame(player);
    
    buildIndex = AIGetUserInt(player, c_currentBuildIndex);
    if (buildIndex == e_hdBuildIndex_ZMidRushTiming_LingBaneRoach)        { done = ZergMidRushTimingLingBaneRoachChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidRushTiming_DefensiveExpand) { done = ZergMidRushTimingDefensiveExpandChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_PureMuta)             { done = ZergMidPowerPureMutaChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_LingBaneMuta)         { done = ZergMidPowerLingBaneMutaChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_FoodCapRoach)         { done = ZergMidPowerFoodCapRoachChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_RoachInfestor)        { done = ZergMidPowerRoachInfestorChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_RoachHydra)           { done = ZergMidPowerRoachHydraChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidPower_SwarmHost)            { done = ZergMidPowerSwarmHostChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidMacro_RoachHydra)           { done = ZergMidMacroRoachHydraChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidMacro_RoachInfestor)        { done = ZergMidMacroRoachInfestorChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidMacro_Ultralisk)            { done = ZergMidMacroUltraliskChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidMacro_Broodlord)            { done = ZergMidMacroBroodlordChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_OneBaseMuta)            { done = ZergMidAirOneBaseMutaChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_OneBaseDrop)            { done = ZergMidAirOneBaseDropChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_ExpansionMuta)          { done = ZergMidAirExpansionMutaChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_ExpansionMixedAir)      { done = ZergMidAirExpansionMixedAirChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_ExpansionDrop)          { done = ZergMidAirExpansionDropChIn(player); }
    else if (buildIndex == e_hdBuildIndex_ZMidAir_Macro)                  { done = ZergMidAirMacroChIn(player); }
    else { ErrorMeleeScript(player, "Invalid Mid BuildIndex ZergChIn"); }

    if (done) {
        ZergHDInitLate(player); // Transition to LateGame
    }
}

//==================================================================================================
//  OPENINGS
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  ZergOpenRush6PoolChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenRush6PoolChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 6, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 7, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 14, c_ZU_Zergling );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 18, c_ZU_Zergling );
    AISetStock( player, 3, c_ZU_Overlord );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 30, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 12, c_ZU_Drone, 1, c_ZB_SpawningPool, c_techCountInProgressOrBetter);
    AISetAttackStatus(player, c_ZU_Zergling, 2, 6, c_continuousMerge);

    if (AIGetTime() < 360) {
        if (AITechCount(player, c_ZU_Zergling, c_techCountCompleteOnly) < 24) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenRush10PoolChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenRush10PoolChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 11, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 10, c_ZU_Zergling );
    AISetStock( player, 3, c_ZU_Overlord );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 26, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 16, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 12, c_ZU_Drone, 1, c_ZB_SpawningPool, c_techCountInProgressOrBetter);
    AISetAttackStatus(player, c_ZU_Zergling, 2, 10, c_continuousMerge);

    if (AIGetTime() < 360) {
        if (AITechCount(player, c_ZU_Zergling, c_techCountCompleteOnly) < 20) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenTimingLingBaneChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenTimingLingBaneChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 8, c_ZU_Zergling );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 1, c_ZB_BanelingNest );
    AISetStock( player, 10, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 10, c_ZU_Baneling );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Baneling );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 12, c_ZU_Drone, 1, c_ZU_Zergling, c_techCountCompleteOnly);
    AISetAttackStatus(player, c_ZU_Zergling, 4, 30, c_continuousMerge);
    if (AITechCount(player, c_ZU_Zergling, c_techCountCompleteOnly) >= 6) {
        AISetAttackStatus(player, c_ZU_Baneling, 1, 10, c_continuousMerge);
    }
    
    if (AIGetTime() < 450) {
        if (AITechCount(player, c_ZU_Drone, c_techCountCompleteOnly) < 20) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenTimingRoachChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenTimingRoachChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZU_Zergling );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Roach );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 11, c_ZU_Roach );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 21, c_ZU_Drone );
    AISetStock( player, 13, c_ZU_Roach );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 12, c_ZU_Drone, 1, c_ZU_Zergling, c_techCountCompleteOnly);
    AISetAttackStatus(player, c_ZU_Roach, 2, 7, c_continuousMerge);

    if (AIGetTime() < 390) {
        if (AITechCount(player, c_ZU_Roach, c_techCountInProgressOrBetter) < 11) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenTimingLingRoachChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenTimingLingRoachChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 4, c_ZU_Zergling );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 8, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 6, c_ZU_Roach );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 14, c_ZU_Zergling );
    AISetStock( player, 8, c_ZU_Roach );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 22, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 12, c_ZU_Drone, 1, c_ZU_Zergling, c_techCountCompleteOnly);
    AISetAttackStatus(player, c_ZU_Roach, 2, 6, c_continuousMerge);
    
    if (AIGetTime() < 360) {
        if (AITechCount(player, c_ZU_Roach, c_techCountInProgressOrBetter) < 8) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenPowerMacroQuickExpGndChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenPowerMacroQuickExpGndChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 20, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 16, c_ZU_Drone, 1, c_ZU_Zergling, c_techCountCompleteOnly);
    if (AIGetTime() < 240) {
        if (AITechCount(player, c_ZB_Hatchery_Alias, c_techCountInProgressOrBetter) < 2) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenPowerMacroDefenseExpGndChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenPowerMacroDefenseExpGndChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Zergling );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 16) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 8, c_ZU_Zergling );
    AISetStock( player, 19, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AIScoutingEnableWithPreReq(player, 16, c_ZU_Drone, 1, c_ZU_Zergling, c_techCountCompleteOnly);
    if (AIGetTime() < 240) {
        if (AITechCount(player, c_ZB_Hatchery_Alias, c_techCountInProgressOrBetter) < 2) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenAirOneBaseMutaChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenAirOneBaseMutaChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 12, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    
    ZergBasicDefenseStock(player);
    
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Mutalisk );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Mutalisk );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);

    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Mutalisk, 1, 5, c_continuousMerge);
    
    if (AIGetTime() < 450) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 7) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenAirOneBaseDropChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenAirOneBaseDropChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 14, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Mutalisk );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);

    //---------------------------------------------------------
    
    if (AITechCount(player, c_ZR_OverlordTransport, c_techCountCompleteOnly) > 0) {
        AISetAttackStatus(player, c_ZU_Zergling, 4, 16, c_continuousMerge);
        AISetAttackStatus(player, c_ZU_Mutalisk, 1, 6, c_continuousMerge);
    }
    
    if (AIGetTime() < 540) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 8) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenAirQuickExpandAirChIn
//--------------------------------------------------------------------------------------------------
bool ZergOpenAirQuickExpandAirChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 18, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);

    //---------------------------------------------------------
    
    if (AIGetTime() < 240) {
        if (AITechCount(player, c_ZB_Hatchery_Alias, c_techCountInProgressOrBetter) < 2) {
            return false;
        }
    }

    return true;  // Transition to MidGame
}

//==================================================================================================
//  MID GAME
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  ZergMidRushTimingLingBaneRoachChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidRushTimingLingBaneRoachChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 8, c_ZU_Zergling );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 1, c_ZB_BanelingNest );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Baneling );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 6, c_ZU_Roach );
    AISetStock( player, 12, c_ZU_Baneling );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 20, c_ZU_Zergling );
    
    if (AITechCount(player, c_ZU_Overlord, c_techCountQueuedOrBetter) >= 7) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Roach );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Roach );


    AIEnableStock(player);
    
    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Zergling, 2, 30, c_continuousMerge);
    if (AITechCount(player, c_ZU_Zergling, c_techCountCompleteOnly) >= 12) {
        AISetAttackStatus(player, c_ZU_Baneling, 1, 4, c_continuousMerge);
        AISetAttackStatus(player, c_ZU_Roach, 1, 4, c_continuousMerge);
    }
    
    if (AIGetTime() < 480) {
        if (AITechCount(player, c_ZU_Roach, c_techCountInProgressOrBetter) < 10 || 
            AITechCount(player, c_ZU_Baneling, c_techCountInProgressOrBetter) < 10) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidRushTimingDefensiveExpandChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidRushTimingDefensiveExpandChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 4, c_ZU_Zergling );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Zergling );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 6, c_ZU_Roach );

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 20) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Roach );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Zergling );

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AISetAttackStatus(player, c_ZU_Zergling, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Roach, 1, 999, c_continuousMerge);

    if (AIGetTime() < 480) {
        if (AITechCount(player, c_ZB_Hatchery_Alias, c_techCountInProgressOrBetter) < 2) {
            return false;
        }
        if (AITechCount(player, c_ZU_Roach, c_techCountInProgressOrBetter) < 10) {
            return false;
        }
    }
    
    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerPureMutaChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerPureMutaChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 4, c_ZU_Zergling );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 12, c_ZU_Zergling );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 32, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 6, c_ZU_Mutalisk );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 20, c_ZU_Zergling );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Mutalisk );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Overlord );
    AISetStock( player, 50, c_ZU_Drone );
    
    AIEnableStock(player);

    //---------------------------------------------------------
    
    AISetAttackStatus(player, c_ZU_Zergling, 4, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Mutalisk, 1, 8, c_continuousMerge);
    
    if (AIGetTime() < 570) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 10) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerLingBaneMutaChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerLingBaneMutaChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 4, c_ZU_Zergling );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZU_Queen );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_BanelingNest );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 32, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Mutalisk );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 8, c_ZU_Baneling );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 10, c_ZU_Baneling );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Zergling, 4, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Mutalisk, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Baneling, 2, 8, c_continuousMerge);
    
    if (AIGetTime() < 630) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 8) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerFoodCapRoachChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerFoodCapRoachChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);
    
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 19, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 21, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 28, c_ZU_Drone );
    AISetStock( player, 9, c_ZU_Roach );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 17, c_ZU_Roach );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 32, c_ZU_Drone );
    AISetStock( player, 25, c_ZU_Roach );
    AISetStock( player, 13, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStockUnitNext( player, 31, c_ZU_Roach, c_stockAlways ); 
    AISetStock( player, 15, c_ZU_Overlord );
    AISetStock( player, 36, c_ZU_Drone );
    AISetStockUnitNext( player, 37, c_ZU_Roach, c_stockAlways ); 
    AISetStock( player, 17, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AISetAttackStatus(player, c_ZU_Zergling, 4, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Roach, 2, 25, c_continuousMerge);
    
    if (AIGetTime() < 660) {
        if (AITechCount(player, c_ZU_Roach, c_techCountInProgressOrBetter) < 31) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerRoachInfestorChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerRoachInfestorChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 8, c_ZU_Roach );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 3, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_InfestationPit );
    AISetStock( player, 9, c_ZU_Overlord ); 
    AISetStockUnitNext( player, 32, c_ZU_Drone, c_stockAlways );
    AISetStock( player, 12, c_ZU_Roach );
    AISetStock( player, 4, c_ZU_Infestor );
    AISetStock( player, 10, c_ZU_Overlord );
    AISetStockUnitNext( player, 34, c_ZU_Drone, c_stockAlways );
    AISetStock( player, 2, c_ZB_EvolutionChamber ); 
    AISetStock( player, 6, c_ZU_Infestor );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStockUnitNext( player, 16, c_ZU_Roach, c_stockAlways );
    AISetStock( player, 12, c_ZU_Overlord );
    AISetStockUnitNext( player, 40, c_ZU_Drone, c_stockAlways );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Infestor, 2, 4, c_continuousMerge);
    
    if (AIGetTime() < 630) {
        if (AITechCount(player, c_ZU_Infestor, c_techCountInProgressOrBetter) < 6) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerRoachHydraChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerRoachHydraChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 8, c_ZU_Roach );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 3, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_HydraliskDen );
    AISetStock( player, 10, c_ZU_Overlord );
    AISetStockUnitNext( player, 32, c_ZU_Drone, c_stockAlways );
    AISetStock( player, 12, c_ZU_Roach );
    AISetStock( player, 10, c_ZU_Hydralisk );
    AISetStock( player, 13, c_ZU_Overlord );
    AISetStockUnitNext( player, 16, c_ZU_Roach, c_stockAlways );
    AISetStock( player, 14, c_ZU_Overlord );
    AISetStockUnitNext( player, 14, c_ZU_Hydralisk, c_stockAlways );
    AISetStock( player, 15, c_ZU_Overlord );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Hydralisk, 2, 10, c_continuousMerge);
    
    if (AIGetTime() < 630) {
        if (AITechCount(player, c_ZU_Hydralisk, c_techCountInProgressOrBetter) < 12) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidPowerSwarmHostChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidPowerSwarmHostChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 4, c_ZU_Overlord );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_InfestationPit );
    AISetStock( player, 10, c_ZU_Zergling );
    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 4, c_ZU_SwarmHost );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 8, c_ZU_SwarmHost );
    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    AISetAttackStatus(player, c_ZU_Zergling, 2, 20, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_SwarmHost, 2, 6, c_continuousMerge);
    
    if (AIGetTime() < 660) {
        if (AITechCount(player, c_ZU_SwarmHost, c_techCountInProgressOrBetter) < 7) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidMacroRoachHydraChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidMacroRoachHydraChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_HydraliskDen );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_EvolutionChamber );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 3, c_ZB_Extractor );
    AISetStock( player, 8, c_ZU_Hydralisk );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_MissileAttacks1 );
    AISetStock( player, 1, c_ZR_GroundCarapace1 );
    AISetStock( player, 13, c_ZU_Roach );
    AISetStock( player, 13, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Hydralisk );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 16, c_ZU_Roach );
    AISetStock( player, 15, c_ZU_Overlord );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------

    // don't attack alone, but be willing to support an attack
    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge); 
    AISetAttackStatus(player, c_ZU_Hydralisk, 1, 999, c_continuousMerge);
    
    if (AIGetTime() < 630) {
        if (AITechCount(player, c_ZU_Hydralisk, c_techCountInProgressOrBetter) < 9) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidMacroRoachInfestorChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidMacroRoachInfestorChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 3, c_ZB_Extractor );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_InfestationPit );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 42, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Infestor );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 46, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Infestor );
    AISetStock( player, 50, c_ZU_Drone );
    AISetStock( player, 13, c_ZU_Overlord );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    // don't attack alone, but be willing to support an attack
    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Infestor, 1, 999, c_continuousMerge);
    
    if (AIGetTime() < 600) {
        if (AITechCount(player, c_ZU_Infestor, c_techCountInProgressOrBetter) < 6) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidMacroUltraliskChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidMacroUltraliskChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);

    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_HydraliskDen );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_EvolutionChamber );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 3, c_ZB_Extractor );
    AISetStock( player, 8, c_ZU_Hydralisk );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_MissileAttacks1 );
    AISetStock( player, 1, c_ZR_GroundCarapace1 );
    AISetStock( player, 13, c_ZU_Roach );
    AISetStock( player, 13, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Hydralisk );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 16, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Hive );
    AISetStock( player, 15, c_ZU_Overlord );
    AISetStock( player, 48, c_ZU_Drone );
    AISetStock( player, 4, c_ZB_Extractor );
    
    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    // don't attack alone, but be willing to support an attack
    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Hydralisk, 1, 999, c_continuousMerge);
    
    if (AIGetTime() < 660) {
        if (AITechCount(player, c_ZB_Hive, c_techCountInProgressOrBetter) < 1) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidMacroBroodlordChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidMacroBroodlordChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }
    
    ZergHDDefaultExtraStock(player);
    
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Zergling );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZB_Extractor );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 1, c_ZB_RoachWarren );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 25, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Roach );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 10, c_ZU_Roach );
    AISetStock( player, 42, c_ZU_Drone );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 5, c_ZU_Mutalisk );
    AISetStock( player, 48, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_InfestationPit );
    AISetStock( player, 13, c_ZU_Overlord );
    AISetStock( player, 12, c_ZU_Roach );
    AISetStock( player, 15, c_ZU_Overlord );
    AISetStock( player, 1, c_ZB_Hive );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 4, c_ZU_Corruptor );
    AISetStock( player, 17, c_ZU_Overlord );
    AISetStock( player, 52, c_ZU_Drone );

    AIEnableStock(player);
    
    //---------------------------------------------------------
    
    // don't attack alone, but be willing to support an attack
    AISetAttackStatus(player, c_ZU_Roach, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Hydralisk, 1, 999, c_continuousMerge);
    
    if (AIGetTime() < 660) {
        if (AITechCount(player, c_ZB_Hive, c_techCountInProgressOrBetter) < 1) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirOneBaseMutaChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirOneBaseMutaChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 12, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    
    ZergBasicDefenseStock(player);
    
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 23, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Mutalisk );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 7, c_ZU_Mutalisk );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);

    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Mutalisk, 1, 5, c_continuousMerge);
    
    if (AIGetTime() < 450) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 7) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirOneBaseDropChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirOneBaseDropChIn (int player) {
    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 13, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    
    ZergBasicDefenseStock(player);

    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 14, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 22, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Mutalisk );
    AISetStock( player, 7, c_ZU_Overlord );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    
    ZergHDEmergencyDetectionAntiAir(player);
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);

    //---------------------------------------------------------
    
    if (AITechCount(player, c_ZR_OverlordTransport, c_techCountCompleteOnly) > 0) {
        AISetAttackStatus(player, c_ZU_Zergling, 4, 16, c_continuousMerge);
        AISetAttackStatus(player, c_ZU_Mutalisk, 1, 6, c_continuousMerge);
    }
    
    if (AIGetTime() < 540) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 8) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirExpansionMutaChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirExpansionMutaChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Mutalisk );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 10, c_ZU_Mutalisk );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Mutalisk );
    AISetStock( player, 46, c_ZU_Drone );
    AISetStock( player, 16, c_ZU_Mutalisk );
    AISetStock( player, 12, c_ZU_Overlord );
    AISetStock( player, 52, c_ZU_Drone );
    
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);

    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Mutalisk, 2, 12, c_continuousMerge);
    
    if (AIGetTime() < 600) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 16) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirExpansionMixedAirChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirExpansionMixedAirChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Mutalisk );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Corruptor );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 10, c_ZU_Mutalisk );
    AISetStock( player, 46, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Corruptor );
    AISetStock( player, 12, c_ZU_Overlord );
    AISetStock( player, 52, c_ZU_Drone );
    
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);

    //---------------------------------------------------------

    AISetAttackStatus(player, c_ZU_Mutalisk, 2, 10, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Corruptor, 2, 999, c_continuousMerge);
    
    if (AIGetTime() < 600) {
        if (AITechCount(player, c_ZU_Corruptor, c_techCountInProgressOrBetter) < 6) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirExpansionDropChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirExpansionDropChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 30, c_ZU_Drone );
    AISetStock( player, 5, c_ZU_Overlord );
    AISetStock( player, 32, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 6, c_ZU_Mutalisk );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 36, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 24, c_ZU_Zergling );
    AISetStock( player, 1, c_ZR_ZerglingSpeed );
    AISetStock( player, 10, c_ZU_Overlord );
    AISetStock( player, 10, c_ZU_Mutalisk );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 12, c_ZU_Overlord );
    
    ZergHDDefaultExtraStock(player);

    AIEnableStock(player);

    //---------------------------------------------------------
    
    if (AITechCount(player, c_ZR_OverlordTransport, c_techCountCompleteOnly) > 0) {
        AISetAttackStatus(player, c_ZU_Zergling, 4, 16, c_continuousMerge);
        AISetAttackStatus(player, c_ZU_Mutalisk, 2, 6, c_continuousMerge);
    }
    
    if (AIGetTime() < 570) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 10) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirMacroChIn
//--------------------------------------------------------------------------------------------------
bool ZergMidAirMacroChIn (int player) {
    AIClearStock(player);
    
    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 2, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Overlord );
    AISetStock( player, 9, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Overlord );
    AISetStock( player, 15, c_ZU_Drone );
    
    ZergBasicDefenseStock(player);

    if (AITechCount(player, c_ZU_Drone, c_techCountQueuedOrBetter) >= 15) {
        if (ZergHDFastExpand(player)) { return false; }
    }

    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 17, c_ZU_Drone );
    AISetStock( player, 3, c_ZU_Overlord );
    AISetStock( player, 18, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Lair_Alias );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 24, c_ZU_Drone );
    AISetStock( player, 4, c_ZU_Overlord );
    AISetStock( player, 26, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Spire_Alias );
    AISetStock( player, 34, c_ZU_Drone );
    AISetStock( player, 6, c_ZU_Overlord );
    AISetStock( player, 4, c_ZB_Extractor );
    AISetStock( player, 2, c_ZU_Queen );
    AISetStock( player, 6, c_ZU_Mutalisk );
    
    ZergHDEmergencyDetectionAntiAir(player);

    AISetStock( player, 8, c_ZU_Overlord );
    AISetStock( player, 38, c_ZU_Drone );
    AISetStock( player, 8, c_ZU_Mutalisk );
    AISetStock( player, 9, c_ZU_Overlord );
    AISetStock( player, 40, c_ZU_Drone );
    AISetStock( player, 2, c_ZU_Corruptor );
    AISetStock( player, 11, c_ZU_Overlord );
    AISetStock( player, 44, c_ZU_Drone );
    AISetStock( player, 10, c_ZU_Mutalisk );
    AISetStock( player, 46, c_ZU_Drone );
    AISetStock( player, 14, c_ZU_Mutalisk );
    AISetStock( player, 12, c_ZU_Overlord );
    AISetStock( player, 52, c_ZU_Drone );
    
    ZergHDDefaultExtraStock(player);
    
    AIEnableStock(player);

    //---------------------------------------------------------
    
    // don't attack alone, but be willing to support an attack
    AISetAttackStatus(player, c_ZU_Mutalisk, 2, 999, c_continuousMerge);
    AISetAttackStatus(player, c_ZU_Corruptor, 2, 999, c_continuousMerge);
    
    if (AIGetTime() < 600) {
        if (AITechCount(player, c_ZU_Mutalisk, c_techCountInProgressOrBetter) < 12) {
            return false;
        }
    }

    return true;  // Transition to LateGame
}

//==================================================================================================
//  LATE GAME
//==================================================================================================

// Late Game is very similar to VyHd, but no upgrade limits and aggressive expanding since we should have the resources

//--------------------------------------------------------------------------------------------------
//  ZergLateChIn
//--------------------------------------------------------------------------------------------------
void ZergLateChIn (int player) {
    int armyCompareEstimate = AIArmyComparisonEstimate(player);
    int foodUsed = PlayerGetPropertyInt(player, c_playerPropSuppliesUsed);

    // always enable scouting in the late game
    AISetFlag(player, e_flagsScouting, true);
    
    // don't limit teching on insane, assume we'll have the resources
    //AISetTechLimitLevels(player);


// ****************** Start Restock ****************** //
    AIClearStock(player);

// Very basic recovery start
    ZergHDRecoveryStart(player);

// Very basic farms & peons
    AISetStockFarms( player, c_ZU_Overlord, c_stockNormalFarms);
    AISetStockPeons( player, 16, c_ZU_Drone, c_stockMinPeons, c_stockAlways);

// Desperate expand (we're about to run out of minerals/gas)
    AIDefaultExpansion(player, c_ZB_Hatchery, 3000, 1000, c_expandVitalHard);
    AISetStockUnitNext( player, 1, c_ZU_Queen, c_stockAlways );

// Choose what type of endgame army we'd like to make
    UpdateHDZergLateGameArmy(player);

// Bare minimum army
    if (foodUsed < 180) {
        ZergHDLateGameArmy(player, e_armyTypeMinimum);
    }

// Basic peons
    AISetStockPeons( player, 24, c_ZU_Drone, c_stockMinPeons, c_stockAlways);

// Urgent early detection
    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_ZU_Overseer );
    }

// Barely adequete army including anti-air
    if (foodUsed < 180) {
        ZergHDLateGameArmy(player, e_armyTypeBase);
    }

// Basic towns, farms, & peons
    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord, c_ZU_Drone, 75, c_stockAlways);

// Low expand (we're running low on minerals/gas)
    AIAdjustedDefaultExpansion(player, c_ZB_Hatchery, 7000, 3000, c_expandVitalHard, armyCompareEstimate);
    
// Minimum normal detection
    if (AISuspectDetectionDanger(player, c_lateDetectionDangerTime)) {
        AISetStock( player, 1, c_ZU_Overseer );
    }

// On an air map build at least one transport as long as we have some other units/army
    if (AIGetUserInt(player, c_numGroundStartLocs) == 0) {
        AISetStock( player, 1, c_ZR_OverlordTransport );
    }

// Nearly food capped units
    if (foodUsed > 160) {
        AISetStock( player, 3, c_ZU_Overseer );   
        AISetStock( player, 1, c_ZR_OverseerSpeed );     
        AISetStock( player, 1, c_ZR_OverlordTransport );

        if (foodUsed >= 180) {
            ZergHDLateGameArmy(player, e_armyTypeMinimum);
            ZergHDLateGameArmy(player, e_armyTypeBase);
        }
    }

// Basic small army
    ZergHDLateGameArmy(player, e_armyTypeSmall);

// Basic production buildings
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 1, c_ZB_RoachWarren );
      
// Normal expand
    AIAdjustedDefaultExpansion(player, c_ZB_Hatchery, 17000, 7000, c_expandNormalHard, armyCompareEstimate);
   
// Make Counter Units
    ZergHDMakeCounters(player);

// Vital upgrades
    ZergHDVitalUpgrades(player);

// Medium sized army
    ZergHDLateGameArmy(player, e_armyTypeMedium);
    
// Overseer to scout/detect
    AISetStock( player, 1, c_ZU_Overseer ); 

// General upgrades
    ZergHDGeneralUpgrades(player);

// Other towns defense
    ZergHDDefenseOtherTowns(player);
    
// Extra Queens/Hatcheries
    ZergHDDefaultExtraStock(player);

// Large sized army
    ZergHDLateGameArmy(player, e_armyTypeLarge);

// Main base defense
    ZergHDDefenseMainTown(player);

// Multiple detectors & scouts & a transport
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 1, c_ZU_Overlord ); 
    AISetStockUnitNext( player, 2, c_ZU_Overseer, c_stockAlways );

// Middle expand
    AIAdjustedDefaultExpansion(player, c_ZB_Hatchery, 24000, 10000, c_expandNormalHard, armyCompareEstimate);
  
// Extra detection & scouts & transports
    AISetStockUnitNext( player, 6, c_ZU_Overlord, c_stockAlways );
    AISetStockUnitNext( player, 3, c_ZU_Overseer, c_stockAlways );

// Late expand
    AIAdjustedDefaultExpansion(player, c_ZB_Hatchery, 28000, 12000, c_expandNormalHard, armyCompareEstimate);

// Extra research buildings
    if (AIHasRes(player,500,400)) {
        AISetStockUnitNext( player, 3, c_ZB_EvolutionChamber, c_stockAlways );
    }

// Extra production buildings
    AISetStockUnitNext( player, 1, c_ZB_HydraliskDen,       c_stockAlways );
    AISetStockUnitNext( player, 1, c_ZB_Spire_Alias,        c_stockAlways );
    AISetStockUnitNext( player, 1, c_ZB_InfestationPit,     c_stockAlways );
    AISetStockUnitNext( player, 1, c_ZB_Hive,               c_stockAlways );
    AISetStockUnitNext( player, 4, c_ZU_Queen,              c_stockAlways );

// Minor upgrades
    ZergHDMinorUpgrades(player);

// Idle expand (very low priority, to prevent us from sitting around with idle peons)
    AIAdjustedDefaultExpansion(player, c_ZB_Hatchery, 40000, 16000, c_expandIdleHard, armyCompareEstimate);

// Entire Army
    ZergHDLateGameArmy(player, e_armyTypeFull);

    AIEnableStock(player);    
// ****************** End Restock ****************** //

}
