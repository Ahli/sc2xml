include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Warcraft III Tactical
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libGAwT_ge_OrderType_On = 0;
const int libGAwT_ge_OrderType_Off = 1;
const int libGAwT_ge_OrderType_AutoCastOn = 2;
const int libGAwT_ge_OrderType_AutoCastOff = 3;
const int libGAwT_ge_OrderType_Instant = 4;
const int libGAwT_ge_OrderType_Target = 5;

// Constants
const fixed libGAwT_gv_c_distanceFromDamage = 0.2;
const int libGAwT_gv_c_noMax = -1;
const int libGAwT_gv_c_noMin = -1;
const int libGAwT_gv_c_noMarkerMax = 0;
const int libGAwT_gv_c_noMarkerMin = 0;
const fixed libGAwT_gv_dYING_HERO_HP = 400.0;
const fixed libGAwT_gv_hIGH_HP = 450.0;
const string libGAwT_gv_iNVENTORY_LINK = "AInv";

// Function Declarations
order libGAwT_gf_OrderConstructor (int lp_owner, string lp_abil, int lp_type, unit lp_item);
bool libGAwT_gf_HeroInDanger (unit lp_hero);
fixed libGAwT_gf_AIEffectAbilRange (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level, bool lp_addRadius);
fixed libGAwT_gf_AIEffectAbilSearchRadius (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level, bool lp_addRadius);
fixed libGAwT_gf_AIEffectAbilManaCost (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level);
unitfilter libGAwT_gf_AIEffectAbilTargetUnitFilter (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level);
unitfilter libGAwT_gf_AIEffectAbilSearchUnitFilter (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level);
fixed libGAwT_gf_AIAbilAccumlatedAmount (int lp_owner, unit lp_aIUnit, string lp_abil, int lp_level, string lp_extention);
string libGAwT_gf_AIItemAbil (int lp_owner, unit lp_item);
void libGAwT_gf_AIThinkDefend (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkMagicDefense (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkThunderClap (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkAvatar (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkSummonPhoenix (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkWaterElemental (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkDivineShield (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkResurrection (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkHolyBolt (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits, string lp_abil, unit lp_item);
void libGAwT_gf_AIThinkWar3 (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);

// Library Initialization
void libGAwT_InitVariables ();

