include "TriggerLibs/NativeLib"

include "LibLJai_h"

//--------------------------------------------------------------------------------------------------
// Library: JainaCoop
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libLJai_InitLibraries () {
    libNtve_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Jaina - Inspiration
//--------------------------------------------------------------------------------------------------
bool libLJai_gt_JainaInspiration_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto6856B02E_g;
    int auto6856B02E_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((CatalogFieldValueGet(c_gameCatalogAbil, AbilityCommandGetAbility(EventUnitAbility()), "AbilityCategories[" + IntToString(0) + "]", c_playerAny) == "1"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto6856B02E_g = UnitGroup(null, c_playerAny, RegionCircle(UnitGetPosition(EventUnit()), 8.0), UnitFilter((1 << c_targetFilterGround), 0, (1 << c_targetFilterNeutral) | (1 << c_targetFilterEnemy) | (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6856B02E_u = UnitGroupCount(auto6856B02E_g, c_unitCountAll);
    for (;; auto6856B02E_u -= 1) {
        lv_u = UnitGroupUnitFromEnd(auto6856B02E_g, auto6856B02E_u);
        if (lv_u == null) { break; }
        UnitIssueOrder(lv_u, Order(AbilityCommand("Inspiration_Jaina", 0)), c_orderQueueAddToFront);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libLJai_gt_JainaInspiration_Init () {
    libLJai_gt_JainaInspiration = TriggerCreate("libLJai_gt_JainaInspiration_Func");
    TriggerAddEventUnitAbility(libLJai_gt_JainaInspiration, null, null, c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Jaina - Water Elemental Scaler
//--------------------------------------------------------------------------------------------------
bool libLJai_gt_JainaWaterElementalScaler_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;
    unit lv_jaina;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_u = EventUnitCreatedUnit();
    lv_jaina = EventUnit();

    // Actions
    if (!runActions) {
        return true;
    }

    ActorSend(libNtve_gf_MainActorofUnit(lv_u), (("SetScale " + FixedToString(MinF((UnitBehaviorCount(lv_jaina, "AttInt")*0.04), 1.4), c_fixedPrecisionAny))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libLJai_gt_JainaWaterElementalScaler_Init () {
    libLJai_gt_JainaWaterElementalScaler = TriggerCreate("libLJai_gt_JainaWaterElementalScaler_Func");
    TriggerAddEventUnitCreated(libLJai_gt_JainaWaterElementalScaler, null, "SummonWaterElemental_Jaina", null);
}

void libLJai_InitTriggers () {
    libLJai_gt_JainaInspiration_Init();
    libLJai_gt_JainaWaterElementalScaler_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libLJai_InitLib_completed = false;

void libLJai_InitLib () {
    if (libLJai_InitLib_completed) {
        return;
    }

    libLJai_InitLib_completed = true;

    libLJai_InitLibraries();
    libLJai_InitTriggers();
}

