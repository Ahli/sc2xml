<?xml version="1.0" encoding="utf-8"?>
<Catalog>
    <const id="$GenericAttackImpactSiteOpsHeader" type="CActorSiteOps" value="SOpAttachHarness SOpForwardLaunchGuide SOpAttachVolumeStandard SOp2DRotation"/>
    <const id="$GenericAttackLaunchMethods" type="CAttachMethods" value="AMFilterWeapon00"/>
    <const id="$GenericAttackTargetMethods" type="CAttachMethods" value="AMVolumesTargets AMArcTestWeapon AMVolumesWeightedPick"/>
    <const id="$GenericBunkerAttackLaunchMethods" type="CAttachMethods" value="AMFilterWeapon AMProximityTargetAll AMPortAllocatorBunker"/>
    <const id="$Spell" type="CActorMsgPayloadPtr" value="AnimPlay Spell Spell"/>
    <const id="$Stand" type="CActorMsgPayloadPtr" value="AnimPlay Stand Stand"/>
    <const id="$Death" type="CActorMsgPayloadPtr" value="AnimPlay Death Death"/>
    <const id="$Birth" type="CActorMsgPayloadPtr" value="AnimPlay Birth Birth"/>
    <const id="$AllowBlobShadow" type="CActorTerms" value="CompareField ::Main UnitFlags[ShowBlobShadow] Eq 1"/>
    <!--                                                                                                               -->
    <!--        DONT EVER SAVE ANY CHANGES DONE IN THE EDITOR FOR THIS FILE           -->
    <!--                                                                                                               -->
    <!--
    Usage FAQ

    Q01 How do I clear a Start animation before playing a Stop animation, but avoid triggering
        actions off of the AnimDone message?
    A01 Use syntax like this:
            AnimDone; !SubName Cleared
        This will continue the animDone handling data in the case of Complete, Missing and Error.
    -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Constants ============================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Base Defaults ========================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Base Actors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--                                                                                         -->
    <!-- Note: Flags should be listed in the order they appear in the enum. -->
    <CActor default="1">
        <FogVisibility value="Snapshot"/>
        <EditorCategories value="DoodadType:NotDoodad"/>
        <InheritType value="Continuous"/>
        <!-- Make sure to set any properties turned off here back on in the CActorSite default.
             There are many actors like squibs and whatnot that do not want to inherit these
             props.  The ones that typically do are commonly derived from actor entries like
             ModelAddition. -->
        <Inherits index="BaseModelScale" value="0"/>
        <Inherits index="CastShadows" value="0"/>
        <Inherits index="CloakEffect" value="0"/>
        <Inherits index="CreepEngulfment" value="0"/>
        <Inherits index="Decal" value="0"/>
        <Inherits index="LocalTintColor" value="0"/>
        <Inherits index="ModelMaterials" value="0"/>
        <Inherits index="Opacity" value="0"/>
        <Inherits index="Scale" value="0"/>
        <Inherits index="TeamColor" value="0"/>
        <Inherits index="TimeScale" value="0"/>
        <Inherits index="TintColor" value="0"/>
        <Inherits index="Visibility" value="0"/>
        <Inherits index="WarpGroup" value="0"/>
    </CActor>
    <CActorActionOverride default="1"/>
    <CActorBearings default="1">
        <AddToProximitySystem value="1"/>
        <AcceptedTransfers index="Position" value="1"/>
        <AcceptedTransfers index="Rotation" value="1"/>
    </CActorBearings>
    <CActorBase default="1"/>
    <CActorStateMonitor default="1">
        <On Terms="UnitDeath" Send="Destroy"/>
    </CActorStateMonitor>
    <CActorCamera default="1">
        <Camera value="##id##"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorCamera>
    <CActorModel default="1">
        <Model value="##id##"/>
        <AnimBlendTime value="-1.000000"/>
        <ModelFlags index="AllowHitTest" value="1"/>
        <ModelFlags index="UpdateVisibility" value="1"/>
        <ProximityPosition value="CenterModelBounds"/>
    </CActorModel>
    <CActorQuad default="1">
        <LaunchActor value="##id##Launch"/>
        <LaunchHeight value="2.000000"/>
        <CenterActor value="##id##Center"/>
        <CenterHeight value="2.000000"/>
        <ImpactActor value="##id##Impact"/>
        <ImpactHeight value="2.000000"/>
        <QuadFlags index="IgnoreLaunchAndImpactForHeight" value="1"/>
    </CActorQuad>
    <CActorPower default="1">
        <PowerSource value="##id##Source"/>
    </CActorPower>
    <CActorFoliageFXSpawner default="1" id="FoliageFXSpawnerDefault">
        <SpawnTarget value="FoliageFXDefault"/>
        <HostSiteOps Ops="SOpTargetPointStationary"/>
    </CActorFoliageFXSpawner>
    <CActorTerrainDeformer default="1">
        <Host Subject="_Selectable"/>
        <TerrainDeformerFlags index="DestroysFoliage" value="1"/>
        <FoliageFXDeathSpawnTarget value="FoliageFXDefault"/>
    </CActorTerrainDeformer>
    <CActorProgress default="1">
        <Supporter Subject="_Unit" Actor="Find"/>
        <On Terms="UnitConstruction.*.Finish" Send="Destroy"/>
        <On Terms="UnitConstruction.*.Cancel" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorProgress>
    <CActorRange default="1">
        <Arc value="360.000000"/>
        <Icon value="Assets\Textures\RadarIcon1.dds"/>
        <IconArcLength value="2.250000"/>
        <Inherits index="Visibility" value="1"/>
        <Host Subject="_Selectable"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <HostSiteOps Ops="SOpShadow"/>
        <CliffLevelFlags index="Lower" value="1"/>
        <CliffLevelFlags index="Equal" value="1"/>
        <CliffLevelFlags index="Higher" value="1"/>
        <RangeFlags index="GameWorld" value="1"/>
        <IconTint value="255,255,255,255"/>
    </CActorRange>
    <CActorRange default="1" id="RangeAbil">
        <?token id="abil" type="CAbilLink"?>
        <Abil Link="##abil##"/>
        <On Terms="Abil.##abil##.TargetOn" Send="Create"/>
        <On Terms="Abil.##abil##.TargetOff" Send="Destroy"/>
        <On Terms="Abil.##abil##.ButtonHoverOn" Send="Create"/>
        <On Terms="Abil.##abil##.ButtonHoverOff" Send="Destroy"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorRange>
    <CActorRange default="1" id="RangeAbilHover">
        <?token id="abil" type="CAbilLink"?>
        <Abil Link="##abil##"/>
        <On Terms="Abil.##abil##.ButtonHoverOn" Send="Create"/>
        <On Terms="Abil.##abil##.ButtonHoverOff" Send="Destroy"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorRange>
    <CActorRange default="1" id="RangeBehavior">
        <?token id="behavior" type="CBehaviorLink"?>
        <Behavior value="##behavior##"/>
        <On Terms="Behavior.##behavior##.On" Send="Create"/>
        <On Terms="Behavior.##behavior##.Off" Send="Destroy"/>
    </CActorRange>
    <CActorRange default="1" id="RangeSight">
        <?token id="sight" type="CUnitLink"?>
        <Sight value="##sight##"/>
    </CActorRange>
    <CActorRange default="1" id="RangeWeapon">
        <?token id="weapon" type="CWeaponLink"?>
        <Weapon value="##weapon##"/>
    </CActorRange>
    <CActorSetQueried default="1">
        <!-- Makes these work a lot of the time without any extra data. -->
        <Host Subject="_Unit"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorSetQueried>
    <CActorShieldImpact default="1">
        <RadiusMedium value="1.000000"/>
        <RadiusLarge value="2.000000"/>
        <MaxCountSmall value="4"/>
        <MaxCountMedium value="8"/>
        <MaxCountLarge value="12"/>
    </CActorShieldImpact>
    <CActorSite default="1">
        <AddToProximitySystem value="0"/>
        <!-- Sites are a conduit for everything by default.  The actors that use sites may or may
             not inherit these properities, however. -->
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="LocalTintColor" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
    </CActorSite>
    <CActorSound default="1">
        <Sound value="##id##"/>
        <SoundFlags index="UpdateVisibility" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <!-- We do not destroy the sound on SoundDone here, b/c it is is possible to have a sound
             set that we play through sequentially.  Each sound sends a SoundDone when done, which
             would cause the set to terminate prematurely.  It's easier to add messages than 
             remove them, so it's up to the subclasses to remember this message.  And remember
             they must or they will leak! -->
    </CActorSound>
    <CActorSplat default="1">
        <Model value="##id##"/>
        <Color value="255,255,255,255"/>
        <FadeIn value="-1.000000"/>
        <FadeOut value="-1.000000"/>
    </CActorSplat>
    <CActorText default="1">
        <TextScale value="0.250000"/>
        <MaxSize value="3.000000,1.000000"/>
        <AlignH value="Center"/>
        <AlignV value="Center"/>
        <Color value="255,255,255,255"/>
    </CActorText>
    <CActorTurret default="1">
        <!--<PitchQuery Methods="Turret"/>-->
        <PitchQuery Methods="IGNORE"/>
        <YawQuery Methods="TurretZ"/>
        <TurretBody Subject="_Unit" Actor="Find"/>
        <Aliases value="_Snapshot"/>
    </CActorTurret>
    <!--                                                                                         -->
    <!-- Subclass Actors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--                                                                                         -->
    <CActorArc default="1">
        <AngleAnimProps value="Stand"/>
    </CActorArc>
    <CActorBeamStandard default="1">
        <Beam value="##id##"/>
    </CActorBeamStandard>
    <CActorDoodad default="1">
        <Flags index="SuppressSaveLoad" value="1"/>
        <ModelFlags index="AutomatedGlobalLoopsIgnoreOrphan" value="1"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
        <ModelFlags index="IgnoreWalkables" value="1"/>
        <DoodadFlags index="DefaultToModelAABBBounds" value="1"/>
        <DoodadFlags index="PauseAnimsWhileFogged" value="1"/>
        <EditorCategories value="DoodadType:Props"/>
        <EditorIcon value="Assets\Textures\btn-missing-kaeo.dds"/>
        <Radius value="0.500000"/>
        <RandomScaleRange value="0.800000,1.200000"/>
        <Aliases value="_Doodad"/>
        <Aliases value="_Selectable"/>
        <OccludeHeight value="0.75"/>
        <EditorFlags index="AmbientOcclusion" value="1"/>
        <EditorFlags index="CanRotate" value="1"/>
        <MinimapRenderPriority value="Doodad"/>
        <On Terms="ActorCreation" Send="Create SoundEmitter Doodad_##id##"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever,RandomStartOffset"/>
        <VisibleOpacity value="1.000000"/>
    </CActorDoodad>
    <CActorSelection default="1">
        <Flags index="SuppressSaveLoad" value="1"/>
        <Flags index="RespondsToUnitPlayerChange" value="1"/>
        <Model value=""/>
        <Terms value="Cap 1"/>
        <FadeIn value="0.000000"/>
        <FadeOut value="0.000000"/>
        <HoldTime value="-1.000000"/>
        <FallOff value="0.030000"/>
        <HalfHeight value="3.000000"/>
        <Attenuation value="-1.000000"/>
        <Layer value="VectorUILayer"/>
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpAttachOrigin"/>
        <HostRadiusPercent value="1.000000"/>
        <Inherits index="Visibility" value="1"/>
        <On Terms="UnitDeath" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorSelection>
    <CActorShadow default="1">
        <Terms value="Cap 1"/>
        <FadeIn value="0.500000"/>
        <FadeOut value="0.500000"/>
        <Model value="BlobShadow"/>
        <Inherits index="Scale" value="1"/>
        <Alpha value="0.000000,0.700000,0.000000"/>
        <Host Subject="_Selectable"/>
        <Attenuation value="-1.000000"/>
        <HostSiteOps Ops="SOpAttachOrigin SOpShadowAsyncPrecise"/>
        <On Terms="UnitDeath" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorShadow>
    <CActorUnit default="1">
        <VisibleOpacity value="1.000000"/>
        <Flags index="RespondsToUnitPlayerChange" value="1"/>
    </CActorUnit>
    <CActorSiteOpAttach default="1">
        <!-- We have to default this value to ignore, b/c several common SiteHosted configurations
             (like just hosting off a parent model, or being created by CActorSetQueried) don't
             want to use attach queries.  However, this means that if a client forgets to add a
             query, the model will show up at 0, 0, which may not be the most intuitive
             location.  We could add a default for that, but if the client forgets to add a query,
             who says they are going to remember to parent on that default correctly?  Current
             thinking is to just bite the bullet and have people look at 0, 0 if the attached thing
             isn't showing up. -->
        <AttachQuery Methods="IGNORE"/>
    </CActorSiteOpAttach>
    <CActorSiteOpBankerUnit default="1">
        <RollMax value="45.000000"/>
        <RollInActivationAngle value="30.000000"/>
        <RollInArc value="90.000000"/>
        <RollOutDuration value="2.000000"/>
    </CActorSiteOpBankerUnit>
    <CActorSiteOpRandomPointInCircle default="1">
        <Variance value="1.000000"/>
    </CActorSiteOpRandomPointInCircle>
    <!--                                                                                         -->
    <CActorSite default="1" id="SiteUNIT">
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpAttachOverhead"/>
    </CActorSite>
    <CActorSite default="1" id="SiteCenter" parent="SiteUNIT">
        <HostSiteOps Ops="SOpAttachCenter"/>
    </CActorSite>
    <CActorSite default="1" id="SiteWeapon" parent="SiteUNIT">
        <HostSiteOps Ops="SOpAttachWeapon"/>
    </CActorSite>
    <CActorSite default="1" id="SiteOrigin" parent="SiteUNIT">
        <HostSiteOps Ops="SOpAttachOrigin"/>
    </CActorSite>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Sounds ================================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSound default="1" id="SoundOneShot">
        <Flags index="SuppressSaveLoad" value="1"/>
        <InheritType value="OneShot"/>
        <On Terms="SoundDone; SoundIsFinalSound" Send="Destroy"/>
    </CActorSound>
    <CActorSound default="1" id="SoundContinuous">
        <!-- If we accidentally (or intentionally) have a non-looping sound, this ensures that
             the sound does not leak. -->
        <On Terms="SoundDone; SoundIsFinalSound" Send="Destroy"/>
        <On Terms="SupporterDestruction" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <Supporter Subject="::Creator"/>
    </CActorSound>
    <CActorSound default="1" id="HerdSound" parent="SoundContinuous"/>
    <CActorSound default="1" id="ProgressSound" parent="SoundContinuous">
        <On Terms="ProgressLevel.*.Pause" Send="SoundSetPaused 1"/>
        <On Terms="ProgressLevel.*.Resume" Send="SoundSetPaused"/>
    </CActorSound>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Beams ================================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorBeamStandard default="1" id="BeamStandardAnimationStyleOneShot">
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death ContentPlayOnce"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorBeamStandard>
    <CActorBeamStandard default="1" id="BeamStandardAnimationStyleContinuous">
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorBeamStandard>
    <CActorBeamSimple default="1" id="BeamSimpleAnimationStyleOneShot">
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death ContentPlayOnce"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorBeamSimple>
    <CActorBeamSimple default="1" id="BeamSimpleAnimationStyleContinuous">
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorBeamSimple>
    <CActorBeamSimple default="1" id="BeamSimpleAnimationStyleContinuousClosingFull">
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death ClosingFull"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorBeamSimple>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Models ================================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorModel default="1" id="ModelAnimationStyleOneShotNoOrphan">
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death ContentPlayOnce"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAnimationStyleOneShot" parent="ModelAnimationStyleOneShotNoOrphan">
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAnimationStyleOneShotUNIT" parent="ModelAnimationStyleOneShot">
        <Host Subject="_Selectable"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAnimationStyleContinuous">
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <!--        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/> -->
        <On Terms="AnimBracketState.*.AfterClosing; !AnimBracketExitReason ModelSwap; AnimName BSD" Send="Destroy"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAnimationStyleContinuousUNIT" parent="ModelAnimationStyleContinuous">
        <Host Subject="_Selectable"/>
    </CActorModel>
    <CActorModel default="1" id="GlazeParent" parent="ModelAnimationStyleContinuous">
        <On Terms="ActorCreation; ScopeContains _NoGlaze" Send="Destroy"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAddition" parent="ModelAnimationStyleContinuous">
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Aliases value="_Snapshot"/>
        <Host Subject="_Selectable"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
    </CActorModel>
    <CActorModel default="1" id="ModelAdditionNoAnims">
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Aliases value="_Snapshot"/>
        <Host Subject="_Selectable"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorModel>
    <!-- Requires manual death from 3rd party. -->
    <CActorModel default="1" id="ModelAdditionStatic">
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Aliases value="_Snapshot"/>
        <Host Subject="_Selectable"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="LocalTintColor" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death ContentNonLooping"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorModel>
    <!-- Intentionally NOT inheriting from the other defaults because we do not want bracket anims-->
    <CActorModel default="1" id="ModelConstruction">
        <ModelFlags index="NeedsVolumeMonitoring" value="1"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Host Subject="_Selectable"/>
        <Aliases value="_Snapshot"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <On Terms="UnitConstruction.*.Finish" Send="Destroy"/>
        <On Terms="UnitConstruction.*.Cancel" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <Flags index="RespondsToUnitPlayerChange" value="1"/>
    </CActorModel>
    <CActorModel default="1" id="TerranModelConstruction">
        <ModelFlags index="NeedsVolumeMonitoring" value="1"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Host Subject="_Selectable"/>
        <Aliases value="_Snapshot"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="ModelMaterials" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <On Terms="UnitConstruction.*.Cancel" Send="Destroy"/>
        <On Terms="UnitConstruction.*.Finish" Send="AnimPlay BirthD Birth,D"/>
        <On Terms="AnimDone; AnimName BirthD" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <Flags index="RespondsToUnitPlayerChange" value="1"/>
    </CActorModel>
    <CActorModel default="1" id="BuffOneShot" parent="ModelAnimationStyleOneShot">
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="Visibility" value="1"/>
    </CActorModel>
    <CActorModel default="1" id="BuffContinuous" parent="ModelAnimationStyleContinuous">
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="Visibility" value="1"/>
    </CActorModel>
    <CActorModel default="1" id="ModelPretarget" parent="ModelAnimationStyleContinuous">
        <Terms value="Cap 1"/>
        <Aliases value="_ModelPretarget"/>
        <FogVisibility value="Visible"/>
    </CActorModel>
    <CActorModel default="1" id="CursorModelBase" parent="ModelAnimationStyleContinuous">
        <FogVisibility value="Visible"/>
        <HostSiteOps Ops="SOpBasicScopePositionFollowHoldRotation"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorModel>
    <CActorModel default="1" id="CursorModel" parent="CursorModelBase">
        <?token id="abil" type="CAbilLink"?>
        <On Terms="Abil.##abil##.Cursor" Send="Create"/>
    </CActorModel>
    <!--                                                                                         -->
    <CActorModel default="1" id="Confirmation" parent="ModelAnimationStyleOneShotNoOrphan">
        <On Terms="Confirmation.*.Stop" Send="Destroy Immediate"/>
        <FogVisibility value="Visible"/>
        <HostSiteOps Ops="SOpBasicInitialBearings"/>
    </CActorModel>
    <!-- Cursor Visuals -->
    <CActorSplat default="1" id="CursorSplat">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_Scalable"/>
        <FogVisibility value="Visible"/>
        <HoldTime value="-1.000000"/>
        <FadeOut value="0.000000"/>
        <Layer value="AOELayer"/>
        <On Terms="Abil.##abil##.Cursor" Send="Create"/>
        <On Terms="ActorCreation" Send="Create CursorRegion"/>
        <On Terms="ActorDestruction" Target="CursorRegion" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <HostSiteOps Ops="SOpBasicScopeFollow"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorSplat>
    <!-- Guide Regions -->
    <CActorRegion default="1" id="GuideRegion">
        <Aliases value="_GuideRegion"/>
        <Aliases value="_Scalable"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <On Terms="RegionSubject.*.AddedFirst" Target="_GuideVisual" Send="SetTintColor 0,255,0 0.200000 OneShot Active"/>
        <On Terms="RegionSubject.*.RemovedLast" Target="_GuideVisual" Send="ClearTintColor 0.200000 Active"/>
    </CActorRegion>
    <CActorRegion default="1" id="GuideRegionNormal" parent="GuideRegion">
        <On Terms="ActorCreation" Send="QueryPersistent GuideRegionAdd GuideRegionRemove AgainstRadiusGame"/>
    </CActorRegion>
    <CActorRegion default="1" id="GuideRegionClosest" parent="GuideRegion">
        <On Terms="ActorCreation" Send="QueryPersistent Bogus Bogus AgainstRadiusGame 0.000000 ::QueryCaster GuideRegionAdd GuideRegionRemove"/>
    </CActorRegion>
    <CActorRegion default="1" id="GuideRegionScaled" parent="GuideRegion">
        <NotifyClosestScaleKey value="_GuideVisual"/>
        <On Terms="ActorCreation" Send="QueryPersistent Bogus Bogus AgainstRadiusGame 0.000000 ::QueryCaster Bogus Bogus"/>
    </CActorRegion>
    <CActorRegion default="1" id="GuideRegionScaledClosest" parent="GuideRegion">
        <NotifyClosestScaleKey value="_GuideVisual"/>
        <On Terms="ActorCreation" Send="QueryPersistent Bogus Bogus AgainstRadiusGame 0.000000 ::QueryCaster GuideRegionAdd GuideRegionRemove"/>
    </CActorRegion>
    <!-- Guide Visuals -->
    <CActorArc default="1" id="GuideVisualArc">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <Model value="AOECone"/>
        <FogVisibility value="Visible"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorCreation" Send="Create GuideRegionArc"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorArc>
    <CActorSplat default="1" id="GuideVisualCircle">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <Model value="TerranAOECursorSplat"/>
        <FogVisibility value="Visible"/>
        <HoldTime value="-1.000000"/>
        <FadeOut value="0.000000"/>
        <Layer value="AOELayer"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorCreation" Send="Create GuideRegionCircle"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorSplat>
    <CActorQuad default="1" id="GuideVisualQuad">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <LaunchActor value="GuideVisualQuadLaunch"/>
        <CenterActor value="GuideVisualQuadCenter"/>
        <ImpactActor value="GuideVisualQuadImpact"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorDestruction" Target="_GuideQuadSegment" Send="AnimBracketStop BSD"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorQuad>
    <CActorQuad default="1" id="ZergGuideVisualQuad">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <LaunchActor value="ZergGuideVisualQuadLaunch"/>
        <CenterActor value="ZergGuideVisualQuadCenter"/>
        <ImpactActor value="ZergGuideVisualQuadImpact"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorDestruction" Target="_GuideQuadSegment" Send="AnimBracketStop BSD"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorQuad>
    <CActorQuad default="1" id="ZergGuideVisualQuadRed">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <LaunchActor value="ZergGuideVisualQuadRedLaunch"/>
        <CenterActor value="ZergGuideVisualQuadRedCenter"/>
        <ImpactActor value="ZergGuideVisualQuadRedImpact"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorDestruction" Target="_GuideQuadSegment" Send="AnimBracketStop BSD"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadDown" parent="GuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDown"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadDownDetached" parent="GuideVisualQuad">
        <Quad value="-0.500000,-0.500000,0.500000,0.500000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownDetached"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadDownClosest" parent="GuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownClosest"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadDownScaled" parent="GuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaled"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadDownScaledClosest" parent="GuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaledClosest"/>
    </CActorQuad>
    <CActorQuad default="1" id="ZergGuideVisualQuadDown" parent="ZergGuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDown"/>
    </CActorQuad>
    <CActorQuad default="1" id="ZergGuideVisualQuadDownScaled" parent="ZergGuideVisualQuad">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaled"/>
    </CActorQuad>
    <CActorQuad default="1" id="ZergGuideVisualQuadDownRedScaled" parent="ZergGuideVisualQuadRed">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaled"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadPerpendicular" parent="GuideVisualQuad">
        <Quad value="-0.500000,-0.500000,0.500000,0.500000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadPerpendicular"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadPerpendicularReversed" parent="GuideVisualQuad">
        <On Terms="ActorCreation" Send="Create GuideRegionQuadPerpendicularReversed"/>
        <Quad value="-0.500000,-0.500000,0.500000,0.500000"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplat">
        <?token id="abil" type="CAbilLink"?>
        <Aliases value="_GuideVisual"/>
        <Aliases value="_Scalable"/>
        <LaunchActor value="GuideVisualQuadSplatLaunch"/>
        <CenterActor value="GuideVisualQuadSplatCenter"/>
        <ImpactActor value="GuideVisualQuadSplatImpact"/>
        <Host Subject="_GuideRegion"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <On Terms="Abil.##abil##.Guide" Send="Create"/>
        <On Terms="ActorDestruction" Target="_GuideRegion" Send="Destroy"/>
        <On Terms="ActorDestruction" Target="_GuideQuadSegment" Send="AnimBracketStop BSD"/>
        <On Terms="ActorDestruction" Target="_GuideDecoration" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatDown" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDown"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatDownDetached" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-0.500000,0.500000,0.500000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownDetached"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatDownClosest" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownClosest"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatDownScaled" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaled"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatDownScaledClosest" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-1.000000,0.500000,0.000000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadDownScaledClosest"/>
    </CActorQuad>
    <CActorQuad default="1" id="GuideVisualQuadSplatPerpendicular" parent="GuideVisualQuadSplat">
        <Quad value="-0.500000,-0.500000,0.500000,0.500000"/>
        <On Terms="ActorCreation" Send="Create GuideRegionQuadPerpendicular"/>
    </CActorQuad>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Snapshots ============================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSnapshot default="1" id="SnapshotBase">
        <InheritType value="OneShot"/>
        <Aliases value="_Selectable"/>
        <Aliases value="_Unit"/>
        <Host Subject="::Creator"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <AcceptedTransfers index="Animator" value="1"/>
        <AcceptedTransfers index="AnimProps" value="1"/>
        <AcceptedTransfers index="Model" value="1"/>
        <AcceptedTransfers index="Textures" value="1"/>
        <AcceptedHostedPropTransfers index="ModelMaterials" value="0"/>
        <AcceptedHostedPropTransfers index="WarpGroup" value="0"/>
        <!-- Means we get props and bearings once, and then stop. -->
        <On Terms="ActorCopy" Target="::Host" Send="RefSetFromMsg ::actor.Snapshot ::Sender"/>
        <On Terms="ActorCopy" Send="RefClear ::Host"/>
        <!-- Need to kill all the extra models that the snapshot may have created under
             the covers. -->
        <On Terms="ActorDestruction" Target="_Snapshot" Send="Destroy"/>
        <On Terms="ActorDestruction" Target="_SnapshotExtra" Send="Destroy"/>
    </CActorSnapshot>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Splats ================================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSplat default="1" id="GenericUnitSplatBase">
        <Aliases value="_Snapshot"/>
        <HoldTime value="-1.000000"/>
        <!-- cant scale or when on low Q models, the splats scale to match explosion scales -->
        <!--        <Inherits index="Scale" value="1"/>
        <Inherits index="BaseModelScale" value="1"/> -->
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Host Subject="_Selectable"/>
        <Supporter Subject="::Creator"/>
        <On Terms="SupporterDestruction" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorSplat>
    <CActorSplat default="1" id="GenericUnitSplat" parent="GenericUnitSplatBase">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <On Terms="UnitBirth.##unitName##" Send="Create"/>
    </CActorSplat>
    <CActorSplat default="1" id="BurrowedSplatBase">
        <Model value="BurrowedSplat"/>
        <FadeIn value="1.000000"/>
        <FadeOut value="3.000000"/>
        <HoldTime value="-1.000000"/>
        <AutoScaleFactor value="1.000000"/>
        <!-- Does not need CloakEffect, as it merely turns on or off based on visibility! -->
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Host Subject="_Selectable"/>
        <Supporter Subject="::Creator"/>
        <On Terms="SupporterDestruction" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorSplat>
    <CActorSplat default="1" id="BurrowedSplat" parent="BurrowedSplatBase">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <On Terms="UnitBirth.##unitName##Burrowed" Send="Create"/>
        <On Terms="AbilMorph.*.Start; MorphTo ##unitName##Burrowed" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; MorphFrom ##unitName##Burrowed" Send="RefClear ::Host"/>
        <On Terms="AbilMorph.*.Start; MorphFrom ##unitName##Burrowed" Send="TimerSet 4.000000,2.000000 DelayDestroy"/>
        <On Terms="TimerExpired; TimerName DelayDestroy" Send="Destroy"/>
    </CActorSplat>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Selections ============================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSelection default="1" id="PreSelection">
        <Alpha value="0.750000,0.750000,0.750000"/>
        <InnerWidth value="0.090000"/>
        <OuterWidth value="0.030000"/>
        <RotationSpeed value="0.500000"/>
        <SegmentCount value="8"/>
        <SegmentPercentSolid value="0.800000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <CActorSelection default="1" id="LocalSelection">
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerBoundaryFallOffRatio value="0.400000"/>
        <InnerBoundaryRatio value="0.860000"/>
        <InnerOffsetRatio value="0.140000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="1"/>
        <SegmentPercentSolid value="1.000000"/>
        <SelectionFlags index="UseCrescent" value="1"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <CActorSelection default="1" id="SyncSelection">
        <SelectionFlags index="IsSyncSelection" value="1"/>
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerWidth value="0.150000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="16"/>
        <SegmentPercentSolid value="0.500000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <CActorSelection default="1" id="SyncSelectionPrimaryObserver">
        <SelectionFlags index="IsSyncSelection" value="1"/>
        <SelectionFlags index="UseCrescent" value="1"/>
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerBoundaryFallOffRatio value="0.400000"/>
        <InnerBoundaryRatio value="0.860000"/>
        <InnerOffsetRatio value="0.140000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="1"/>
        <SegmentPercentSolid value="1.000000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
        <SelectionFilter index="TandemFollowers" value="0"/>
        <SelectionFilter index="Observers" value="0"/>
    </CActorSelection>
    <CActorSelection default="1" id="SyncSelectionSecondaryObserver">
        <SelectionFlags index="IsSyncSelection" value="1"/>
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerWidth value="0.090000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="16"/>
        <SegmentPercentSolid value="0.500000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
        <SelectionFilter index="TandemLeaders" value="0"/>
        <SelectionFilter index="NonTandemPlayers" value="0"/>
    </CActorSelection>
    <CActorSelection default="1" id="LocalSelectionObserver">
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerWidth value="0.150000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="8"/>
        <SegmentPercentSolid value="0.500000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <CActorSelection default="1" id="PreSelectionObserver">
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerWidth value="0.200000"/>
        <OuterWidth value="0.030000"/>
        <RotationSpeed value="0.500000"/>
        <SegmentCount value="8"/>
        <SegmentPercentSolid value="0.800000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Physics =============================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorForce default="1">
        <Model value="ActorForceField"/>
        <ForceFlags index="FallOff" value="1"/>
        <!--On Terms="ActorCreation" Send="Create Indicator"/-->
    </CActorForce>
    <CActorForceSphere default="1">
        <Field value="Radial"/>
    </CActorForceSphere>
    <CActorUnit default="1" id="GenericUnitEmpty"/>
    <!-- Everything that is a unit derives from this.  This is a named default, instead of an
         an unnamed one so that if we need to have units that don't need to have some of the
         stuff that is here, we can just put them on a different name.  Otherwise, we'd have to
         re-parent all the units that were relying on the unnamed default, which is a nightmare.
         Removes are to be used as a last resort, b/c they are more complex.  They require an
         add and a remove and can break if the add goes away, as opposed to having another
         default and a lack of add.  (If that makes any sense.)
         -->
    <CActorUnit default="1" id="GenericUnitMinimal">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <StatusBarFlags index="Shields" value="1"/>
        <StatusBarFlags index="Life" value="1"/>
        <StatusBarFlags index="Energy" value="1"/>
        <StatusBarFlags index="Cargo" value="1"/>
        <StatusBarFlags index="Progress" value="1"/>
        <StatusBarFlags index="Duration" value="1"/>
        <StatusBarFlags index="Magazine" value="1"/>
        <StatusBarFlags index="Workers" value="1"/>
        <StatusBarFlags index="Custom" value="1"/>
        <StatusBarGroups index="Owner" value="1"/>
        <StatusBarGroups index="Allied" value="1"/>
        <StatusBarGroups index="Enemy" value="1"/>
        <StatusBarGroups index="All" value="1"/>
        <StatusColors index="Shields" BackgroundColor="255,0,0,0" EmptyColor="255,80,80,80">
            <ColorArray value="255,0,0,255"/>
        </StatusColors>
        <StatusColors index="Life" BackgroundColor="255,0,0,0" EmptyColor="255,80,80,80">
            <ColorArray value="255,208,34,0"/>
            <ColorArray value="255,208,34,0"/>
            <ColorArray value="255,229,129,0"/>
            <ColorArray value="255,229,129,0"/>
            <ColorArray value="255,229,221,0"/>
            <ColorArray value="255,229,221,0"/>
            <ColorArray value="255,22,229,0"/>
            <ColorArray value="255,22,229,0"/>
        </StatusColors>
        <StatusColors index="Energy" BackgroundColor="255,0,0,0" EmptyColor="255,80,80,80">
            <ColorArray value="255,150,40,220"/>
        </StatusColors>
        <StatusColors index="Cargo" BackgroundColor="255,0,0,0" EmptyColor="255,77,60,15">
            <ColorArray value="255,255,255,255"/>
        </StatusColors>
        <StatusColors index="Progress" BackgroundColor="255,0,0,0" EmptyColor="255,80,80,80">
            <ColorArray value="255,0,200,200"/>
        </StatusColors>
        <StatusColors index="Duration" BackgroundColor="255,0,0,0" EmptyColor="255,40,40,40">
            <ColorArray value="255,120,120,120"/>
        </StatusColors>
        <StatusColors index="Magazine" BackgroundColor="255,0,0,0" EmptyColor="255,77,60,15">
            <ColorArray value="255,128,128,64"/>
        </StatusColors>
        <BarDistance value="34"/>
        <BarWidth value="60"/>
        <BarHeight value="7"/>
        <BarOffset value="100"/>
        <NameOffset value="30"/>
        <HighlightTooltip value="Unit/Name/##unitName##"/>
        <CopySource value="_Unit"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
        <ModelFlags index="NeedsVolumeMonitoring" value="1"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <UnitFlags index="ShowBlobShadow" value="1"/>
        <GlossaryAnim value="Stand"/>
        <MinimapIconScale value="1.000000"/>
        <MinimapIconBackgroundScale value="1.000000"/>
        <MinimapFlashWhenAttacked value="1"/>
        <MinimapUseSelfColor value="1"/>
        <MinimapUseSelectionColor value="1"/>
        <AcceptedTransfers index="AnimProps" value="1"/>
        <AcceptedTransfers index="Textures" value="1"/>
        <AcceptedTransfers index="Status" value="1"/>
        <!-- Probably never appropriate to keep this, since it comes from the model, which isn't
             transferred. -->
        <AcceptedHostedPropTransfers index="BaseModelScale" value="0"/>
        <!-- If we change this, we need to revisit GenericUnitBaseMorphTransition and see if it
             then makes more sense to turn off the baseline via message. -->
        <Baselines index="Stand" AnimProps="Stand" BlendIn="-1.000000" BlendOut="-1.000000"/>
        <Baselines index="Walk" AnimProps="Walk" BlendIn="-1.000000" BlendOut="-1.000000"/>
        <RandomScaleRange value="1.000000,1.000000"/>
        <WalkAnimMoveSpeed value="3.75"/>
        <Model value="##unitName##"/>
        <BuildModel value="##unitName##"/>
        <PlacementModel value="##unitName##"/>
        <PlacementActorModel value="PlacementModel"/>
        <PlaceholderActorModel value="PlaceholderModel"/>
        <PortraitActor value="PortraitActor"/>
        <PortraitModel value="StaticPortrait"/>
        <DeathActorModel value="UnitDeathModel"/>
        <DeathActorModelLow value="UnitDeathModelUnscaled"/>
        <DeathActorSound value="UnitDeathSound"/>
        <DeathActorVoice value="UnitDeathVoice"/>
        <SnapshotActor value="Snapshot"/>
        <Aliases value="_Unit"/>
        <Aliases value="_Selectable"/>
        <On Terms="UnitBirth.##unitName##" Send="Create SoundEmitter ##unitName##_Ambience"/>
        <On Terms="UnitBirth.##unitName##" Send="Create"/>
        <On Terms="UnitRevive.##unitName##" Send="Create"/>
        <On Terms="UnitRevive.##unitName##" Send="RefSet ::HostTurretBody _Selectable"/>
        <On Terms="UnitConstruction.##unitName##.Start" Send="Create"/>
        <On Terms="UnitConstruction.##unitName##.Finish" Send="AnimPlay ConstructionDeath Stand,Birth,Death FullMatch"/>
        <On Terms="AnimDone.*.Missing; AnimName ConstructionDeath" Send="Destroy"/>
        <On Terms="ActorCreation; ValidateUnit IsFlying; Option Shadow Low; $AllowBlobShadow" Send="Create FlyerShadow"/>
        <On Terms="ActorCreation; ValidateUnit IsNotFlying; Option Shadow Low; $AllowBlobShadow" Send="Create GroundShadow"/>
        <MinimapRenderPriority value="Normal"/>
    </CActorUnit>
    <!-- For anything that can be selected.  Primarily for cinematic doodads. -->
    <CActorUnit default="1" id="GenericUnitSelectable" parent="GenericUnitMinimal">
        <UnitIcon value="Assets\Textures\btn-missing-kaeo.dds"/>
        <HeroIcon value="Assets\Textures\btn-missing-kaeo.dds"/>
        <SoundArray index="Birth" value="##unitName##_Birth"/>
        <SoundArray index="Ready" value="##unitName##_Ready"/>
        <SoundArray index="Help" value="##unitName##_Help"/>
        <SoundArray index="What" value="##unitName##_What"/>
        <SoundArray index="Yes" value="##unitName##_Yes"/>
        <SoundArray index="Attack" value="##unitName##_Attack"/>
        <SoundArray index="Pissed" value="##unitName##_Pissed"/>
        <SoundArray index="Movement" value="##unitName##_Movement"/>
        <SoundArray index="Turning" value="##unitName##_Turning"/>
        <SoundArray index="Board" value="##unitName##_Board"/>
        <SoundArray index="Click" value="##unitName##_Click"/>
        <SoundArray index="ClickError" value="##unitName##_ClickError"/>
        <SoundArray index="Highlight" value="##unitName##_Highlight"/>
        <GroupSoundThreshold value="2"/>
        <GroupSoundArray index="What" value="##unitName##_GroupWhat"/>
        <GroupSoundArray index="Yes" value="##unitName##_GroupYes"/>
        <GroupSoundArray index="Attack" value="##unitName##_GroupAttack"/>
        <GroupSoundArray index="Board" value="##unitName##_GroupBoard"/>
        <ShieldArmorIcon value="Assets\Textures\btn-upgrade-protoss-shieldslevel0.dds"/>
        <!--On Terms="StatusOn.*.PreTargetingModel; ValidateUnit IsNotFlying" Send="Create ModelPretargetGround"/-->
        <On Terms="StatusOn.*.PreTargetingModel" Send="Create ModelPretargetGround"/>
        <On Terms="StatusOff.*.PreTargetingModel" Target="ModelPretargetGround" Send="Destroy"/>
        <On Terms="StatusOn.*.PreTargetingModel; ValidateUnit IsFlying" Send="Create GroundPreSelection"/>
        <On Terms="StatusOff.*.PreTargetingModel" Target="GroundPreSelection" Send="Destroy"/>
        <On Terms="StatusIncrement.*.PreTargetingModel; IsStatus PreTargetingModel 2" Send="StatusSet PreTargetingModel 1"/>
        <!-- Message rerouted from StatusX messages like this to preserve backwards compatability
             with modder data.  Pretargeting is now done differently, but will still need to
             support data that uses the PreTargetingUpdate message. -->
        <On Terms="PreTargetingUpdate.*.Start" Send="SetTintColorBlendPair 255,192,192 255,128,128 0.150000 Bounce Pretarget"/>
        <On Terms="PreTargetingUpdate.*.Stop" Send="ClearTintColor 0.100000 Pretarget"/>
        <On Terms="StatusOn.*.PreTargetingTint" Send="PreTargetingUpdate Start"/>
        <On Terms="StatusOff.*.PreTargetingTint" Send="PreTargetingUpdate Stop"/>
        <On Terms="StatusIncrement.*.PreTargetingTint; IsStatus PreTargetingTint 2" Send="StatusSet PreTargetingTint 1"/>
        <!-- Flyer helper pretargeting and selection updates -->
        <On Terms="CursorUpdate.*.Start; ValidateUnit IsFlying" Send="StatusIncrement FlyerHelper"/>
        <On Terms="CursorUpdate.*.Stop; ValidateUnit IsFlying; HasStatus FlyerHelper" Send="StatusDecrement FlyerHelper"/>
        <On Terms="ActorCreation; ScopeContains GroundLocalSelection" Send="StatusSet Selected 1"/>
        <On Terms="SelectionLocalUpdate.*.Start" Send="StatusSet Selected 1"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="StatusSet Selected 0"/>
        <On Terms="StatusOn.*.Selected; ValidateUnit IsFlying" Send="StatusIncrement FlyerHelper"/>
        <On Terms="StatusOff.*.Selected; ValidateUnit IsFlying; HasStatus FlyerHelper" Send="StatusDecrement FlyerHelper"/>
        <!-- Flyer helper creation/destruction -->
        <On Terms="StatusOn.*.FlyerHelper; FlyerHelper All" Send="Create FlyerHelperSplat"/>
        <On Terms="StatusOn.*.FlyerHelper; FlyerHelper Selected" Send="Create FlyerHelperSplat"/>
        <On Terms="StatusOff.*.FlyerHelper; FlyerHelper Selected" Target="FlyerHelperSplat" Send="Destroy"/>
        <On Terms="ActorCreation; FlyerHelper All; ValidateUnit IsFlying" Send="Create FlyerHelperSplat"/>
        <On Terms="ActorDestruction; FlyerHelper All; !HasStatus FlyerHelper" Target="FlyerHelperSplat" Send="Destroy"/>
        <On Terms="FlyerHelperChange; FlyerHelper None" Target="FlyerHelperSplat" Send="Destroy"/>
        <On Terms="FlyerHelperChange; FlyerHelper Selected; HasStatus FlyerHelper; !ScopeContains FlyerHelperSplat" Send="Create FlyerHelperSplat"/>
        <On Terms="FlyerHelperChange; FlyerHelper Selected; !HasStatus FlyerHelper" Target="FlyerHelperSplat" Send="Destroy"/>
        <On Terms="FlyerHelperChange; FlyerHelper All; ValidateUnit IsFlying; !ScopeContains FlyerHelperSplat" Send="Create FlyerHelperSplat"/>
        <!-- Upgrade flashing -->
        <!--
        <On Terms="Upgrade.*.Add" Send="SetTintColorBlendPair {255,255,255 10} {255,255,255 1} 0.5 OneShot UpgradeTint 175.0"/>
        <On Terms="Upgrade.*.Add" Send="TimerSet 0.5 ClearUpgradeTint"/>
        <On Terms="TimerExpired; TimerName ClearUpgradeTint" Send="ClearTintColor 0.1 UpgradeTint"/>
        -->
    </CActorUnit>
    <CActorUnit default="1" id="GenericUnitBase" parent="GenericUnitSelectable">
        <UnitFlags index="StandAnimBirthVariation" value="1"/>
        <VarianceWindowStandIntro value="0.330000"/>
        <VarianceWindowStand value="1.000000"/>
        <VarianceWindowWalkIntro value="0.330000"/>
        <VarianceWindowWalk value="1.000000"/>
        <VarianceWindowWalkOutro value="0.330000"/>
        <EventDataFootprint Actor="UnitFootprint" Model="##unitName##Footprint"/>
        <EventDataSound Actor="UnitSound"/>
        <DeathArray index="Normal">
            <AnimProps value="Death"/>
            <ModelLink value="##unitName##"/>
            <SoundLink value="##unitName##Death"/>
            <VoiceLink value="##unitName##DeathVoice"/>
        </DeathArray>
        <DeathArray index="Eat" AnimProps="Death,Eat"/>
        <DeathArray index="Eviscerate" AnimProps="Death,Eviscerate"/>
        <DeathArray index="Fire" AnimProps="Death,Fire"/>
        <DeathArray index="Silentkill" AnimProps="Death,Silentkill"/>
        <DeathArray index="Squish" AnimProps="Death,Squish"/>
        <DeathArray index="UnderConstruction" AnimProps="Death"/>
        <DeathCustoms ModelLink="ZergSmallUnitDeathLow" Name="AntiGravGeneric"/>
        <DeathCustoms ModelLink="ProtossSmallUnitDeathLow" Name="AntiGravProtoss"/>
        <DeathCustoms ModelLink="TerranSmallUnitDeathLow" Name="AntiGravTerran"/>
        <DeathCustoms ModelLink="ZergSmallUnitDeathLow" Name="AntiGravZerg"/>
        <DeathCustoms ModelLink="Invisible" Name="Vortex"/>
        <!-- Unfortunate that we have to instantiate all these custom deaths for every unit.  But
             the alternative would be to put these in each individual unit entry, and then we
             wouldn't be able to easily change the SyncPassChance values across the unit set. -->
        <DeathCustomData Name="RagdollBasic" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollBasicAndGibNoBlood" Members="RagdollBasicNoBlood;RagdollGibNoBlood" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollBaneling" Supersedes="RagdollBasic" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollSiegeTank" Supersedes="RagdollBasic" SyncPassChance="55"/>
        <DeathCustomData Name="RagdollNuke" Supersedes="RagdollBasic" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollUltraUnburrow"/>
        <DeathCustomData Name="RagdollSpineCrawlerHurl" SyncPassChance="25"/>
        <DeathCustomData Name="RagdollOverkillDPRH" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollOverkillDOI" SyncPassChance="33"/>
        <DeathCustomData Name="RagdollFire" Supersedes="RagdollBasic,RagdollOverkillDOI,RagdollOverkillDPRH" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollAcid" Supersedes="RagdollBasic,RagdollOverkillDOI,RagdollOverkillDPRH" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollMidair" Supersedes="RagdollBasic,RagdollOverkillDOI,RagdollOverkillDPRH"/>
        <DeathCustomData Name="RagdollUpgraded" Supersedes="RagdollBasic,RagdollOverkillDOI,RagdollOverkillDPRH" SyncPassChance="50"/>
        <DeathCustomData Name="RagdollUpgradedMidair" Supersedes="RagdollBasic,RagdollOverkillDOI,RagdollOverkillDPRH,RagdollMidair"/>
        <DeathCustomData Name="RagdollAoE"/>
        <OverkillByDamagePastRemainingHealth Value="30" TestType="PercentageOfMaxLifePlusShields"/>
        <OverkillByDamageOverInterval Value="70" Interval="1" TestType="PercentageOfMaxLifePlusShields"/>
        <PhysicsMatchKeysOrdered value="Basic"/>
        <StatusTextInfo>
            <Offset value="0,16"/>
            <Attachment value="Ref_StatusBar"/>
            <FontSize value="16"/>
            <BackgroundColor value="255,255,255,255"/>
            <BackgroundImage value="Assets\Textures\ui_ingame_workercount_bg.dds"/>
        </StatusTextInfo>
        <Macros value="DeadAnimationMacro"/>
        <!--Macros value="NanniteCreationMacro"/-->
        <On Terms="UnitBirth.*.Normal" Send="$Birth 0 0.000000"/>
        <On Terms="UnitFidget" Send="AnimPlay Fidget Fidget"/>
        <On Terms="UnitMovementUpdate.*.Walk" Send="AnimClear Fidget"/>
        <!-- Route this message to another actor.  The rationale is that we don't broadcast
             this message for perf reasons.  But we want to minimize the amount of spell-
             specific stuff we have down in the generic unit. -->
        <On Terms="UnitDetectedByViewer.*.On; ValidateUnit IsHallucination" Target="_HallucinationTinter" Send="Signal HallucinationTintOn"/>
        <On Terms="UnitDetectedByViewer.*.Off; ValidateUnit IsHallucination" Target="_HallucinationTinter" Send="Signal HallucinationTintOff"/>
        <On Terms="UnitDeathCustomize; ValidateUnit NotStructure; IsStatus InAir 1" Send="DeathCustomize AntiGravGeneric"/>
        <On Terms="UnitDeathCustomize; ValidateUnit IsProtossUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravProtoss"/>
        <On Terms="UnitDeathCustomize; ValidateUnit IsTerranUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravTerran"/>
        <On Terms="UnitDeathCustomize; ValidateUnit IsZergUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravZerg"/>
        <On Terms="UnitDeathCustomize; ValidateUnit IsVortexed" Send="DeathCustomize Vortex"/>
        <On Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathProtoss" Send="DeathCustomize AntiGravProtoss"/>
        <On Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathZerg" Send="DeathCustomize AntiGravZerg"/>
        <On Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathTerran" Send="DeathCustomize AntiGravTerran"/>
        <On Terms="Behavior.PhoenixAntiGrav.On" Send="ModelSuddenMotionStart"/>
        <On Terms="Behavior.PhoenixAntiGrav.Off" Send="ModelSuddenMotionStop"/>
        <On Terms="Behavior.ForceLowDeath.On" Send="DeathCustomsEnablePhysics 0"/>
        <On Terms="UnitTaunt.*.Start; Taunt" Send="AnimPlay Cheer Stand,Victory"/>
        <On Terms="UnitTaunt.*.Stop; Taunt" Send="AnimClear Cheer"/>
        <On Terms="UnitTaunt.*.Start; Taunt Dance" Send="AnimPlay Dance Stand,Dance"/>
        <On Terms="UnitTaunt.*.Stop; Taunt Dance" Send="AnimClear Dance"/>
        <On Terms="UnitTaunt.*.Start; Taunt Tease" Send="AnimPlay Taunt Taunt"/>
        <On Terms="UnitTaunt.*.Stop; Taunt Tease" Send="AnimClear Taunt"/>
        <On Terms="ActorCreation" Send="StatusSet InAir 0"/>
        <On Terms="UnitHeightUpdate.*.Lift" Send="StatusSet InAir 1"/>
        <On Terms="UnitHeightUpdate.*.Land" Send="StatusSet InAir 0"/>
        <!-- PH Behavior - do something better with this -->
        <!--
        <On Terms="BuildCoachHover.*.On" Send="SetTintColor 0,255,0 0.1"/>
        <On Terms="BuildCoachHover.*.Off" Send="SetTintColor 255,255,255 1.00"/>        
        -->
        <On Terms="BuildCoachHover.*.On" Send="TimerKill DelayUnhighlight"/>
        <On Terms="BuildCoachHover.*.On" Send="SetTintColor 0,255,0 0.100000"/>
        <On Terms="BuildCoachHover.*.Off" Send="TimerSet 0.300000 DelayUnhighlight"/>
        <On Terms="TimerExpired; TimerName DelayUnhighlight" Send="SetTintColor 255,255,255 0.500000"/>
    </CActorUnit>
    <!-- For any unit that might some day have an attack.  Probabably a good base class for all
         main tech tree units and buildings. -->
    <CActorUnit default="1" id="GenericUnitStandard" parent="GenericUnitBase">
        <!-- All units have the base ability to respond to weapon signals, so they can attack. -->
        <On Terms="Abil.attack.ReadyStart" Send="AnimGroupApply Ready"/>
        <On Terms="WeaponStart.*.AttackStart" Send="AnimBracketStart Attack Attack"/>
        <On Terms="WeaponStart.*.AttackStart; AnimPlaying Birth" Send="AnimClear Birth"/>
        <On Terms="WeaponStop.*.AttackStop" Send="AnimBracketStop Attack"/>
        <On Terms="Abil.attack.ReadyStop" Send="AnimGroupRemove Ready"/>
    </CActorUnit>
    <!-- Same but without sound links for units that dont need the sounds, saves on memory -->
    <CActorUnit default="1" id="GenericUnitSelectableNoAutoSoundLinks" parent="GenericUnitSelectable">
        <SoundArray index="Birth" value=""/>
        <SoundArray index="Ready" value=""/>
        <SoundArray index="Help" value=""/>
        <SoundArray index="What" value=""/>
        <SoundArray index="Yes" value=""/>
        <SoundArray index="Attack" value=""/>
        <SoundArray index="Pissed" value=""/>
        <SoundArray index="Movement" value=""/>
        <SoundArray index="Turning" value=""/>
        <SoundArray index="Board" value=""/>
        <SoundArray index="Click" value=""/>
        <SoundArray index="ClickError" value=""/>
        <SoundArray index="Highlight" value=""/>
        <GroupSoundArray index="What" value=""/>
        <GroupSoundArray index="Yes" value=""/>
        <GroupSoundArray index="Attack" value=""/>
        <GroupSoundArray index="Board" value=""/>
    </CActorUnit>
    <CActorUnit default="1" id="GenericUnitBaseNoAutoSoundLinks" parent="GenericUnitBase">
        <SoundArray index="Birth" value=""/>
        <SoundArray index="Ready" value=""/>
        <SoundArray index="Help" value=""/>
        <SoundArray index="What" value=""/>
        <SoundArray index="Yes" value=""/>
        <SoundArray index="Attack" value=""/>
        <SoundArray index="Pissed" value=""/>
        <SoundArray index="Movement" value=""/>
        <SoundArray index="Turning" value=""/>
        <SoundArray index="Board" value=""/>
        <SoundArray index="Click" value=""/>
        <SoundArray index="ClickError" value=""/>
        <SoundArray index="Highlight" value=""/>
        <GroupSoundArray index="What" value=""/>
        <GroupSoundArray index="Yes" value=""/>
        <GroupSoundArray index="Attack" value=""/>
        <GroupSoundArray index="Board" value=""/>
    </CActorUnit>
    <CActorUnit default="1" id="GenericUnitStandardNoAutoSoundLinks" parent="GenericUnitStandard">
        <SoundArray index="Birth" value=""/>
        <SoundArray index="Ready" value=""/>
        <SoundArray index="Help" value=""/>
        <SoundArray index="What" value=""/>
        <SoundArray index="Yes" value=""/>
        <SoundArray index="Attack" value=""/>
        <SoundArray index="Pissed" value=""/>
        <SoundArray index="Movement" value=""/>
        <SoundArray index="Turning" value=""/>
        <SoundArray index="Board" value=""/>
        <SoundArray index="Click" value=""/>
        <SoundArray index="ClickError" value=""/>
        <SoundArray index="Highlight" value=""/>
        <GroupSoundArray index="What" value=""/>
        <GroupSoundArray index="Yes" value=""/>
        <GroupSoundArray index="Attack" value=""/>
        <GroupSoundArray index="Board" value=""/>
    </CActorUnit>
    <CActorUnit default="1" id="GenericUnitCritter" parent="GenericUnitStandard">
        <StatusBarGroups index="Owner" value="0"/>
        <StatusBarGroups index="Allied" value="0"/>
        <StatusBarGroups index="Enemy" value="0"/>
        <StatusBarGroups index="All" value="0"/>
    </CActorUnit>
    <CActorUnit default="1" id="DestructibleUnitStandard" parent="GenericUnitStandardNoAutoSoundLinks">
        <DeathArray index="Normal" SoundLink="Destructible_RockDeath"/>
    </CActorUnit>
    <CActorUnit default="1" id="GenericUnitBaseMorphTransition" parent="GenericUnitBase">
        <Baselines index="Stand" AnimProps=""/>
        <Baselines index="Walk" AnimProps=""/>
        <On Terms="AbilMorph.*.Pause" Send="AnimSetPausedAll"/>
        <On Terms="AbilMorph.*.Resume" Send="AnimSetPausedAll 0"/>
    </CActorUnit>
    <!-- For units that can be morphed into or out of. -->
    <CActorUnit default="1" id="GenericUnitMorph" parent="GenericUnitStandard">
        <UnitFlags index="StandAnimBirthVariation" value="0"/>
        <On Terms="AbilMorph.*.Finish; MorphTo ##unitName##" Send="Create"/>
        <On Terms="AbilMorph.*.Start; MorphFrom ##unitName##" Send="Destroy"/>
    </CActorUnit>
    <CActorUnit default="1" id="PathingBlocker" parent="GenericUnitBaseNoAutoSoundLinks">
        <StatusBarFlags index="Shields" value="0"/>
        <StatusBarFlags index="Life" value="0"/>
        <StatusBarFlags index="Energy" value="0"/>
        <StatusBarFlags index="Cargo" value="0"/>
        <StatusBarFlags index="Progress" value="0"/>
        <StatusBarFlags index="Duration" value="0"/>
        <StatusBarFlags index="Magazine" value="0"/>
        <StatusBarFlags index="Workers" value="0"/>
        <Model value="Invisible"/>
        <EditorModel value="PathingBlockerHelper"/>
        <WalkAnimMoveSpeed value="0"/>
        <UnitFlags index="ShowBlobShadow" value="0"/>
    </CActorUnit>
    <CActorUnit default="1" id="Beacon" parent="GenericUnitSelectableNoAutoSoundLinks">
        <StatusBarFlags index="Shields" value="0"/>
        <StatusBarFlags index="Life" value="0"/>
        <StatusBarFlags index="Energy" value="0"/>
        <StatusBarFlags index="Cargo" value="0"/>
        <StatusBarFlags index="Progress" value="0"/>
        <StatusBarFlags index="Duration" value="0"/>
        <StatusBarFlags index="Magazine" value="0"/>
        <StatusBarFlags index="Workers" value="0"/>
        <WalkAnimMoveSpeed value="0"/>
        <UnitFlags index="ShowBlobShadow" value="0"/>
        <Filter index="Neutral" value="1"/>
        <Filter index="Enemy" value="1"/>
        <On Terms="AIUIUpdate; AIUIMode" Send="SetVisibility"/>
        <On Terms="AIUIUpdate; !AIUIMode" Send="SetVisibility 1"/>
        <On Terms="AIUIUpdate; !AIUIMode Selectable" Send="SetOpacity 0.300000"/>
        <On Terms="AIUIUpdate; AIUIMode Selectable" Send="SetOpacity 0.400000"/>
        <MinimapRenderPriority value="Beacon"/>
    </CActorUnit>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Squibs ================================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Simple squibs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--                                                                                         -->
    <CActorSquib default="1">
        <HarnessModel value="ModelOneShot"/>
        <HarnessSound value="Sound"/>
        <Map index="None" Model="##id##" Sound="##id##"/>
    </CActorSquib>
    <!--                                                                                         -->
    <!-- CActorAction ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--                                                                                         -->
    <CActorBeamSimple default="1" id="GenericAttackBeam" parent="BeamSimpleAnimationStyleOneShot"/>
    <!--                                                                                         -->
    <CActorMissile default="1" id="GenericAttackMissile">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <!-- Override baseline so we play birth if we have it, and *then* play Stand perpetually,
             (rather than walk of course).  We don't play deaths right now, b/c those are
             typically separate models.  We don't do this in the default to avoid messing up the
             Reaper.-->
        <Aliases value="_Unit"/>
        <Aliases value="_Missile"/>
        <PreHost value="_ActorAction"/>
        <Model value="##unitName##"/>
        <On Terms="UnitBirth.##unitName##" Send="Create"/>
        <On Terms="UnitBirth" Send="AnimBracketStart Lifetime Birth Stand"/>
        <On Terms="UnitDeath" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorMissile>
    <CActorMissile default="1" id="GenericAttackMissileNoEvents">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <!-- Override baseline so we play birth if we have it, and *then* play Stand perpetually,
             (rather than walk of course).  We don't play deaths right now, b/c those are
             typically separate models.  We don't do this in the default to avoid messing up the
             Reaper.-->
        <Aliases value="_Unit"/>
        <Aliases value="_Missile"/>
        <PreHost value="_ActorAction"/>
        <Model value="##unitName##"/>
    </CActorMissile>
    <CActorMissile default="1" id="GenericTentacleMissile" parent="GenericAttackMissile">
        <IsTentacle value="1"/>
        <On Terms="Effect.*.Return" Send="MissileTentacleReturn"/>
    </CActorMissile>
    <!-- Missile which includes a death animation -->
    <CActorMissile default="1" id="GenericAttackMissileWithDeathAnim">
        <?token id="unitName" type="CUnitLink" value="Bogus"?>
        <Aliases value="_Unit"/>
        <Aliases value="_Missile"/>
        <PreHost value="_ActorAction"/>
        <Model value="##unitName##"/>
        <On Terms="UnitBirth.##unitName##" Send="Create"/>
        <On Terms="UnitBirth" Send="AnimBracketStart BSD Birth Stand Death"/>
        <On Terms="UnitDeath" Send="AnimBracketStop BSD"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop BSD"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
        <DeathActorModel value="UnitDeathModel"/>
        <DeathActorModelLow value="UnitDeathModel"/>
        <CopySource value="_Unit"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <AcceptedTransfers index="AnimProps" value="1"/>
        <AcceptedTransfers index="Textures" value="1"/>
        <AcceptedTransfers index="Status" value="1"/>
        <AcceptedHostedPropTransfers index="BaseModelScale" value="0"/>
        <DeathArray index="Normal">
            <AnimProps value="Death"/>
            <ModelLink value="##unitName##"/>
            <SoundLink value="##unitName##Death"/>
            <VoiceLink value="##unitName##DeathVoice"/>
        </DeathArray>
    </CActorMissile>
    <!--                                                                                         -->
    <!-- For most attacks, including melee, direct, beam and missile.  Supports splash damage    -->
    <!-- from CEffectDamage.  Base class is also sometimes used directly by more sophisticated   -->
    <!-- effects.                                                                                -->
    <!--                                                                                         -->
    <CActorAction default="1" id="GenericAttackBase">
        <Aliases value="_ActorAction"/>
        <LaunchGuideAlias value="_LaunchGuide"/>
        <LaunchSite value="GenericAttackLaunchSite"/>
        <LaunchSiteOps Ops="SOpAttachHarness"/>
        <LaunchSiteFallback value="GenericAttackLaunchFallbackSite"/>
        <LaunchAttachQuery Methods="$GenericAttackLaunchMethods" Fallback="Center"/>
        <LaunchAssets Model="##id##Launch" Sound="##id##Launch"/>
        <LaunchModel value="GenericAttackLaunchModel"/>
        <LaunchSound value="GenericAttackLaunchSound"/>
        <LaunchTerrainSquibModel value="GenericAttackLaunchTerrainSquibModel"/>
        <LaunchTerrainSquibSound value="GenericAttackLaunchTerrainSquibSound"/>
        <ContainerSite value="GenericAttackLaunchSite"/>
        <ContainerSiteOps Ops="SOpAttachHarness SOpForwardTargetPoint"/>
        <ContainerAttachQuery Methods="$GenericBunkerAttackLaunchMethods" Fallback="Center"/>
        <!-- Here until we have another place units can fire out of. -->
        <ContainerAssets Model="##effectAttack##BunkerAttackLaunch" Sound="##effectAttack##BunkerAttackLaunch"/>
        <ContainerModel value="GenericAttackLaunchModel"/>
        <ContainerSound value="GenericAttackLaunchSound"/>
        <ContainerTerrainSquibModel value="GenericAttackLaunchTerrainSquibModel"/>
        <ContainerTerrainSquibSound value="GenericAttackLaunchTerrainSquibSound"/>
        <Beam value="##id##Beam"/>
        <BeamScope value="Effect"/>
        <Missile value="##id##Missile"/>
        <ImpactGuideAlias value="_ImpactGuide"/>
        <ImpactSiteOps Ops="SOpAttachHarness SOpAttachVolumeStandard"/>
        <ImpactSite value="GenericAttackImpactSite"/>
        <ImpactSiteFallback value="GenericAttackImpactFallbackSite"/>
        <ImpactAttachQuery Methods="$GenericAttackTargetMethods" Fallback="Center"/>
        <ImpactReattachQuery Methods="AMVolumesRequery" Fallback="Center"/>
        <ImpactPointSite value="GenericAttackImpactPointSite"/>
        <ImpactPointSiteOps Ops="SOpTargetPointStationary"/>
        <ImpactMap index="None" Model="##id##Impact" Sound="##id##Impact" ModelReaction="##id##ImpactReaction"/>
        <!--Recovering memory, the engine will try and reserve model and sound ID's for every CActorAction ever using the following but these are very rarely used -->
        <!--ImpactMap index="Dirt" ModelReaction="##id##ImpactReactionDirt" Sound="##id##ImpactDirt"/>
        <ImpactMap index="Rock" ModelReaction="##id##ImpactReactionRock" Sound="##id##ImpactRock"/>
        <ImpactMap index="Snow" ModelReaction="##id##ImpactReactionSnow" Sound="##id##ImpactSnow"/>
        <ImpactMap index="Sand" ModelReaction="##id##ImpactReactionSand" Sound="##id##ImpactSand"/>
        <ImpactMap index="Water" ModelReaction="##id##ImpactReactionWater" Sound="##id##ImpactWater"/>
        <ImpactMap index="Flesh" ModelReaction="##id##ImpactReactionFlesh" Sound="##id##ImpactFlesh"/>
        <ImpactMap index="LightArmor" ModelReaction="##id##ImpactReactionLightArmor" Sound="##id##ImpactLightArmor"/>
        <ImpactMap index="Metal" ModelReaction="##id##ImpactReactionMetal" Sound="##id##ImpactMetal"/-->
        <ImpactMap index="Shield" Sound="##id##ImpactShield" ModelReaction="##id##ImpactReactionShield"/>
        <ImpactModel value="GenericAttackImpactModel"/>
        <ImpactModelReaction value="GenericAttackImpactModelReaction"/>
        <ImpactSound value="GenericAttackImpactSound"/>
        <ImpactTerrainSquibModel value="GenericAttackImpactTerrainSquibModel"/>
        <ImpactTerrainSquibSound value="GenericAttackImpactTerrainSquibSound"/>
        <DamageSite value="GenericAttackDamageSite"/>
        <DamageSiteOps Ops="SOpAttachHarness SOpAttachVolumeStandard"/>
        <DamageAttachQuery Methods="$GenericAttackTargetMethods" Fallback="Center"/>
        <DamageReattachQuery Methods="AMVolumesRequery" Fallback="Center"/>
        <DamageMap index="None" Model="##id##Damage" Sound="##id##Damage" ModelReaction="##id##DamageReaction"/>
        <!--Recovering memory, the engine will try and reserve model and sound ID's for every CActorAction ever using the following but these are very rarely used -->
        <!--DamageMap index="Dirt" ModelReaction="##id##DamageReactionDirt" Sound="##id##DamageDirt"/>
        <DamageMap index="Rock" ModelReaction="##id##DamageReactionRock" Sound="##id##DamageRock"/>
        <DamageMap index="Snow" ModelReaction="##id##DamageReactionSnow" Sound="##id##DamageSnow"/>
        <DamageMap index="Sand" ModelReaction="##id##DamageReactionSand" Sound="##id##DamageSand"/>
        <DamageMap index="Water" ModelReaction="##id##DamageReactionWater" Sound="##id##DamageWater"/>
        <DamageMap index="Flesh" ModelReaction="##id##DamageReactionFlesh" Sound="##id##DamageFlesh"/>
        <DamageMap index="LightArmor" ModelReaction="##id##DamageReactionLightArmor" Sound="##id##DamageLightArmor"/>
        <DamageMap index="Metal" ModelReaction="##id##DamageReactionMetal" Sound="##id##DamageMetal"/-->
        <DamageMap index="Shield" Sound="##id##DamageShield" ModelReaction="##id##DamageReactionShield"/>
        <DamageModel value="GenericAttackDamageModel"/>
        <DamageModelReaction value="GenericAttackDamageModelReaction"/>
        <DamageSound value="GenericAttackDamageSound"/>
        <DamageTerrainSquibModel value="GenericAttackDamageTerrainSquibModel"/>
        <DamageTerrainSquibSound value="GenericAttackDamageTerrainSquibSound"/>
        <AttackAnimSource value="::Main"/>
        <AttackAnimName value="Attack"/>
        <Lifetime value="0.100000"/>
    </CActorAction>
    <!--                                                                                         -->
    <!-- For basic melee, direct, beam and missile attacks.                                      -->
    <!--                                                                                         -->
    <CActorAction default="1" id="GenericAttackNoCreateBase" parent="GenericAttackBase">
        <?token id="effectAttack" type="CEffectLink" value="Bogus"?>
        <?token id="effectImpact" type="CEffectLink" value="Bogus"?>
        <On Terms="Effect.##effectAttack##.Stop; FromEffectTreeDescendant" Send="ActionImpactPhysics"/>
        <On Terms="Effect.##effectImpact##.Start; FromEffectTreeDescendant" Send="ActionImpact"/>
        <On Terms="Effect.##effectImpact##.Stop; FromEffectTreeDescendant" Send="ActionImpactPhysics"/>
        <On Terms="Effect.SplashDamage.Start; FromEffectTreeDescendant" Send="ActionDamage"/>
        <On Terms="Effect.SplashDamage.Stop; FromEffectTreeDescendant" Send="ActionDamagePhysics"/>
    </CActorAction>
    <!--                                                                                         -->
    <CActorAction default="1" id="GenericAttack" parent="GenericAttackNoCreateBase">
        <?token id="effectLaunch" type="CEffectLink" value="Bogus"?>
        <On Terms="Effect.##effectAttack##.Start; At Caster" Send="Create"/>
        <On Terms="Effect.##effectLaunch##.Start; At Caster" Send="Create"/>
    </CActorAction>
    <!--                                                                                         -->
    <!-- For splash damage spread out via CEffectEnumArea + CEffectDamage (or whatever effect).  -->
    <!-- Includes spells like Psi Storm.                                                         -->
    <!--                                                                                         -->
    <CActorAction default="1" id="AoEAttackBase">
        <LaunchSiteFallback value="GenericAttackLaunchFallbackSite"/>
        <LaunchAssets Model="##id##Launch" Sound="##id##Launch"/>
        <LaunchModel value="GenericAttackLaunchModel"/>
        <LaunchSound value="GenericAttackLaunchSound"/>
        <DamageSite value="GenericAttackDamageSite"/>
        <DamageSiteOps Ops="SOpAttachHarness SOpForwardLaunchGuideDamage SOpPatch10"/>
        <DamageAttachQuery Methods="$GenericAttackTargetMethods" Fallback="Center"/>
        <DamageMap index="None" Sound="##id##Damage" ModelReaction="##id##DamageReaction"/>
        <DamageMap index="Dirt" Sound="##id##DamageDirt" ModelReaction="##id##DamageReactionDirt"/>
        <DamageMap index="Rock" Sound="##id##DamageRock" ModelReaction="##id##DamageReactionRock"/>
        <DamageMap index="Snow" Sound="##id##DamageSnow" ModelReaction="##id##DamageReactionSnow"/>
        <DamageMap index="Sand" Sound="##id##DamageSand" ModelReaction="##id##DamageReactionSand"/>
        <DamageMap index="Water" Sound="##id##DamageWater" ModelReaction="##id##DamageReactionWater"/>
        <DamageMap index="Flesh" Sound="##id##DamageFlesh" ModelReaction="##id##DamageReactionFlesh"/>
        <DamageMap index="Metal" Sound="##id##DamageMetal" ModelReaction="##id##DamageReactionMetal"/>
        <DamageMap index="Shield" Sound="##id##DamageShield" ModelReaction="##id##DamageReactionShield"/>
        <DamageModel value="GenericAttackModel"/>
        <DamageSound value="GenericAttackSound"/>
        <DamageModelReaction value="GenericAttackDamageModelReaction"/>
        <ShieldFlashType value="Full"/>
    </CActorAction>
    <!--                                                                                         -->
    <!-- For cases where AoE 'splash' damage applies.                                            -->
    <!--                                                                                         -->
    <CActorAction default="1" id="AoESplashShieldHitter" parent="AoEAttackBase">
        <?token id="effectHit" type="CEffectLink" value="Bogus"?>
        <On Terms="Effect.##effectHit##.Start" Send="Create"/>
        <On Terms="Effect.SplashDamage.Start" Send="ActionDamage"/>
        <On Terms="Effect.SplashDamage.Stop" Send="ActionDamagePhysics"/>
        <On Terms="Effect.##effectHit##.Stop" Send="Destroy"/>
    </CActorAction>
    <!--                                                                                         -->
    <!-- For simply triggering Protoss shields.                                                  -->
    <!--                                                                                         -->
    <CActorAction default="1" id="AoEAttackShieldHitter" parent="AoEAttackBase">
        <?token id="effectHit" type="CEffectLink" value="Bogus"?>
        <On Terms="Effect.##effectHit##.Start" Send="Create"/>
        <On Terms="Effect.##effectHit##.Start" Send="ActionDamage"/>
        <On Terms="Effect.##effectHit##.Stop" Send="ActionDamagePhysics"/>
        <On Terms="Effect.##effectHit##.Stop" Send="Destroy"/>
    </CActorAction>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Light ================================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorLightOmni default="1">
        <Model value="ActorLightOmni"/>
    </CActorLightOmni>
    <CActorLightSpot default="1">
        <Model value="ActorLightSpot"/>
    </CActorLightSpot>
    <CActorLightModel default="1">
        <On Terms="ActorCreation" Send="SetOpacity 0.050000"/>
        <ModelFlags index="WireframeRender" value="1"/>
        <Inherits index="TintColor" value="1"/>
    </CActorLightModel>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Look At =============================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorLookAt default="1">
        <Supporter Subject="::Creator"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <On Terms="SupporterDestruction" Send="Destroy"/>
    </CActorLookAt>
    <CActorSiteOpLocalOffset default="1"/>
    <CActorLookAt default="1" id="UnitTurret">
        <Supporter Subject="_Unit"/>
        <Remove Terms="ActorOrphan"/>
        <Remove Terms="SupporterDestruction"/>
        <HostTargetSiteOps Ops="SOpAttachCenter"/>
        <Type value="DefaultLookAtTurret"/>
    </CActorLookAt>
    <!-- Portrait Model -->
    <CActorPortrait default="1">
        <FogVisibility value="Visible"/>
        <On Terms="ActorCreation" Send="AnimPlay Stand00 Stand PlayForever"/>
        <On Terms="ActorCreation" Send="AnimBlendTimeApply 1.000000"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
    </CActorPortrait>
    <CActorBatch default="1"/>
    <CActorCamera id="CameraTest">
        <Camera value="Dflt"/>
        <Host Subject="_Selectable"/>
        <On Terms="ActorCreation" Send="CameraSetActive 1"/>
    </CActorCamera>
    <!-- Can't be a default or we can't use it in the CActorFoliageFXSpawner default. -->
    <CActorModel id="FoliageFXDefault">
        <On Terms="ActorCreation" Send="$Death"/>
        <On Terms="AnimDone; AnimName Death" Send="Destroy"/>
    </CActorModel>
    <!-- Doodad Death Macros ................................................................... -->
    <CActorEventMacro id="DoodadDeathMacro">
        <On Terms="Signal.*.DoodadDeath; AnimPlaying Stand" Send="$Death"/>
        <On Terms="Signal.*.DoodadDeath; AnimPlaying Stand" Send="AnimClear Stand"/>
        <On Terms="Signal.*.DoodadDead; AnimPlaying Stand" Send="AnimPlay Dead Dead PlayForever"/>
        <On Terms="Signal.*.DoodadDead; AnimPlaying Death" Send="AnimPlay Dead Dead PlayForever"/>
        <On Terms="Signal.*.DoodadDead; AnimPlaying Stand" Send="AnimClear Stand"/>
        <On Terms="Signal.*.DoodadDead; AnimPlaying Death" Send="AnimClear Death"/>
        <On Terms="AnimDone.*.Missing; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
        <On Terms="AnimDone; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
    </CActorEventMacro>
    <CActorEventMacro id="DoodadDeathMacroB">
        <On Terms="Signal.*.DoodadDeathB; AnimPlaying Stand" Send="$Death"/>
        <On Terms="Signal.*.DoodadDeathB; AnimPlaying Stand" Send="AnimClear Stand"/>
        <On Terms="AnimDone.*.Missing; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
        <On Terms="AnimDone; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
    </CActorEventMacro>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Global Config ========================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorGlobalConfig id="SYSTEM_ActorConfig">
        <SceneActor value="SYSTEM_Scene"/>
        <MainActor value="_Main"/>
        <MissileBoundsOptSpeedThreshold value="5.000000"/>
        <ModelCacheFallback value="SYSTEM_Fallback"/>
        <AttachHarnessActor value="Model"/>
        <AttachHarnessSOpAttach value="SOpAttachHarnessSoft"/>
        <AttachHarnessSOpLocalOffset value="SOpLocalOffsetHarness"/>
        <AttachHarnessSOpRotationExplicit value="SOpRotationExplicitHarness"/>
        <ActorUnitFallback value="GenericUnitFallback"/>
        <CommandUIActor value="CommandUIHarness"/>
        <CloakModel value="CloakModel"/>
        <CloakModelLow value="CloakModelLow"/>
        <CloakTransitionArray index="None">
            <StateArray index="Ally" Enter="Cloak,Start" Loop="Cloak"/>
            <StateArray index="Detected" Enter="Cloak,Start" Loop="Cloak"/>
            <StateArray index="Enemy" Enter="Cloak,Enemy,Start" Loop="Cloak,Enemy"/>
        </CloakTransitionArray>
        <CloakTransitionArray index="Ally">
            <StateArray index="None" Enter="Cloak,End"/>
            <StateArray index="Detected" Loop="Cloak"/>
            <StateArray index="Enemy" Enter="Cloak,Detect,End" Loop="Cloak,Enemy"/>
        </CloakTransitionArray>
        <CloakTransitionArray index="Detected">
            <StateArray index="None" Enter="Cloak,End"/>
            <StateArray index="Ally" Loop="Cloak"/>
            <StateArray index="Enemy" Enter="Cloak,Detect,End" Loop="Cloak,Enemy"/>
        </CloakTransitionArray>
        <CloakTransitionArray index="Enemy">
            <StateArray index="None" Enter="Cloak,Enemy,End"/>
            <StateArray index="Ally" Enter="Cloak,Detect,Start" Loop="Cloak"/>
            <StateArray index="Detected" Enter="Cloak,Detect,Start" Loop="Cloak"/>
        </CloakTransitionArray>
        <MaxSpeedForSound value="3"/>
        <RevealTint value="168,168,168"/>
        <PopulationLimitModel value="160"/>
        <CreepEngulfmentModel value="CreepEngulf"/>
        <CreepHeightClasses Name="Default" SolidHeight="0.300000" FadeHeight="1.750000"/>
        <CreepHeightClasses>
            <Name value="Medium"/>
            <StartOffset value="-0.400000"/>
            <SolidHeight value="0.100000"/>
            <FadeHeight value="1.750000"/>
        </CreepHeightClasses>
        <CreepHeightClasses Name="Small" StartOffset="-0.800000" FadeHeight="1.750000"/>
        <CreepHeightClasses Name="Smaller" StartOffset="-1.000000" FadeHeight="1.750000"/>
        <CreepHeightClasses Name="Tiny" StartOffset="-1.200000" FadeHeight="1.750000"/>
        <CreepHeightClasses>
            <Name value="Large"/>
            <StartOffset value="-1.000000"/>
            <SolidHeight value="2.000000"/>
            <FadeHeight value="2.750000"/>
        </CreepHeightClasses>
        <CreepHeightClasses>
            <Name value="Huge"/>
            <StartOffset value="-1.000000"/>
            <SolidHeight value="4.000000"/>
            <FadeHeight value="4.750000"/>
        </CreepHeightClasses>
        <CreepHeightClasses>
            <Name value="Full"/>
            <StartOffset value="-1.000000"/>
            <SolidHeight value="8.000000"/>
            <FadeHeight value="10.000000"/>
        </CreepHeightClasses>
        <CreepRates Name="Grow" Rate="0.300000"/>
        <CreepRates Name="Shrink" Rate="3.000000"/>
        <!-- Earlier in the list is lower priority.  Later in the list is higher priority. -->
        <!-- Q:  Why do the DeathCustoms feel like they are in reverse order, where higher priority
                 numbers win, rather than lower priority ones?
             A:  It is because it makes it easier for modders to add custom deaths that are higher
                 priority than the ones we have without having to copy and replace the whole list
                 with only their new entries at the bottom. -->
        <DeathCustomPriorityList value="Empty"/>
        <DeathCustomPriorityList value="Upgrade"/>
        <DeathCustomPriorityList value="UpgradeEmpty"/>
        <DeathCustomPriorityList value="UpgradedFire"/>
        <DeathCustomPriorityList value="UpgradedAcid"/>
        <DeathCustomPriorityList value="UpgradedEviscerate"/>
        <DeathCustomPriorityList value="Warpgate"/>
        <DeathCustomPriorityList value="DarkProtoss"/>
        <DeathCustomPriorityList value="Detached"/>
        <DeathCustomPriorityList value="Flying"/>
        <DeathCustomPriorityList value="Uprooted"/>
        <DeathCustomPriorityList value="Burrowed"/>
        <DeathCustomPriorityList value="AntiGravGeneric"/>
        <DeathCustomPriorityList value="AntiGravProtoss"/>
        <DeathCustomPriorityList value="AntiGravTerran"/>
        <DeathCustomPriorityList value="AntiGravZerg"/>
        <DeathCustomPriorityList value="BlackOps"/>
        <DeathCustomPriorityList value="Variation0"/>
        <DeathCustomPriorityList value="Variation1"/>
        <DeathCustomPriorityList value="Variation2"/>
        <DeathCustomPriorityList value="Variation3"/>
        <DeathCustomPriorityList value="Variation4"/>
        <DeathCustomPriorityList value="Variation5"/>
        <DeathCustomPriorityList value="Variation6"/>
        <DeathCustomPriorityList value="Variation7"/>
        <DeathCustomPriorityList value="Variation8"/>
        <DeathCustomPriorityList value="Variation9"/>
        <DeathCustomPriorityList value="Variation10"/>
        <DeathCustomPriorityList value="Variation11"/>
        <DeathCustomPriorityList value="Variation12"/>
        <DeathCustomPriorityList value="Variation13"/>
        <DeathCustomPriorityList value="Variation14"/>
        <DeathCustomPriorityList value="Variation15"/>
        <DeathCustomPriorityList value="Variation16"/>
        <DeathCustomPriorityList value="Variation17"/>
        <DeathCustomPriorityList value="Variation18"/>
        <DeathCustomPriorityList value="Variation19"/>
        <DeathCustomPriorityList value="Variation20"/>
        <DeathCustomPriorityList value="Variation21"/>
        <DeathCustomPriorityList value="Variation22"/>
        <DeathCustomPriorityList value="Variation23"/>
        <DeathCustomPriorityList value="Variation24"/>
        <DeathCustomPriorityList value="Variation25"/>
        <DeathCustomPriorityList value="Variation26"/>
        <DeathCustomPriorityList value="Variation27"/>
        <DeathCustomPriorityList value="Variation28"/>
        <DeathCustomPriorityList value="Variation29"/>
        <DeathCustomPriorityList value="Variation30"/>
        <DeathCustomPriorityList value="Variation31"/>
        <DeathCustomPriorityList value="Variation32"/>
        <DeathCustomPriorityList value="Variation33"/>
        <DeathCustomPriorityList value="Variation34"/>
        <DeathCustomPriorityList value="Variation35"/>
        <DeathCustomPriorityList value="Variation36"/>
        <DeathCustomPriorityList value="Variation37"/>
        <DeathCustomPriorityList value="Variation38"/>
        <DeathCustomPriorityList value="Variation39"/>
        <DeathCustomPriorityList value="Variation40"/>
        <DeathCustomPriorityList value="Variation41"/>
        <DeathCustomPriorityList value="Variation42"/>
        <DeathCustomPriorityList value="Variation43"/>
        <DeathCustomPriorityList value="Variation44"/>
        <DeathCustomPriorityList value="Variation45"/>
        <DeathCustomPriorityList value="Variation46"/>
        <DeathCustomPriorityList value="Variation47"/>
        <DeathCustomPriorityList value="Variation48"/>
        <DeathCustomPriorityList value="Variation49"/>
        <DeathCustomPriorityList value="Variation50"/>
        <DeathCustomPriorityList value="Variation51"/>
        <DeathCustomPriorityList value="Variation52"/>
        <DeathCustomPriorityList value="Variation53"/>
        <DeathCustomPriorityList value="Variation54"/>
        <DeathCustomPriorityList value="Variation55"/>
        <DeathCustomPriorityList value="Variation56"/>
        <DeathCustomPriorityList value="Variation57"/>
        <DeathCustomPriorityList value="Variation58"/>
        <DeathCustomPriorityList value="Variation59"/>
        <DeathCustomPriorityList value="Variation60"/>
        <DeathCustomPriorityList value="Variation61"/>
        <DeathCustomPriorityList value="Variation62"/>
        <DeathCustomPriorityList value="Variation63"/>
        <DeathCustomPriorityList value="Variation64"/>
        <DeathCustomPriorityList value="Variation65"/>
        <DeathCustomPriorityList value="Variation66"/>
        <DeathCustomPriorityList value="Variation67"/>
        <DeathCustomPriorityList value="Variation68"/>
        <DeathCustomPriorityList value="Variation69"/>
        <DeathCustomPriorityList value="Variation70"/>
        <DeathCustomPriorityList value="Variation71"/>
        <DeathCustomPriorityList value="Variation72"/>
        <DeathCustomPriorityList value="Variation73"/>
        <DeathCustomPriorityList value="Variation74"/>
        <DeathCustomPriorityList value="Variation75"/>
        <DeathCustomPriorityList value="Variation76"/>
        <DeathCustomPriorityList value="Variation77"/>
        <DeathCustomPriorityList value="Variation78"/>
        <DeathCustomPriorityList value="Variation79"/>
        <DeathCustomPriorityList value="Variation80"/>
        <DeathCustomPriorityList value="Variation81"/>
        <DeathCustomPriorityList value="Variation82"/>
        <DeathCustomPriorityList value="Variation83"/>
        <DeathCustomPriorityList value="Variation84"/>
        <DeathCustomPriorityList value="Variation85"/>
        <DeathCustomPriorityList value="Variation86"/>
        <DeathCustomPriorityList value="Variation87"/>
        <DeathCustomPriorityList value="Variation88"/>
        <DeathCustomPriorityList value="Variation89"/>
        <DeathCustomPriorityList value="Variation90"/>
        <DeathCustomPriorityList value="RagdollNoBlood"/>
        <DeathCustomPriorityList value="RagdollBlood"/>
        <DeathCustomPriorityList value="RagdollBasicNoBlood"/>
        <DeathCustomPriorityList value="RagdollGibNoBlood"/>
        <DeathCustomPriorityList value="RagdollBasicAndGibNoBlood"/>
        <DeathCustomPriorityList value="RagdollBasic"/>
        <DeathCustomPriorityList value="RagdollBasicAir"/>
        <DeathCustomPriorityList value="RagdollSparks"/>
        <DeathCustomPriorityList value="RagdollGibSparks"/>
        <DeathCustomPriorityList value="RagdollBasicAndGibSparks"/>
        <DeathCustomPriorityList value="RagdollAoE"/>
        <DeathCustomPriorityList value="RagdollOverkill"/>
        <DeathCustomPriorityList value="RagdollOverkillDPRH"/>
        <DeathCustomPriorityList value="RagdollOverkillDOI"/>
        <DeathCustomPriorityList value="RagdollOverkillGank2x1"/>
        <DeathCustomPriorityList value="RagdollBaneling"/>
        <DeathCustomPriorityList value="RagdollSiegeTank"/>
        <DeathCustomPriorityList value="RagdollUltraUnburrow"/>
        <DeathCustomPriorityList value="RagdollSpineCrawlerHurl"/>
        <DeathCustomPriorityList value="RagdollFire"/>
        <DeathCustomPriorityList value="RagdollAcid"/>
        <DeathCustomPriorityList value="RagdollNuke"/>
        <DeathCustomPriorityList value="RagdollMidair"/>
        <DeathCustomPriorityList value="RagdollUpgraded"/>
        <DeathCustomPriorityList value="RagdollUpgradedMidair"/>
        <DeathCustomPriorityList value="LowMecha"/>
        <DeathCustomPriorityList value="Low"/>
        <DeathCustomPriorityList value="Hallucination"/>
        <DeathCustomPriorityList value="Vortex"/>
        <DeathCustomPriorityList value="Polymorph"/>
        <DeathCustomPriorityList value="Shadow"/>
        <DeathCustomPriorityList value="Rescue00"/>
        <DeathCustomPriorityList value="Rescue01"/>
        <DeathCustomPriorityList value="Rescue02"/>
        <DeathCustomPriorityList value="Rescue03"/>
        <DeathCustomPriorityList value="Rich"/>
        <MinimapRenderPriorityList value="Doodad"/>
        <MinimapRenderPriorityList value="Resource"/>
        <MinimapRenderPriorityList value="ObjectGroup"/>
        <MinimapRenderPriorityList value="Normal"/>
        <MinimapRenderPriorityList value="Merc"/>
        <MinimapRenderPriorityList value="Pusher"/>
        <MinimapRenderPriorityList value="Hero"/>
        <MinimapRenderPriorityList value="Beacon"/>
        <!-- Base body squibs. -->
        <BodySquibs Name="None"/>
        <BodySquibs Name="Basic" ActorModel="UnitDeathBodySquibModelHarness" Model="BloodSquibDeathRagdoll">
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibs"/>
        </BodySquibs>
        <BodySquibs Name="BasicHeavy" ActorModel="UnitDeathBodySquibModelHarness" Model="BloodSquibDeathRagdoll">
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibsHeavy"/>
        </BodySquibs>
        <BodySquibs Name="Blood" ActorModel="UnitDeathBodySquibModelHarnessBlood" Model="BloodSquibDeathRagdoll">
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibs"/>
        </BodySquibs>
        <BodySquibs Name="BloodReduced" ActorModel="UnitDeathBodySquibModelHarnessBlood" Model="BloodSquibDeathRagdoll">
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibsReduced"/>
        </BodySquibs>
        <BodySquibs>
            <Name value="Acid"/>
            <ActorModel value="UnitDeathBodySquibModelHarnessBlood"/>
            <Model value="AcidSquibDeathRagdoll"/>
            <ActorSound value="UnitDeathBodySquibSoundHarness"/>
            <Sound value="Uni_DeathFXRagdollAcid"/>
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibs"/>
            <SoundSiteOps Ops="SOpAttachHarness"/>
            <SoundAttachQuery Methods="Center"/>
        </BodySquibs>
        <BodySquibs>
            <Name value="Fire"/>
            <ActorModel value="UnitDeathBodySquibModelHarness"/>
            <Model value="FireSquibDeathRagdoll"/>
            <ActorSound value="UnitDeathBodySquibSoundHarness"/>
            <Sound value="Uni_DeathFXRagdollFire"/>
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibs"/>
            <SoundSiteOps Ops="SOpAttachHarness"/>
            <SoundAttachQuery Methods="Center"/>
        </BodySquibs>
        <BodySquibs>
            <Name value="FireOnMetal"/>
            <ActorModel value="UnitDeathBodySquibModelHarness"/>
            <Model value="FireSquibDeathRagdoll"/>
            <ActorSound value="UnitDeathBodySquibSoundHarness"/>
            <Sound value="Uni_DeathFXRagdollFire"/>
            <RequiredSquibType value="Metal"/>
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibs"/>
            <SoundSiteOps Ops="SOpAttachHarness"/>
            <SoundAttachQuery Methods="Center"/>
        </BodySquibs>
        <BodySquibs>
            <Name value="FireHeavy"/>
            <ActorModel value="UnitDeathBodySquibModelHarness"/>
            <Model value="FireSquibDeathRagdoll"/>
            <ActorSound value="UnitDeathBodySquibSoundHarness"/>
            <Sound value="Uni_DeathFXRagdollFireLarge"/>
            <ModelSiteOps Ops="SOpAttachHarness SOpRotationRandomFull"/>
            <ModelAttachQuery Methods="AMFilterBodySquibs AMRandomUniformAll AMReductionForBodySquibsHeavy"/>
            <SoundSiteOps Ops="SOpAttachHarness"/>
            <SoundAttachQuery Methods="Center"/>
        </BodySquibs>
        <!-- Base ragdoll deaths. -->
        <DeathCustoms ActorModel="UnitDeathRagdoll" Name="RagdollNoBlood" PhysicsMatchKeysOrdered="Basic"/>
        <DeathCustoms ActorModel="UnitDeathRagdoll" Name="RagdollBlood" PhysicsMatchKeysOrdered="Basic">
            <BodySquibs Name="FireOnMetal"/>
            <BodySquibs Name="Blood" IsFallback="1"/>
        </DeathCustoms>
        <!-- Actual ragdoll deaths. -->
        <DeathCustoms Name="RagdollBasicNoBlood" PhysicsMatchKeysOrdered="Basic" InheritsFrom="RagdollNoBlood"/>
        <DeathCustoms Name="RagdollGibNoBlood" PhysicsMatchKeysOrdered="Basic" InheritsFrom="RagdollNoBlood"/>
        <DeathCustoms Name="RagdollBasic" PhysicsMatchKeysOrdered="Basic" InheritsFrom="RagdollBlood"/>
        <DeathCustoms Name="RagdollSiegeTank" PhysicsMatchKeysOrdered="SiegeTank" InheritsFrom="RagdollBlood"/>
        <DeathCustoms Name="RagdollNuke" PhysicsMatchKeysOrdered="Nuke" InheritsFrom="RagdollBlood">
            <BodySquibs Name="Basic" Model="TerranSquibDeathRagdoll"/>
        </DeathCustoms>
        <DeathCustoms Name="RagdollFire" InheritsFrom="RagdollBlood">
            <BodySquibs Name="Fire"/>
        </DeathCustoms>
        <DeathCustoms Name="RagdollBaneling" PhysicsMatchKeysOrdered="Baneling" InheritsFrom="RagdollBlood">
            <BodySquibs Name="Acid"/>
        </DeathCustoms>
        <DeathCustoms Name="RagdollAcid" InheritsFrom="RagdollBlood">
            <BodySquibs Name="Acid"/>
        </DeathCustoms>
        <DeathCustoms Name="RagdollUltraUnburrow" PhysicsMatchKeysOrdered="UltraUnburrow" InheritsFrom="RagdollBlood"/>
        <DeathCustoms>
            <AnimProps value="IGNORE"/>
            <Name value="RagdollSpineCrawlerHurl"/>
            <PhysicsMatchKeysOrdered value="SpineCrawlerHurl"/>
            <InheritsFrom value="RagdollBlood"/>
            <IsAbstract value="1"/>
            <BodySquibs Name="BloodReduced"/>
        </DeathCustoms>
        <DeathCustoms>
            <AnimProps value="Death"/>
            <Name value="RagdollOverkillDPRH"/>
            <PhysicsMatchKeysOrdered value="Basic"/>
            <InheritsFrom value="RagdollBlood"/>
        </DeathCustoms>
        <DeathCustoms>
            <AnimProps value="Death"/>
            <Name value="RagdollOverkillDOI"/>
            <PhysicsMatchKeysOrdered value="Basic"/>
            <InheritsFrom value="RagdollBlood"/>
        </DeathCustoms>
        <DeathCustoms Name="RagdollMidair" PhysicsMatchKeysOrdered="BasicAir,Basic" InheritsFrom="RagdollBlood"/>
        <DeathCustoms Name="RagdollAoE" PhysicsMatchKeysOrdered="BasicAir,Basic" InheritsFrom="RagdollBlood"/>
        <DeathCustoms Name="RagdollUpgraded" PhysicsMatchKeysOrdered="Basic" InheritsFrom="RagdollBlood"/>
        <DeathCustoms Name="RagdollUpgradedMidair" PhysicsMatchKeysOrdered="BasicAir,Basic" InheritsFrom="RagdollBlood"/>
        <ModelMaterialPriorityList value="ReplacementArthas"/>
        <ModelMaterialPriorityList value="ReplacementArthas2"/>
        <ModelMaterialPriorityList value="ReplacementArthas3"/>
        <ModelMaterialPriorityList value="ReplacementMuradin"/>
        <ModelMaterialPriorityList value="ReplacementNova"/>
        <ModelMaterialPriorityList value="ReplacementNova1"/>
        <ModelMaterialPriorityList value="ReplacementNova2"/>
        <ModelMaterialPriorityList value="UndyingDeathMaterial"/>
        <ModelMaterialPriorityList value="DashingGlaze"/>
        <ModelMaterialPriorityList value="GlazeUnstoppableHoly"/>
        <ModelMaterialPriorityList value="GlazeBlackArrowTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeNovaBaseDecoy"/>
        <ModelMaterialPriorityList value="GlazeRockTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeVinesTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeVinesTangentSpaceTo"/>
        <ModelMaterialPriorityList value="GlazeIceTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeSnowTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeSnowWorldSpace"/>
        <ModelMaterialPriorityList value="GlazeFireTangentSpace"/>
        <ModelMaterialPriorityList value="GlazeFireWorldSpace"/>
        <ModelMaterialPriorityList value="GallShroudOfCorruptionGlaze"/>
        <ModelMaterialPriorityList value="GlazeSuperShield"/>
        <ModelMaterialPriorityList value="GlazeShadow"/>
        <ModelMaterialPriorityList value="GlazeStasis"/>
        <ModelMaterialPriorityList value="GlazeVoidStasis"/>
        <ModelMaterialPriorityList value="GlazeTimeStop"/>
    </CActorGlobalConfig>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Global Loop Anims ===================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorEventMacro id="GlobalLoopMacro">
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD GLbirth GLstand GLdeath"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD"/>
    </CActorEventMacro>
    <CActorEventMacro id="GlobalLoopMacroMore">
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_A GLbirth,A GLstand,A GLdeath,A"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_B GLbirth,B GLstand,B GLdeath,B"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_C GLbirth,C GLstand,C GLdeath,C"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_D GLbirth,D GLstand,D GLdeath,D"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_E GLbirth,E GLstand,E GLdeath,E"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_F GLbirth,F GLstand,F GLdeath,F"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_G GLbirth,G GLstand,G GLdeath,G"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_H GLbirth,H GLstand,H GLdeath,H"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_I GLbirth,I GLstand,I GLdeath,I"/>
        <On Terms="ActorCreation" Send="AnimBracketStart GL_BSD_J GLbirth,J GLstand,J GLdeath,J"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_A"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_B"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_C"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_D"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_E"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_F"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_G"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_H"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_I"/>
        <On Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_J"/>
    </CActorEventMacro>
    <CActorEventMacro id="GlobalLoopMacroRemove">
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD GLbirth GLstand GLdeath"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD"/>
    </CActorEventMacro>
    <CActorEventMacro id="GlobalLoopMacroMoreRemove">
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_A GLbirth,A GLstand,A GLdeath,A"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_B GLbirth,B GLstand,B GLdeath,B"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_C GLbirth,C GLstand,C GLdeath,C"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_D GLbirth,D GLstand,D GLdeath,D"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_E GLbirth,E GLstand,E GLdeath,E"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_F GLbirth,F GLstand,F GLdeath,F"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_G GLbirth,G GLstand,G GLdeath,G"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_H GLbirth,H GLstand,H GLdeath,H"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_I GLbirth,I GLstand,I GLdeath,I"/>
        <Remove Terms="ActorCreation" Send="AnimBracketStart GL_BSD_J GLbirth,J GLstand,J GLdeath,J"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_A"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_B"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_C"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_D"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_E"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_F"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_G"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_H"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_I"/>
        <Remove Terms="ActorOrphan" Send="AnimBracketStop GL_BSD_J"/>
    </CActorEventMacro>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Scene ================================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorScene id="SYSTEM_Scene"/>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Debugging ============================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorModel id="Axis"/>
    <CActorModel id="IndicatorBase">
        <Model value="Axis"/>
        <!--HostSiteOps Ops="SOpBasicCreatorStationary"/-->
    </CActorModel>
    <CActorModel id="Indicator" parent="IndicatorBase">
        <On Terms="ActorCreation" Send="TimerSet 2.000000 DelayDestroy"/>
        <On Terms="TimerExpired; TimerName DelayDestroy" Send="Destroy"/>
        <Host Subject="::Creator"/>
    </CActorModel>
    <CActorModel id="IndicatorSticky" parent="IndicatorBase">
        <Host Subject="::Creator"/>
        <Supporter Subject="::Creator"/>
        <On Terms="SupporterDestruction" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="IndicatorBlack" parent="Indicator">
        <On Terms="ActorCreation" Send="SetTintColor 0,0,0"/>
    </CActorModel>
    <CActorModel id="IndicatorBlue" parent="Indicator">
        <Scale value="0.750000"/>
        <On Terms="ActorCreation" Send="SetTintColor 47,47,255"/>
    </CActorModel>
    <CActorModel id="IndicatorGreen" parent="Indicator">
        <Scale value="1.250000"/>
        <On Terms="ActorCreation" Send="SetTintColor 47,255,47"/>
    </CActorModel>
    <!-- "Big Red" -->
    <CActorModel id="IndicatorRed" parent="Indicator">
        <Scale value="2.500000"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,47,47"/>
    </CActorModel>
    <!-- Tinter -->
    <CActorList id="ListTinter">
        <On Terms="Signal.*.Red" Target="::Contents" Send="SetTintColor 255,0,0"/>
        <On Terms="Signal.*.Green" Target="::Contents" Send="SetTintColor 0,255,0"/>
        <On Terms="Signal.*.Blue" Target="::Contents" Send="SetTintColor 0,0,255"/>
    </CActorList>
    <!-- Watching Phase Changes in Missiles                                                      -->
    <!-- Use by putting following line in relevant CActorMissile:                                -->
    <!--     <On Terms="MotionPhaseStart" Send="Create IndicatorMissilePhaseChange"/>            -->
    <!--                                                                                         -->
    <CActorModel id="IndicatorMissilePhaseChange">
        <On Terms="UnitDeath" Send="TimerSet 3.000000 DelayDestroy"/>
        <On Terms="TimerExpired; TimerName DelayDestroy" Send="Destroy"/>
    </CActorModel>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Site Ops ============================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSiteOp2DRotation id="SOp2DRotation"/>
    <CActorSiteOpAction id="SOpActionCenter"/>
    <CActorSiteOpAction id="SOpActionLaunch">
        <Location value="Launch"/>
    </CActorSiteOpAction>
    <CActorSiteOpAction id="SOpActionImpact">
        <Location value="Impact"/>
    </CActorSiteOpAction>
    <CActorSiteOpAttach id="SOpAttachHarness"/>
    <CActorSiteOpAttach id="SOpAttachHarnessSoft">
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHarnessStationary">
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachCenter">
        <AttachQuery Methods="Center"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachCenterSoft">
        <AttachQuery Methods="Center"/>
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachCenterStationary">
        <AttachQuery Methods="Center"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachCustomA">
        <AttachQuery Methods="CustomA"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachDamage">
        <AttachQuery Methods="Damage"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachDamage01">
        <AttachQuery Methods="Damage 1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachDamage02">
        <AttachQuery Methods="Damage 2"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachDamage03">
        <AttachQuery Methods="Damage 3"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachDamage04">
        <AttachQuery Methods="Damage 4"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachInternalDetonation">
        <AttachQuery Methods="AMFilterDamage AMIncoming AMRandomUniformAll"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint">
        <AttachQuery Methods="Hardpoint"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint01">
        <AttachQuery Methods="Hardpoint 1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint02">
        <AttachQuery Methods="Hardpoint 2"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint03">
        <AttachQuery Methods="Hardpoint 3"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint04">
        <AttachQuery Methods="Hardpoint 4"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint05">
        <AttachQuery Methods="Hardpoint 5"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint06">
        <AttachQuery Methods="Hardpoint 6"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint07">
        <AttachQuery Methods="Hardpoint 7"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint08">
        <AttachQuery Methods="Hardpoint 8"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint09">
        <AttachQuery Methods="Hardpoint 9"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHardPoint10">
        <AttachQuery Methods="Hardpoint 10"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachOrigin">
        <AttachQuery Methods="Origin"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachOriginStationary">
        <AttachQuery Methods="Origin"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachOriginHoldPosition">
        <AttachQuery Methods="Origin"/>
        <HoldPosition value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachOriginSoft">
        <AttachQuery Methods="Origin"/>
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachOverhead">
        <AttachQuery Methods="Overhead"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHead">
        <AttachQuery Methods="Head" Fallback="Target"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachHeadSound">
        <AttachQuery Methods="Head" Fallback="StatusBar"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachRandomDamage">
        <AttachQuery Methods="AMFilterTargetOrDamage AMNodeOccupancyNoSpam AMRandom" Fallback="Center"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachShield">
        <AttachQuery Methods="Shield"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget">
        <AttachQuery Methods="Target"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTargetSoft">
        <AttachQuery Methods="Target"/>
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget1">
        <AttachQuery Methods="Target 1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget2">
        <AttachQuery Methods="Target 2"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget3">
        <AttachQuery Methods="Target 3"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget4">
        <AttachQuery Methods="Target 4"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget5">
        <AttachQuery Methods="Target 5"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTarget6">
        <AttachQuery Methods="Target 6"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTurret">
        <AttachQuery Methods="TurretZ"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachTurretSecondary">
        <AttachQuery Methods="Turret"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachRandomWeapon">
        <AttachQuery Methods="AMFilterWeapon AMNodeOccupancyNoSpam AMRandom" Fallback="Weapon"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachRollingWeaponStripe">
        <AttachQuery Methods="AMPatternRollingStripe" Fallback="Weapon"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon">
        <AttachQuery Methods="Weapon"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeaponSoft">
        <AttachQuery Methods="Weapon"/>
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeaponLeft">
        <AttachQuery Methods="AMFilterWeaponLeft"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeaponRight">
        <AttachQuery Methods="AMFilterWeaponRight"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon00">
        <AttachQuery Methods="Weapon 0"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon01">
        <AttachQuery Methods="Weapon 1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon01Soft">
        <AttachQuery Methods="Weapon 1"/>
        <ForceSoftAttach value="1"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon02">
        <AttachQuery Methods="Weapon 2"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon03">
        <AttachQuery Methods="Weapon 3"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon04">
        <AttachQuery Methods="Weapon 4"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon05">
        <AttachQuery Methods="Weapon 5"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon06">
        <AttachQuery Methods="Weapon 6"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon07">
        <AttachQuery Methods="Weapon 7"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon08">
        <AttachQuery Methods="Weapon 8"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon09">
        <AttachQuery Methods="Weapon 9"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon10">
        <AttachQuery Methods="Weapon 10"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon11">
        <AttachQuery Methods="Weapon 11"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon12">
        <AttachQuery Methods="Weapon 12"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon13">
        <AttachQuery Methods="Weapon 13"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon14">
        <AttachQuery Methods="Weapon 14"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon15">
        <AttachQuery Methods="Weapon 15"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon16">
        <AttachQuery Methods="Weapon 16"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon21">
        <AttachQuery Methods="Weapon 21"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttach id="SOpAttachWeapon24">
        <AttachQuery Methods="Weapon 24"/>
    </CActorSiteOpAttach>
    <CActorSiteOpAttachVolume id="SOpAttachVolumeStandard">
        <HostIncoming Subject="_LaunchGuide" Actor="Find"/>
        <UpwardVisibilityEnhancement value="1"/>
        <UpwardVisibilityEnhancementVarianceUp value="15.000000"/>
        <UpwardVisibilityEnhancementVarianceDown value="5.000000"/>
    </CActorSiteOpAttachVolume>
    <CActorSiteOpAttachVolume id="SOpAttachVolumeNoVizEnhance">
        <HostIncoming Subject="_LaunchGuide" Actor="Find"/>
    </CActorSiteOpAttachVolume>
    <CActorSiteOpBanker id="SOpBanker">
        <RollAngleMax value="60.000000"/>
        <RollInRate value="30.000000"/>
        <RollOutRate value="55.000000"/>
        <RollOutRemainderFractionForLevelOff value="0.300000"/>
    </CActorSiteOpBanker>
    <CActorSiteOpBanker id="SOpBankerBuilding">
        <RollAngleMax value="45.000000"/>
        <RollInRate value="12.500000"/>
        <RollOutRate value="10.000000"/>
        <RollOutRemainderFractionForLevelOff value="0.300000"/>
    </CActorSiteOpBanker>
    <CActorSiteOpBankerUnit id="SOpBankerUnit">
        <RollMax value="40.000000"/>
        <RollInActivationAngle value="15.000000"/>
        <RollInArc value="120.000000"/>
        <RollOutDuration value="1.500000"/>
    </CActorSiteOpBankerUnit>
    <CActorSiteOpBankerUnit id="SOpBankerUnitBuilding">
        <RollMax value="15.000000"/>
        <RollInActivationAngle value="90.000000"/>
        <RollInArc value="20.000000"/>
        <RollOutDuration value="0.700000"/>
    </CActorSiteOpBankerUnit>
    <CActorSiteOpBasic id="SOpBasicScopeFollow">
        <BasicType value="ScopeBearings"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicScopePositionFollowHoldRotation">
        <BasicType value="ScopePosition"/>
        <HoldRotation value="1"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicInitialBearings">
        <BasicType value="InitialBearings"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicScopeStationary">
        <BasicType value="ScopeBearings"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpBasic>
    <!-- Do not remove this SiteOp, it is used by the code. -->
    <CActorSiteOpBasic id="SOpBasicActorPositionFollow">
        <BasicType value="ActorPosition"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicCreatorPositionFollow">
        <BasicType value="CreatorPosition"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicCreatorFollow">
        <BasicType value="CreatorBearings"/>
    </CActorSiteOpBasic>
    <CActorSiteOpBasic id="SOpBasicCreatorStationary">
        <BasicType value="CreatorBearings"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpBasic>
    <CActorSiteOpEffect id="SOpCasterPoint">
        <Location value="CasterPoint"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpOriginPoint">
        <Location value="OriginPoint"/>
    </CActorSiteOpEffect>
    <CActorSiteOpForward id="SOpForwardOriginPoint">
        <HostForwardSiteOps Ops="SOpOriginPoint"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardOriginPointInverted">
        <HostForwardSiteOps Ops="SOpOriginPoint"/>
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpEffect id="SOpMissile">
        <Location value="MissileUnitOrPoint"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpSourcePoint">
        <Location value="SourcePoint"/>
    </CActorSiteOpEffect>
    <!-- Misspelled, left for compatibility. -->
    <CActorSiteOpEffect id="SOpSourcePointSationary">
        <Location value="SourcePoint"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpSourcePointStationary">
        <Location value="SourcePoint"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpSourceUnitStationary">
        <Location value="SourceUnit"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpCasterUnit">
        <Location value="CasterUnit"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpSourceUnit">
        <Location value="SourceUnit"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpTargetPoint">
        <Location value="TargetPoint"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpTargetUnit">
        <Location value="TargetUnit"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpTargetUnitZ">
        <Location value="TargetUnit"/>
        <ZOnly value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpCasterUnitZ">
        <Location value="CasterUnit"/>
        <ZOnly value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpTargetPointStationary">
        <Location value="TargetPoint"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpEffect>
    <CActorSiteOpForward id="SOpForwardCasterCenter">
        <HostForward Subject="_Unit" Scope="Caster"/>
        <HostForwardSiteOps Ops="SOpAttachCenter"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardCasterCenterInverted">
        <HostForward Subject="_Unit" Scope="Caster"/>
        <HostForwardSiteOps Ops="SOpAttachCenter"/>
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardCasterPoint">
        <HostForwardSiteOps Ops="SOpCasterPoint"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardCasterPointInverted">
        <HostForwardSiteOps Ops="SOpCasterPoint"/>
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardSourcePoint">
        <HostForwardSiteOps Ops="SOpSourcePoint"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardTargetPoint">
        <HostForwardSiteOps Ops="SOpTargetPoint"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardTargetPointInverted">
        <HostForwardSiteOps Ops="SOpTargetPoint"/>
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardTargetUnit">
        <HostForwardSiteOps Ops="SOpTargetUnit"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardDefault">
        <Forward value="0.000000,-1.000000,0.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardNorth">
        <Forward value="0.000000,1.000000,0.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardSouth">
        <Forward value="0.000000,-1.000000,0.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardEast">
        <Forward value="1.000000,0.000000,0.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardWest">
        <Forward value="-1.000000,0.000000,0.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardPointsUp">
        <Forward value="0.000000,0.000000,1.000000"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardLaunchGuide">
        <HostForward Subject="_LaunchGuide" Scope="Outer" Actor="Find"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardLaunchGuideInverted" parent="SOpForwardLaunchGuide">
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardLaunchGuideStationary">
        <HostForward Subject="_LaunchGuide" Scope="Outer" Actor="Find"/>
        <HoldPosition value="1"/>
        <HoldRotation value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardLaunchGuideDamage">
        <HostForward Subject="_LaunchGuide" Actor="Find"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardImpactGuide">
        <HostForward Subject="_ImpactGuide" Actor="Find"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardQueryCaster">
        <HostForward Subject="::QueryCaster" Actor="Find"/>
        <Invert value="1"/>
    </CActorSiteOpForward>
    <CActorSiteOpForward id="SOpForwardWeapon">
        <HostForward Subject="_Unit" Scope="Outer" Actor="Find"/>
        <HostForwardSiteOps Ops="SOpAttachWeapon"/>
    </CActorSiteOpForward>
    <CActorSiteOpGameCameraFollow id="SOpGameCameraFollow"/>
    <CActorSiteOpHeight id="SOpHeightLaunch">
        <HostHeight Subject="_LaunchGuide" Scope="Outer" Actor="Find"/>
    </CActorSiteOpHeight>
    <CActorSiteOpHigherOfTerrainAndWater id="SOpHigherOfTerrainAndWater">
        <HeightSourceType value="AsyncPrecise"/>
    </CActorSiteOpHigherOfTerrainAndWater>
    <CActorSiteOpHigherOfTerrainAndWater id="SOpWaterPlane">
        <TerrainAndWaterFlags index="PassThroughIfNoWater" value="1"/>
    </CActorSiteOpHigherOfTerrainAndWater>
    <CActorSiteOpHigherOfTerrainAndWater id="SOpWaterWaves">
        <TerrainAndWaterFlags index="FollowWaves" value="1"/>
        <TerrainAndWaterFlags index="PassThroughIfNoWater" value="1"/>
    </CActorSiteOpHigherOfTerrainAndWater>
    <CActorSiteOpHigherOfTerrainAndWater id="SOpWading">
        <ForcedWadingMaxDepth value="0.330000"/>
        <HeightSourceType value="AsyncPrecise"/>
        <TerrainAndWaterFlags index="PassThroughIfNoWater" value="1"/>
    </CActorSiteOpHigherOfTerrainAndWater>
    <CActorSiteOpHostBearings id="SOpHostCasterOverhead">
        <HostBearings Subject="_Selectable" Scope="Caster" Actor="Find"/>
        <HostBearingsSiteOps Ops="SOpAttachOverhead"/>
    </CActorSiteOpHostBearings>
    <CActorSiteOpHostBearings id="SOpHostMissile">
        <HostBearings Subject="::Main" Scope="Missile" Actor="Find"/>
    </CActorSiteOpHostBearings>
    <CActorSiteOpIncoming id="SOpIncomingDirect">
        <HostImpact Subject="_ImpactGuide"/>
        <HostIncoming Subject="_LaunchGuide" Scope="Outer" Actor="Find"/>
        <FreezePositionAtImpact value="1"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingDirectDot15" parent="SOpIncomingDirect">
        <PullBack value="0.150000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingDirectDot25" parent="SOpIncomingDirect">
        <PullBack value="0.250000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingDirect1" parent="SOpIncomingDirect">
        <PullBack value="1.000000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingDirect1Dot5" parent="SOpIncomingDirect">
        <PullBack value="1.500000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingMissile">
        <HostImpact Subject="_ImpactGuide"/>
        <HostIncoming Subject="::Main" Scope="Missile" Actor="Find"/>
        <Type value="Missile"/>
        <FreezePositionAtImpact value="1"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingMissileDot1" parent="SOpIncomingMissile">
        <PullBack value="0.100000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingMissileDot25" parent="SOpIncomingMissile">
        <PullBack value="0.250000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingMissileDot5" parent="SOpIncomingMissile">
        <PullBack value="0.500000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpIncoming id="SOpIncomingMissileDot75" parent="SOpIncomingMissile">
        <PullBack value="0.750000"/>
    </CActorSiteOpIncoming>
    <CActorSiteOpLocalOffset id="SOpLocalOffsetHarness"/>
    <CActorSiteOpLocalOffset id="SOpHigherBy3">
        <LocalOffset value="0.000000,0.000000,3.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpHigherBy5">
        <LocalOffset value="0.000000,0.000000,5.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot05">
        <LocalOffset value="0.000000,-0.050000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot1">
        <LocalOffset value="0.000000,-0.100000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot15">
        <LocalOffset value="0.000000,-0.150000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot25">
        <LocalOffset value="0.000000,-0.250000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot3">
        <LocalOffset value="0.000000,-0.300000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot5">
        <LocalOffset value="0.000000,-0.500000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot75">
        <LocalOffset value="0.000000,-0.750000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy1">
        <LocalOffset value="0.000000,-1.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy1Dot5">
        <LocalOffset value="0.000000,-1.500000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy2">
        <LocalOffset value="0.000000,-2.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy3">
        <LocalOffset value="0.000000,-3.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy3Dot5">
        <LocalOffset value="0.000000,-3.500000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy4">
        <LocalOffset value="0.000000,-4.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy5Dot5">
        <LocalOffset value="0.000000,-5.500000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBy7">
        <LocalOffset value="0.000000,-7.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBackByDot25">
        <LocalOffset value="0.000000,0.250000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBackByDot5">
        <LocalOffset value="0.000000,0.500000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBackByDot75">
        <LocalOffset value="0.000000,0.750000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBackBy1">
        <LocalOffset value="0.000000,1.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveBackBy2">
        <LocalOffset value="0.000000,2.000000,0.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot1">
        <LocalOffset value="0.000000,0.000000,-0.100000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot15">
        <LocalOffset value="0.000000,0.000000,-0.150000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot25">
        <LocalOffset value="0.000000,0.000000,-0.250000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot35">
        <LocalOffset value="0.000000,0.000000,-0.350000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot5">
        <LocalOffset value="0.000000,0.000000,-0.500000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownBy1">
        <LocalOffset value="0.000000,0.000000,-1.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownBy2">
        <LocalOffset value="0.000000,0.000000,-2.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot75">
        <LocalOffset value="0.000000,0.000000,-0.755000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpByDot1">
        <LocalOffset value="0.000000,0.000000,0.100000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpByDot15">
        <LocalOffset value="0.000000,0.000000,0.150000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpByDot25">
        <LocalOffset value="0.000000,0.000000,0.250000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpByDot5">
        <LocalOffset value="0.000000,0.000000,0.500000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy1">
        <LocalOffset value="0.000000,0.000000,1.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy2">
        <LocalOffset value="0.000000,0.000000,2.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy3">
        <LocalOffset value="0.000000,0.000000,3.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy4">
        <LocalOffset value="0.000000,0.000000,4.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy5">
        <LocalOffset value="0.000000,0.000000,4.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy6">
        <LocalOffset value="0.000000,0.000000,6.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy7">
        <LocalOffset value="0.000000,0.000000,7.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy8">
        <LocalOffset value="0.000000,0.000000,7.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveUpBy9">
        <LocalOffset value="0.000000,0.000000,9.000000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot15ToDot5">
        <LocalOffset value="0.000000,-1.000000,0.000000"/>
        <OverridingLength value="0.150000,0.350000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveByDot5To1">
        <LocalOffset value="0.000000,-1.000000,0.000000"/>
        <OverridingLength value="0.500000,0.500000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot15ToDot25">
        <LocalOffset value="0.000000,0.000000,-1.000000"/>
        <OverridingLength value="0.150000,0.100000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpLocalOffset id="SOpMoveDownByDot25ToDot75">
        <LocalOffset value="0.000000,0.000000,-1.000000"/>
        <OverridingLength value="0.250000,0.500000"/>
    </CActorSiteOpLocalOffset>
    <CActorSiteOpPatch id="SOpPatch5">
        <PatchAngle value="5.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPatch id="SOpPatch10">
        <PatchAngle value="10.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPatch id="SOpPatch15">
        <PatchAngle value="15.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPatch id="SOpPatch35">
        <PatchAngle value="35.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPatch id="SOpPatch45">
        <PatchAngle value="45.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPatch id="SOpPatch360">
        <PatchAngle value="360.000000"/>
    </CActorSiteOpPatch>
    <CActorSiteOpPhysicsImpact id="SOpPhysicsImpactDeflection"/>
    <CActorSiteOpPhysicsImpact id="SOpPhysicsImpactNormal"/>
    <CActorSiteOpRotationExplicit id="SOpRotationExplicitHarness">
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOp90">
        <Forward value="1.000000,0.000000,0.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOp180">
        <Forward value="0.000000,1.000000,0.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOp270">
        <Forward value="-1.000000,0.000000,0.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpUpsideDown">
        <Forward value="0.000000,-1.000000,0.000000"/>
        <Up value="0.000000,0.000000,-1.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <!-- North East Up -->
    <CActorSiteOpRotationExplicit id="SOpNEU">
        <Forward value="1.000000,1.000000,1.000000"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointSouthWorld">
        <Forward value="0.000000,-1.000000,0.000000"/>
        <Up value="0.000000,0.000000,1.000000"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointUp">
        <Forward value="0.000000,0.000000,1.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointDown">
        <Forward value="0.000000,0.000000,-1.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointUpWorld">
        <Forward value="0.000000,0.000000,1.000000"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointUp1ByDot25">
        <Forward value="0.000000,-1.000000,0.250000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointUp1ByDot5">
        <Forward value="0.000000,-1.000000,0.500000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointUp1By1">
        <Forward value="0.000000,-1.000000,1.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointDown1ByDot25">
        <Forward value="0.000000,-1.000000,-0.250000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRotationExplicit id="SOpPointDown1ByDot5">
        <Forward value="0.000000,-1.000000,-0.500000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSiteOpRandomPointInCircle id="SOpRandomPointInCircleDot2">
        <Radius value="0.200000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpRandomPointInCircleDot25">
        <Radius value="0.250000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpRandomPointInCircleDot35">
        <Radius value="0.350000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpRandomPointInCircle1Dot5">
        <Radius value="1.500000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpSplashDamagePositionVariance">
        <Radius value="0.200000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpTerrainSquibPositionVariance">
        <Radius value="0.200000"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCircle id="SOpRandomPointOnCircleDot25">
        <Radius value="0.250000"/>
        <RestrictToCircumference value="1"/>
    </CActorSiteOpRandomPointInCircle>
    <CActorSiteOpRandomPointInCrossbar id="SOpRandomPointInCrossbarDot15GaussInv">
        <HalfWidth value="0.150000"/>
        <Distribution value="GaussianInverse"/>
        <Variance value="0.030000"/>
    </CActorSiteOpRandomPointInCrossbar>
    <CActorSiteOpRandomPointInCrossbar id="SOpRandomPointInCrossbarDot25GaussInv">
        <HalfWidth value="0.250000"/>
        <Distribution value="GaussianInverse"/>
        <Variance value="0.050000"/>
    </CActorSiteOpRandomPointInCrossbar>
    <CActorSiteOpRandomPointInCrossbar id="SOpRandomPointInCrossbarDot4GaussInv">
        <HalfWidth value="0.400000"/>
        <Distribution value="GaussianInverse"/>
        <Variance value="0.080000"/>
    </CActorSiteOpRandomPointInCrossbar>
    <CActorSiteOpRandomPointInSphere id="SOpRandomPointInSphereDot15">
        <Radius value="0.150000"/>
    </CActorSiteOpRandomPointInSphere>
    <CActorSiteOpRandomPointInSphere id="SOpRandomPointInSphereDot25">
        <Radius value="0.250000"/>
    </CActorSiteOpRandomPointInSphere>
    <CActorSiteOpRandomPointInSphere id="SOpRandomPointInSphereDot5">
        <Radius value="0.500000"/>
    </CActorSiteOpRandomPointInSphere>
    <CActorSiteOpRotationRandom id="SOpRotationRandomDisc">
        <YawHalfAngle value="180.000000"/>
    </CActorSiteOpRotationRandom>
    <CActorSiteOpRotationRandom id="SOpRotationRandomFull">
        <YawHalfAngle value="180.000000"/>
        <PitchHalfAngle value="90.000000"/>
    </CActorSiteOpRotationRandom>
    <CActorSiteOpRotationRandom id="SOpRotationRandomPitch30">
        <PitchHalfAngle value="15.000000"/>
    </CActorSiteOpRotationRandom>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerForward15">
        <ForwardAngle value="15.000000"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerForward30">
        <ForwardAngle value="30.000000"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerForward45">
        <ForwardAngle value="45.000000"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerForward60">
        <ForwardAngle value="60.000000"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerForward90">
        <ForwardAngle value="90.000000"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerUp15">
        <UpAngle value="15.000000"/>
        <IsUpDominantWhenOrthogonalized value="1"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerUp25">
        <UpAngle value="25.000000"/>
        <IsUpDominantWhenOrthogonalized value="1"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerUp35">
        <UpAngle value="35.000000"/>
        <IsUpDominantWhenOrthogonalized value="1"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationVariancer id="SOpRotVariancerUp60">
        <UpAngle value="60.000000"/>
        <IsUpDominantWhenOrthogonalized value="1"/>
    </CActorSiteOpRotationVariancer>
    <CActorSiteOpRotationSmooth id="SOpRotationSmooth">
        <Acceleration value="900"/>
        <Deceleration value="900"/>
        <MaxSpeed value="225"/>
    </CActorSiteOpRotationSmooth>
    <CActorSiteOpSelectionOffset id="SOpSelectionOffset"/>
    <CActorSiteOpShadow id="SOpShadow"/>
    <CActorSiteOpShadow id="SOpShadowRespectsBaseHeight">
        <HeightSourceType value="AsyncPrecise"/>
        <ShadowFlags index="NoLowerThanBaseHeight" value="1"/>
    </CActorSiteOpShadow>
    <CActorSiteOpShadow id="SOpShadowAsyncPrecise">
        <HeightSourceType value="AsyncPrecise"/>
    </CActorSiteOpShadow>
    <CActorSiteOpShadow id="SOpShadowSyncAir">
        <HeightSourceType value="SyncAir"/>
    </CActorSiteOpShadow>
    <CActorSiteOpShadow id="SOpShadowSyncGround">
        <HeightSourceType value="SyncGround"/>
    </CActorSiteOpShadow>
    <CActorSiteOpTipability id="SOpTipability"/>
    <CActorSiteOpTipability id="SOpTipabilityFloorScope">
        <TipabilityFlags index="NoLowerThanScope" value="1"/>
    </CActorSiteOpTipability>
    <CActorSiteOpUp id="SOpUpDefault">
        <Up value="0.000000,0.000000,1.000000"/>
    </CActorSiteOpUp>
    <CActorSiteOpUp id="SOpUpDefaultHoldRotation">
        <Up value="0.000000,0.000000,1.000000"/>
        <HoldRotation value="1"/>
    </CActorSiteOpUp>
    <CActorSiteOpUp id="SOpRollClockwise90">
        <Up value="-1.000000,0.000000,0.000000"/>
    </CActorSiteOpUp>
    <CActorSiteOpUp id="SOpRollCounterClockwise90">
        <Up value="1.000000,0.000000,0.000000"/>
    </CActorSiteOpUp>
    <CActorSiteOpCursor id="SOpCursor"/>
    <CActorSiteOpForward id="SOpLookAtCursor">
        <HostForwardSiteOps Ops="SOpCursor"/>
    </CActorSiteOpForward>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Sites ================================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSite id="SiteScopeStationary">
        <HostSiteOps Ops="SOpBasicScopeStationary"/>
    </CActorSite>
    <!--                                                                                         -->
    <!-- Still needed in some places, but hopefully not for long. -->
    <CActorSite id="SiteEffectTargetStationary">
        <HostSiteOps Ops="SOpTargetPointStationary"/>
    </CActorSite>
    <CActorSite id="SiteOverhead" parent="SiteUNIT"/>
    <CActorSite id="SiteOriginShadow" parent="SiteUNIT">
        <Sharing value="Always"/>
        <HostSiteOps Ops="SOpAttachOrigin SOpShadow"/>
    </CActorSite>
    <CActorSite id="SiteOriginShadowAccurate" parent="SiteUNIT">
        <Sharing value="Always"/>
        <HostSiteOps Ops="SOpAttachOrigin SOpShadowAsyncPrecise"/>
    </CActorSite>
    <!-- Several sites below are marked to always be shared.  This is b/c they only ever map to a
         single point in space, so there is no point in having more than one. -->
    <CActorSite id="SiteCenterFollow" parent="SiteCenter">
        <Sharing value="Always"/>
    </CActorSite>
    <CActorSite id="SiteCenterStationary" parent="SiteCenter">
        <HostSiteOps HoldPosition="1" HoldRotation="1"/>
    </CActorSite>
    <CActorSite id="SiteOriginFollow" parent="SiteOrigin">
        <Sharing value="Always"/>
    </CActorSite>
    <CActorSite id="SiteOriginStationary" parent="SiteOrigin">
        <HostSiteOps HoldPosition="1" HoldRotation="1"/>
    </CActorSite>
    <CActorSite id="SiteOverheadFollow" parent="SiteOverhead">
        <Sharing value="Always"/>
    </CActorSite>
    <CActorSound id="PlacementSound" parent="SoundOneShot">
        <FogVisibility value="Visible"/>
    </CActorSound>
    <CActorSound id="UISoundTemplate" parent="SoundOneShot">
        <FogVisibility value="Visible"/>
    </CActorSound>
    <CActorSound id="SoundEmitter" parent="SoundContinuous">
        <Terms value="!HasScopeFlag DisableSoundEmitters"/>
        <Flags index="SuppressCreationErrors" value="1"/>
        <Host Subject="::Creator"/>
    </CActorSound>
    <CActorModel id="TerrainSquibHarnessOneShot" parent="ModelAnimationStyleOneShot">
        <Host Subject="::Creator"/>
        <HostSiteOps Ops="SOpHigherOfTerrainAndWater SOpTerrainSquibPositionVariance SOpRotationRandomDisc" HoldPosition="1" HoldRotation="1"/>
        <Inherits index="Visibility" value="1"/>
    </CActorModel>
    <!-- Much easier on performance the OneShot version! -->
    <CActorModel id="TerrainSquibHarnessContinuous" parent="ModelAnimationStyleContinuous">
        <Host Subject="::Creator"/>
        <HostSiteOps Ops="SOpAttachHarness SOpHigherOfTerrainAndWater SOp2DRotation"/>
        <On Terms="ActorCreation; UnitWalking" Send="AnimPlay Walk Walk PlayForever"/>
        <On Terms="ActorCreation" Send="StatusSet LoopingSound 0"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleSmallWalk" Send="Create WaterWalkSmall"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleMediumWalk" Send="Create WaterWalkMedium"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleLargeWalk" Send="Create WaterWalkLarge"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleVehicleWalk; IsStatus LoopingSound 0" Send="Create WaterWalkVehicle"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleVehicleWalk; IsStatus LoopingSound 0" Send="StatusSet LoopingSound 1"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleVehicleStand; IsStatus LoopingSound 1" Target="WaterWalkVehicle" Send="Destroy"/>
        <On Terms="ModelEvent; ModelEventName WaterRippleVehicleStand; IsStatus LoopingSound 1" Send="StatusSet LoopingSound 0"/>
        <Inherits index="Visibility" value="1"/>
    </CActorModel>
    <!--                                                                                         -->
    <CActorModel id="CommandUIHarness">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessMoveZerg">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Move; ValidatePlayer PlayerIsZerg" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print MoveZerg"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessMoveTerran">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Move; ValidatePlayer PlayerIsTerran" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print MoveTerran"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessMoveProtoss">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Move; ValidatePlayer PlayerIsProtoss" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print MoveProtoss"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessConfirmZerg">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Confirm; ValidatePlayer PlayerIsZerg" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print ConfirmZerg"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessConfirmTerran">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Confirm; ValidatePlayer PlayerIsTerran" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print ConfirmTerran"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessConfirmProtoss">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Confirm; ValidatePlayer PlayerIsProtoss" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print ConfirmProtoss"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessAttackZerg">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Attack; ValidatePlayer PlayerIsZerg" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print AttackZerg"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessAttackTerran">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Attack; ValidatePlayer PlayerIsTerran" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print AttackTerran"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessAttackProtoss">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Attack; ValidatePlayer PlayerIsProtoss" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print AttackProtoss"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessRallyZerg">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Rally; ValidatePlayer PlayerIsZerg" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print RallyZerg"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessRallyTerran">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Rally; ValidatePlayer PlayerIsTerran" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print RallyTerran"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="CommandUIHarnessRallyProtoss">
        <Flags index="SuppressSaveLoad" value="1"/>
        <FogVisibility value="Visible"/>
        <On Terms="CommandUI.*.Birth; OrderDisplayType Rally; ValidatePlayer PlayerIsProtoss" Send="Create"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <!--On Terms="ActorCreation; ValidatePlayer HaveCursorDebug" Send="Print RallyProtoss"/-->
        <On Terms="CommandUI.*.Death" Send="Destroy"/>
    </CActorModel>
    <CActorDoodadPreserver id="PreservedDoodad">
        <AcceptedTransfers index="Animator" value="1"/>
        <AcceptedTransfers index="AnimProps" value="1"/>
        <AcceptedTransfers index="FOWColor" value="1"/>
        <AcceptedTransfers index="FOWShader" value="1"/>
        <AcceptedTransfers index="Model" value="1"/>
        <AcceptedTransfers index="Textures" value="1"/>
        <AcceptedHostedPropTransfers index="WarpGroup" value="0"/>
        <FogVisibility value="Visible"/>
    </CActorDoodadPreserver>
    <CActorModel id="PlacementModel">
        <HostSiteOps Ops="SOpTipabilityFloorScope"/>
        <FogVisibility value="Visible"/>
        <Filter index="Neutral" value="1"/>
        <Filter index="Enemy" value="1"/>
        <Aliases value="_Main"/>
        <Aliases value="_Unit"/>
        <Aliases value="_Selectable"/>
        <On Terms="ActorCreation; ModelIsLowQuality" Send="SetOpacity 0.300000"/>
        <On Terms="ActorCreation" Send="AnimGroupApply Placement"/>
        <On Terms="ActorCreation" Send="$Stand PlayForever"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <On Terms="Signal.*.HidePlacement" Send="SetVisibility"/>
        <On Terms="Signal.*.ShowPlacement" Send="SetVisibility 1"/>
    </CActorModel>
    <CActorModel id="PlaceholderModel" parent="PlacementModel">
        <HostSiteOps Ops="SOpShadowAsyncPrecise"/>
    </CActorModel>
    <CActorModel id="ZergPlacementModel" parent="PlacementModel">
        <On Terms="ActorCreation" Send="SetOpacity 0.450000"/>
        <On Terms="ActorCreation" Send="SetCastShadows"/>
    </CActorModel>
    <CActorModel id="ModelPlaceholder">
        <Model value="Sphere"/>
    </CActorModel>
    <CActorBeamSimple id="FlyerHelperBeam" parent="BeamSimpleAnimationStyleContinuous">
        <Supporter Subject="_Unit" Actor="Find"/>
        <Model value="AOEPreTargetAirUnitProtoss"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Host Subject="::Creator"/>
        <HostLaunch Subject="_Unit" Actor="Find"/>
        <HostLaunchSiteOps Ops="SOpAttachOrigin"/>
        <HostImpact Subject="::Creator" Actor="Find"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <!-- Message rerouted from StatusX messages like this to preserve backwards compatability
             with modder data.  Pretargeting is now done differently, but will still need to
             support data that uses the PreTargetingUpdate message. -->
        <On Terms="PreTargetingUpdate.*.Start" Send="SetTintColorBlendPair 255,64,0 255,0,0 0.150000 Bounce Pretarget 175.000000"/>
        <On Terms="PreTargetingUpdate.*.Stop" Send="ClearTintColor 0.100000 Pretarget"/>
        <On Terms="StatusOn.*.PreTargetingTint" Send="PreTargetingUpdate Start"/>
        <On Terms="StatusOff.*.PreTargetingTint" Send="PreTargetingUpdate Stop"/>
    </CActorBeamSimple>
    <CActorSelection id="FlyerHelperSplat">
        <Flags index="SuppressSaveLoad" value="0"/>
        <Model value="AOEPreTargetAirUnitProtossSplat"/>
        <Host Subject="_Unit"/>
        <HostSiteOps Ops="SOpAttachOrigin SOpShadowRespectsBaseHeight"/>
        <Layer value="MaterialUILayer"/>
        <Inherits index="CloakEffect" value="1"/>
        <On Terms="ActorCreation" Send="Create FlyerHelperBeam"/>
        <On Terms="ActorDestruction" Target="FlyerHelperBeam" Send="Destroy"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <!-- Message rerouted from StatusX messages like this to preserve backwards compatability
             with modder data.  Pretargeting is now done differently, but will still need to
             support data that uses the PreTargetingUpdate message. -->
        <On Terms="PreTargetingUpdate.*.Start" Send="SetTintColorBlendPair 255,64,0 255,0,0 0.150000 Bounce Pretarget 175.000000"/>
        <On Terms="PreTargetingUpdate.*.Stop" Send="ClearTintColor 0.100000 Pretarget"/>
        <On Terms="StatusOn.*.PreTargetingTint" Send="PreTargetingUpdate Start"/>
        <On Terms="StatusOff.*.PreTargetingTint" Send="PreTargetingUpdate Stop"/>
        <On Terms="Behavior.VortexEventHorizon.On" Send="SetVisibility"/>
        <On Terms="Behavior.VortexEventHorizon.Off" Send="SetVisibility 1"/>
    </CActorSelection>
    <CActorModel id="ModelPretargetGround" parent="ModelPretarget">
        <Model value="AOEPreTargetGroundUnitProtoss"/>
    </CActorModel>
    <CActorModel id="BlipVisual">
        <!-- Can have multiple sensor towers on the same target. -->
        <Terms value="Cap 1"/>
        <FogVisibility value="Visible"/>
        <Model value="RadarBlip"/>
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpShadow SOp2DRotation SOpForwardNorth"/>
        <On Terms="UnitBlipUpdate.*.Start" Send="Create"/>
        <On Terms="UnitBlipUpdate.*.Stop" Send="Destroy"/>
        <On Terms="UnitDeath" Send="Destroy"/>
        <On Terms="ActorCreation" Send="AnimPlay Main Stand PlayForever"/>
    </CActorModel>
    <CActorModel id="ConfirmationLocalAir" parent="Confirmation">
        <On Terms="Confirmation.*.Start; Game Local; !AbilCmd attack; ValidateUnit IsFlying" Send="Create"/>
    </CActorModel>
    <CActorModel id="ConfirmationLocalGround" parent="Confirmation">
        <On Terms="Confirmation.*.Start; Game Local; !AbilCmd attack; ValidateUnit IsNotFlying" Send="Create"/>
    </CActorModel>
    <CActorModel id="ConfirmationSyncAir" parent="Confirmation">
        <On Terms="Confirmation.*.Start; Game Sync; !AbilCmd attack; ValidateUnit IsFlying" Send="Create"/>
    </CActorModel>
    <CActorModel id="ConfirmationSyncGround" parent="Confirmation">
        <On Terms="Confirmation.*.Start; Game Sync; !AbilCmd attack; ValidateUnit IsNotFlying" Send="Create"/>
    </CActorModel>
    <CActorModel id="ConfirmationLocalAirAttack" parent="Confirmation">
        <Model value="ConfirmationLocalAir"/>
        <On Terms="Confirmation.*.Start; Game Local; AbilCmd attack; ValidateUnit IsFlying" Send="Create"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,0,0"/>
    </CActorModel>
    <CActorModel id="ConfirmationLocalGroundAttack" parent="Confirmation">
        <Model value="ConfirmationLocalGround"/>
        <On Terms="Confirmation.*.Start; Game Local; AbilCmd attack; ValidateUnit IsNotFlying" Send="Create"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,0,0"/>
    </CActorModel>
    <CActorModel id="ConfirmationSyncAirAttack" parent="Confirmation">
        <Model value="ConfirmationSyncAir"/>
        <On Terms="Confirmation.*.Start; Game Sync; AbilCmd attack; ValidateUnit IsFlying" Send="Create"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,0,0"/>
    </CActorModel>
    <CActorModel id="ConfirmationSyncGroundAttack" parent="Confirmation">
        <Model value="ConfirmationSyncGround"/>
        <On Terms="Confirmation.*.Start; Game Sync; AbilCmd attack; ValidateUnit IsNotFlying" Send="Create"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,0,0"/>
    </CActorModel>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Model Event Harnesses ================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorModel id="EventCustom" parent="ModelAnimationStyleOneShot"/>
    <CActorModel id="EventFootprint" parent="ModelAnimationStyleOneShot">
        <HostSiteOps Ops="SOpShadow" HoldPosition="1" HoldRotation="1"/>
    </CActorModel>
    <CActorSound id="EventSound">
        <Host Subject="_Unit"/>
        <On Terms="ActorCreation; ValidateUnit IsHidden" Send="Destroy"/>
    </CActorSound>
    <CActorSound id="EventSoundFromData" parent="SoundOneShot">
        <Host Subject="_Unit"/>
        <On Terms="ActorCreation; ValidateUnit IsHidden" Send="Destroy"/>
    </CActorSound>
    <CActorModel id="EventSpawn" parent="ModelAnimationStyleOneShot"/>
    <CActorSplat id="EventSplat"/>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Scene File Harnesses ================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorSound id="SceneUISound" parent="EventSoundFromData"/>
    <CActorModel id="SceneUIHarness">
        <FogVisibility value="Visible"/>
        <EventDataSound Name="SMModelEventSound" Actor="SceneUISound"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorModel>
    <!--.........................................................................................-->
    <!--.........................................................................................-->
    <!-- Cursors/Guides ======================================================================== -->
    <!--.........................................................................................-->
    <!--.........................................................................................-->
    <CActorQueryResponse id="GuideRegionAdd">
        <Subject Filters="Snapshot,Unit,Missile" Terms="ValidateUnit TargetIsVisible IncludeDerivedSnapshot System_Snapshot_Dummy"/>
        <!--OnResponse Send="StatusIncrement PreTargetingModel"/>
        <OnResponse Send="StatusIncrement PreTargetingTint"/-->
        <OnResponse Send="StatusSet PreTargetingModel 1"/>
        <OnResponse Send="StatusSet PreTargetingTint 1"/>
        <OnResponse Send="RefSet ::actor.PreTargetingSource ::QueryDirector"/>
    </CActorQueryResponse>
    <CActorQueryResponse id="GuideRegionRemove">
        <Subject Filters="Snapshot,Unit,Missile"/>
        <!--OnResponse Send="StatusDecrement PreTargetingModel"/>
        <OnResponse Send="StatusDecrement PreTargetingTint"/-->
        <OnResponse Send="StatusSet PreTargetingModel 0"/>
        <OnResponse Send="StatusSet PreTargetingTint 0"/>
        <OnResponse Send="RefClear ::actor.PreTargetingSource"/>
    </CActorQueryResponse>
    <!--
    <CActorQueryResponse id="GuideRegionAdvance">
        <Subject Filters="Snapshot,Unit"/>
        <OnResponse Send="StatusIncrement PreTargetingModel"/>
    </CActorQueryResponse>
    <CActorQueryResponse id="GuideRegionRetreat">
        <Subject Filters="Snapshot,Unit"/>
        <OnResponse Send="StatusDecrement PreTargetingModel"/>
    </CActorQueryResponse>
    -->
    <!-- Cursor Regions -->
    <CActorRegionCircle id="CursorRegion">
        <Aliases value="_Scalable"/>
        <Radius value="1.000000"/>
        <NotifyArcKey value="_Scalable"/>
        <NotifyRadiusKey value="_Scalable"/>
        <HostSiteOps Ops="SOpBasicScopeFollow"/>
        <On Terms="ActorCreation" Send="QueryPersistent GuideRegionAdd GuideRegionRemove AgainstRadiusGame"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorRegionCircle>
    <CActorRegionArc id="GuideRegionArc" parent="GuideRegionNormal">
        <Radius value="1.000000"/>
        <NotifyArcKey value="_Scalable"/>
        <NotifyRadiusKey value="_Scalable"/>
        <RegionFlags index="UseEffectRange" value="1"/>
        <HostSiteOps Ops="SOp2DRotation"/>
    </CActorRegionArc>
    <CActorRegionCircle id="GuideRegionCircle" parent="GuideRegionNormal">
        <Radius value="1.000000"/>
        <NotifyRadiusKey value="_Scalable"/>
        <HostSiteOps Ops="SOpBasicScopeFollow"/>
    </CActorRegionCircle>
    <CActorRegionQuad id="GuideRegionQuadDown" parent="GuideRegionNormal">
        <RegionFlags index="UseEffectRange" value="1"/>
        <HostSiteOps Ops="SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadDownDetached" parent="GuideRegionNormal">
        <HostSiteOps Ops="SOpBasicScopeFollow SOpForwardQueryCaster SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadDownClosest" parent="GuideRegionClosest">
        <RegionFlags index="UseEffectRange" value="1"/>
        <HostSiteOps Ops="SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadDownScaled" parent="GuideRegionScaled">
        <RegionFlags index="UseEffectRange" value="1"/>
        <HostSiteOps Ops="SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadDownScaledClosest" parent="GuideRegionScaledClosest">
        <RegionFlags index="UseEffectRange" value="1"/>
        <HostSiteOps Ops="SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadPerpendicular" parent="GuideRegionNormal">
        <HostSiteOps Ops="SOpBasicScopeFollow SOpForwardQueryCaster SOp90 SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorRegionQuad id="GuideRegionQuadPerpendicularReversed" parent="GuideRegionNormal">
        <HostSiteOps Ops="SOpBasicScopeFollow SOpForwardQueryCaster SOp270 SOp2DRotation"/>
    </CActorRegionQuad>
    <CActorModel id="GuideVisualQuadModel" parent="ModelAnimationStyleContinuous">
        <Aliases value="_GuideQuadSegment"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <HostForProps Subject="_GuideVisual"/>
        <HostSiteOps Ops="SOp2DRotation"/>
        <FogVisibility value="Visible"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorModel>
    <CActorModel id="GuideVisualQuadLaunch" parent="GuideVisualQuadModel">
        <Model value="AOEStretchLineStart"/>
    </CActorModel>
    <CActorModel id="GuideVisualQuadCenter" parent="GuideVisualQuadModel">
        <Model value="AOEStretchLineMid"/>
    </CActorModel>
    <CActorModel id="GuideVisualQuadImpact" parent="GuideVisualQuadModel">
        <Model value="AOEStretchLineEnd"/>
    </CActorModel>
    <CActorModel id="GuideVisualQuadLaunchWall" parent="GuideVisualQuadLaunch">
        <On Terms="ActorCreation" Send="AnimGroupApply Cover"/>
    </CActorModel>
    <CActorModel id="GuideVisualQuadImpactWall" parent="GuideVisualQuadImpact">
        <On Terms="ActorCreation" Send="AnimGroupApply Cover"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadLaunch" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineStart"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadCenter" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineMid"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadImpact" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineEnd"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadRedLaunch" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineRedStart"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadRedCenter" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineRedMid"/>
    </CActorModel>
    <CActorModel id="ZergGuideVisualQuadRedImpact" parent="GuideVisualQuadModel">
        <Model value="ZergAOEStretchLineRedEnd"/>
    </CActorModel>
    <!-- For guides that dont go below terrain level 1 -->
    <!-- Deprecated -->
    <CActorSplat id="GuideVisualQuadSplatModel">
        <Aliases value="_GuideQuadSegment"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Decal" value="1"/>
        <Inherits index="Opacity" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TimeScale" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <Inherits index="WarpGroup" value="1"/>
        <HostForProps Subject="_GuideVisual"/>
        <FogVisibility value="Visible"/>
        <HoldTime value="-1.000000"/>
        <FadeOut value="0.000000"/>
        <Layer value="AOELayer"/>
        <Flags index="SuppressSaveLoad" value="1"/>
    </CActorSplat>
    <CActorSplat id="GuideVisualQuadSplatLaunch" parent="GuideVisualQuadSplatModel">
        <Model value="AOEStretchLineStart"/>
    </CActorSplat>
    <CActorSplat id="GuideVisualQuadSplatCenter" parent="GuideVisualQuadSplatModel">
        <Model value="AOEStretchLineMid"/>
    </CActorSplat>
    <CActorSplat id="GuideVisualQuadSplatImpact" parent="GuideVisualQuadSplatModel">
        <Model value="AOEStretchLineEnd"/>
    </CActorSplat>
    <CActorSnapshot id="Snapshot" parent="SnapshotBase"/>
    <CActorSnapshot id="SnapshotNoOpacity" parent="Snapshot">
        <Inherits index="Opacity" value="0"/>
        <AcceptedHostedPropTransfers index="Opacity" value="0"/>
    </CActorSnapshot>
    <CActorSnapshot id="SnapshotAnimating" parent="Snapshot">
        <On Terms="ActorCopy" Send="AnimSetLockedAll 0"/>
        <On Terms="ActorCopy" Send="AnimSetPausedAll 0"/>
    </CActorSnapshot>
    <!--                                                                                         -->
    <CActorSplat id="PowerVisual">
        <FogVisibility value="Visible"/>
        <FadeIn value="0.000000"/>
        <FadeOut value="0.000000"/>
        <HoldTime value="-1.000000"/>
        <Layer value="PowerLayer"/>
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpShadow"/>
    </CActorSplat>
    <CActorSplat id="UnpoweredVisual">
        <FogVisibility value="Visible"/>
        <FadeIn value="0.000000"/>
        <FadeOut value="0.000000"/>
        <HoldTime value="-1.000000"/>
        <Layer value="PowerLayer"/>
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpShadow"/>
    </CActorSplat>
    <CActorSelection id="EditorSelection">
        <Alpha value="1.000000,1.000000,1.000000"/>
        <InnerBoundaryFallOffRatio value="0.400000"/>
        <InnerBoundaryRatio value="0.860000"/>
        <InnerOffsetRatio value="0.140000"/>
        <OuterWidth value="0.030000"/>
        <SegmentCount value="1"/>
        <SegmentPercentSolid value="1.000000"/>
        <SelectionFlags index="UseCrescent" value="1"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="Visibility" value="0"/>
        <On Terms="PreSelectionUpdate.*.StartEditorGround" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.StartEditorGround" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.VisibleOn" Send="SetVisibility 1"/>
        <On Terms="SelectionLocalUpdate.*.VisibleOff" Send="SetVisibility"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="Destroy"/>
        <On Terms="ActorCreation; ValidateUnitType IsFlying" Target="::Host" Send="StatusIncrement FlyerHelper"/>
        <On Terms="ActorDestruction; ValidateUnitType IsFlying; ScopeContains FlyerHelperSplat" Target="::Host" Send="StatusDecrement FlyerHelper"/>
        <HalfHeight value="20.000000"/>
    </CActorSelection>
    <!--                                                                                         -->
    <CActorSelection id="FlashingSelection">
        <SelectionFlags index="IsFlash" value="1"/>
        <FogVisibility value="Visible"/>
        <Alpha value="0.750000,0.750000,0.750000"/>
        <InnerWidth value="0.150000"/>
        <OuterWidth value="0.030000"/>
        <RotationSpeed value="8.000000"/>
        <SegmentCount value="4"/>
        <SegmentPercentSolid value="0.400000"/>
        <HoldTime value="1.500000"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="Scale" value="1"/>
    </CActorSelection>
    <CActorSelection id="GroundLocalFlashingSelection" parent="FlashingSelection">
        <On Terms="SelectionLocalFlash; !ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffLocalFlashingSelection" parent="FlashingSelection">
        <On Terms="SelectionLocalFlash; ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="GroundSyncFlashingSelection" parent="FlashingSelection">
        <SelectionFlags index="IsSyncSelection" value="1"/>
        <On Terms="SelectionSyncFlash; !ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffSyncFlashingSelection" parent="FlashingSelection">
        <SelectionFlags index="IsSyncSelection" value="1"/>
        <On Terms="SelectionSyncFlash; ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="GroundPreSelection" parent="PreSelection">
        <On Terms="PreSelectionUpdate.*.Start; !ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffPreSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffPreSelection" parent="PreSelection">
        <On Terms="PreSelectionUpdate.*.Start; ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.StartEditorCliff" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundPreSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="GroundLocalSelection" parent="LocalSelection">
        <On Terms="SelectionLocalUpdate.*.Start; !ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffLocalSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffLocalSelection" parent="LocalSelection">
        <On Terms="SelectionLocalUpdate.*.Start; ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.StartEditorCliff" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundLocalSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="GroundSyncSelection" parent="SyncSelection">
        <On Terms="SelectionSyncUpdate.*.Add; !ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffSyncSelection" parent="SyncSelection">
        <On Terms="SelectionSyncUpdate.*.Add; ValidateUnit UseCliffSelection; IsLocalParticipantType" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="PrimaryGroundSyncSelectionObserver" parent="SyncSelectionPrimaryObserver">
        <On Terms="SelectionSyncUpdate.*.Add; !ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="SecondaryGroundSyncSelectionObserver" parent="SyncSelectionSecondaryObserver">
        <On Terms="SelectionSyncUpdate.*.Add; !ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="GroundLocalSelectionObserver" parent="LocalSelectionObserver">
        <On Terms="SelectionLocalUpdate.*.Start; !ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffLocalSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="GroundPreSelectionObserver" parent="PreSelectionObserver">
        <On Terms="PreSelectionUpdate.*.Start; !ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="CreateCopy CliffPreSelection"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="1.000000"/>
        <Attenuation value="0.500000"/>
    </CActorSelection>
    <CActorSelection id="CliffLocalSelectionObserver" parent="LocalSelectionObserver">
        <On Terms="SelectionLocalUpdate.*.Start; ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.StartEditorCliff" Send="Create"/>
        <On Terms="SelectionLocalUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundLocalSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="CliffPreSelectionObserver" parent="PreSelectionObserver">
        <On Terms="PreSelectionUpdate.*.Start; ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.StartEditorCliff" Send="Create"/>
        <On Terms="PreSelectionUpdate.*.Stop" Send="Destroy"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundPreSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="PrimaryCliffSyncSelectionObserver" parent="SyncSelectionPrimaryObserver">
        <On Terms="SelectionSyncUpdate.*.Add; ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <CActorSelection id="SecondaryCliffSyncSelectionObserver" parent="SyncSelectionSecondaryObserver">
        <On Terms="SelectionSyncUpdate.*.Add; ValidateUnit UseCliffSelection; IsLocalParticipantType Observer" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="CreateCopy GroundSyncSelection"/>
        <On Terms="AbilMorph.*.Finish; !ValidateUnit UseCliffSelection" Send="Destroy"/>
        <HalfHeight value="4.000000"/>
    </CActorSelection>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Shadows =============================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorShadow id="FlyerShadow">
        <Color value="120,0,0,0"/>
        <FallOff value="0.600000"/>
        <HalfHeight value="1.500000"/>
        <Attenuation value="0.500000"/>
        <HostRadiusPercent value="0.300000"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit IsFlying; Option Shadow Low; $AllowBlobShadow" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit IsNotFlying" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow Low; Scope Unit; ValidateUnit IsFlying; $AllowBlobShadow" Send="Create"/>
        <On Terms="OptionsChange; Option Shadow Medium" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow High" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow Ultra" Send="Destroy"/>
    </CActorShadow>
    <CActorShadow id="GroundShadow">
        <Color value="140,0,0,0"/>
        <FallOff value="0.500000"/>
        <HalfHeight value="1.500000"/>
        <Attenuation value="0.500000"/>
        <HostRadiusPercent value="0.300000"/>
        <Inherits index="CloakEffect" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit IsNotFlying; Option Shadow Low; $AllowBlobShadow" Send="Create"/>
        <On Terms="AbilMorph.*.Finish; ValidateUnit IsFlying" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow Low; Scope Unit; ValidateUnit IsNotFlying; $AllowBlobShadow" Send="Create"/>
        <On Terms="OptionsChange; Option Shadow Medium" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow High" Send="Destroy"/>
        <On Terms="OptionsChange; Option Shadow Ultra" Send="Destroy"/>
    </CActorShadow>
    <CActorForceSphere id="TestForce">
        <Magnitude value="10.000000"/>
        <Radius value="2.000000"/>
        <Duration value="-1.000000"/>
    </CActorForceSphere>
    <CActorForceSphere id="TestForceStrong">
        <Magnitude value="50.000000"/>
        <Radius value="2.000000"/>
        <Duration value="-1.000000"/>
    </CActorForceSphere>
    <CActorForceSphere id="TestForceHuge">
        <Magnitude value="150.000000"/>
        <Radius value="3.000000"/>
        <Duration value="-1.000000"/>
    </CActorForceSphere>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Terrain Flattening ==================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorTerrainDeformer id="BuildingTerrainFlatten">
        <Aliases value="_BuildingTerrainFlatten"/>
        <InfluenceRange value="2.000000"/>
        <BlendTime value="0.500000"/>
        <TerrainDeformerFlags index="UseUnitFootprint" value="1"/>
        <On Terms="ActorOrphan" Send="Destroy"/>
    </CActorTerrainDeformer>
    <CActorTerrainDeformer id="BuildingTerrainFlattenInstant" parent="BuildingTerrainFlatten">
        <BlendTime value="0.000000"/>
        <FoliageFXDeathSpawnTarget value=""/>
    </CActorTerrainDeformer>
    <CActorTerrainDeformer id="BuildingTerrainFlattenEditor" parent="BuildingTerrainFlatten">
        <BlendTime value="0.000000"/>
        <TerrainDeformerFlags index="RestoreOnMovement" value="1"/>
        <TerrainDeformerFlags index="RestoreOnDestroy" value="1"/>
        <FoliageFXDeathSpawnTarget value=""/>
    </CActorTerrainDeformer>
    <CActorEventMacro id="BuildingFlattenTerrainMacro">
        <On Terms="UnitConstruction.*.Start" Send="Create BuildingTerrainFlatten"/>
        <On Terms="UnitConstruction.*.Cancel" Target="_BuildingTerrainFlatten" Send="Destroy"/>
        <On Terms="UnitConstruction.*.Finish" Target="_BuildingTerrainFlatten" Send="Destroy"/>
        <On Terms="UnitBirth.*.Normal" Send="Create BuildingTerrainFlatten"/>
        <On Terms="UnitBirth.*.Suppressed" Send="Create BuildingTerrainFlattenInstant"/>
        <On Terms="UnitBirth.*.EditorPlaced" Send="Create BuildingTerrainFlattenEditor"/>
        <On Terms="UnitDeath" Target="_BuildingTerrainFlatten" Send="Destroy"/>
    </CActorEventMacro>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Harnesses ============================================================================= -->
    <!--                                                                                         -->
    <!-- Used for simple harnessing from the command line.                                       -->
    <!--                                                                                         -->
    <CActorList id="List"/>
    <CActorBeamStandard id="BeamStandard" parent="BeamStandardAnimationStyleContinuous">
        <Model value=""/>
    </CActorBeamStandard>
    <CActorBeamSimple id="BeamSimple" parent="BeamSimpleAnimationStyleContinuous">
        <Model value=""/>
    </CActorBeamSimple>
    <CActorSite id="SiteAttachHarness" parent="SiteUNIT">
        <HostSiteOps Ops="SOpAttachHarness"/>
    </CActorSite>
    <CActorSite id="SiteHosted" parent="SiteUNIT">
        <HostSiteOps Ops="SOpAttachHarness"/>
    </CActorSite>
    <CActorModel id="TriggerModel">
        <Model value=""/>
        <On Terms="ActorCreation" Send="AnimBracketStart BSD Birth Stand Death"/>
        <On Terms="AnimBracketState.*.AfterClosing; AnimName BSD" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="Model" parent="ModelAnimationStyleContinuous">
        <Model value=""/>
    </CActorModel>
    <CActorModel id="ModelNoAnims">
        <Model value=""/>
    </CActorModel>
    <CActorModel id="ModelRagdoll">
        <Model value=""/>
        <On Terms="ActorCreation" Send="$Death"/>
        <On Terms="AnimDone; AnimName Death" Send="Destroy"/>
    </CActorModel>
    <CActorModel id="ModelAdditionHarness" parent="ModelAddition">
        <Model value=""/>
    </CActorModel>
    <CActorModel id="ModelOneShot" parent="ModelAnimationStyleOneShot">
        <Model value=""/>
    </CActorModel>
    <CActorModel id="ModelHosted" parent="Model">
        <Host Subject="::LastCreated"/>
    </CActorModel>
    <CActorModel id="ModelHostedInheritVisibility" parent="Model">
        <Inherits index="Visibility" value="1"/>
        <Host Subject="::LastCreated"/>
    </CActorModel>
    <CActorPropertyCurveSet id="PropertyCurveSet"/>
    <CActorSimple id="Simple"/>
    <CActorSite id="SiteHostedUnit" parent="SiteUNIT"/>
    <CActorSite id="SiteUnitMark" parent="SiteHostedUnit">
        <On Terms="ActorCreation" Send="Create IndicatorBase"/>
    </CActorSite>
    <CActorSplat id="Splat">
        <Model value=""/>
        <FadeIn value="1.000000"/>
        <FadeOut value="1.000000"/>
        <HoldTime value="-1.000000"/>
    </CActorSplat>
    <CActorSplat id="SplatHosted" parent="Splat">
        <Host Subject="SiteHosted" Actor="Create"/>
    </CActorSplat>
    <CActorSquib id="Squib"/>
    <CActorSquib id="SquibHosted" parent="Squib">
        <Host Subject="SiteHosted" Actor="Create"/>
    </CActorSquib>
    <CActorSound id="Sound" parent="SoundOneShot">
        <Sound value=""/>
    </CActorSound>
    <CActorSound id="SoundHosted" parent="Sound">
        <Host Subject="SiteHosted" Actor="Create"/>
    </CActorSound>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Units ================================================================================= -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorEventMacro id="DeadAnimationMacro">
        <On Terms="AnimDone; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
        <On Terms="DeathModelInitializeDone" Send="SetTransferOverrideAnim Dead"/>
        <On Terms="AnimDone.*.Missing; AnimName Dead" Send="PhysicsTerminate"/>
        <On Terms="AnimDone.*.Missing; AnimName Dead" Send="Destroy"/>
        <!-- Normally, orphaning creates this model.  But it might not if the unit "dies" but
             its corpse sticks around for a long time and can be resurrected.  Or if a unit
             is lingering on the game side but isn't really dead even though it looks that way. -->
        <On Terms="ActorOrphan; !AnimPlaying Death" Send="Destroy"/>
    </CActorEventMacro>
    <CActorEventMacro id="DeadAnimationRemoveMacro">
        <Remove Terms="AnimDone; AnimName Death" Send="AnimPlay Dead Dead PlayForever"/>
        <Remove Terms="DeathModelInitializeDone" Send="SetTransferOverrideAnim Dead"/>
        <Remove Terms="AnimDone.*.Missing; AnimName Dead" Send="Destroy"/>
        <Remove Terms="ActorOrphan; !AnimPlaying Death" Send="Destroy"/>
    </CActorEventMacro>
    <CActorEventMacro id="AntiGravDeathRemoveMacro">
        <Remove Terms="UnitDeathCustomize; ValidateUnit NotStructure; IsStatus InAir 1" Send="DeathCustomize AntiGravGeneric"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit IsProtossUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravProtoss"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit IsTerranUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravTerran"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit IsZergUnit; IsStatus InAir 1" Send="DeathCustomize AntiGravZerg"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathProtoss" Send="DeathCustomize AntiGravProtoss"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathZerg" Send="DeathCustomize AntiGravZerg"/>
        <Remove Terms="UnitDeathCustomize; ValidateUnit HasForceLowDeathTerran" Send="DeathCustomize AntiGravTerran"/>
    </CActorEventMacro>
    <CActorEventMacro id="RemoveFlyerHelperMacro">
        <Remove Terms="StatusOn.*.FlyerHelper; FlyerHelper All" Send="Create FlyerHelperSplat"/>
        <Remove Terms="StatusOn.*.FlyerHelper; FlyerHelper Selected" Send="Create FlyerHelperSplat"/>
        <Remove Terms="ActorCreation; FlyerHelper All; ValidateUnit IsFlying" Send="Create FlyerHelperSplat"/>
        <Remove Terms="FlyerHelperChange; FlyerHelper Selected; HasStatus FlyerHelper; !ScopeContains FlyerHelperSplat" Send="Create FlyerHelperSplat"/>
        <Remove Terms="FlyerHelperChange; FlyerHelper All; ValidateUnit IsFlying; !ScopeContains FlyerHelperSplat" Send="Create FlyerHelperSplat"/>
    </CActorEventMacro>
    <!-- For anything unit that one would consider a conventional unit in the game. -->
    <CActorEventMacro id="NanniteCreationMacro">
        <On Terms="Behavior.CloneDummy.On" Send="SetOpacity"/>
        <On Terms="Behavior.CloneDummy.On" Send="TimerSet 0.700000 DelayScale"/>
        <On Terms="TimerExpired; TimerName DelayScale" Send="SetScale 0.200000"/>
        <On Terms="TimerExpired; TimerName DelayScale" Send="SetOpacity 1.000000"/>
        <On Terms="TimerExpired; TimerName DelayScale" Send="SetScale 1.000000 0.200000"/>
    </CActorEventMacro>
    <CActorEventMacro id="GrabbedAnimationMacro">
        <!-- Setup for unit picking up and throwing another unit, please ask before changing anything, it is very easy to break -->
        <On Terms="ActorCreation" Send="StatusSet Grabbed 0"/>
        <On Terms="ActorCreation" Send="StatusSet Thrown 0"/>
        <On Terms="Effect.GrabDummyCP.Start; At Target" Send="Create GrabHandSite"/>
        <On Terms="Signal.*.GrabHandSiteCreated" Send="RefClear ::Host"/>
        <On Terms="Signal.*.GrabHandSiteCreated" Send="RefSetFromMsg ::Host ::Sender"/>
        <!-- this may have to be adjusted on a per unit basis, depending on how the grabbed units sits in the grabbing units hand -->
        <On Terms="Signal.*.GrabHandSiteCreated" Send="HostSiteOpsSet ::Host {GrabbedUnitOffset GrabbedUnitRotation}"/>
        <On Terms="Signal.*.GrabHandSiteCreated" Send="StatusSet Grabbed 1"/>
        <On Terms="Signal.*.GrabHandSiteCreated" Send="AnimPlay Grabbed Flail PlayForever"/>
        <!-- if grabber dies before throwing -->
        <On Terms="Behavior.Grabbed.Off; IsStatus Thrown 0" Send="RefClear ::Host"/>
        <On Terms="Behavior.Grabbed.Off; IsStatus Thrown 0" Send="RefSet ::Host Implicit"/>
        <On Terms="Behavior.Grabbed.Off; IsStatus Thrown 0" Send="HostSiteOpsSet ::Host"/>
        <On Terms="Behavior.Grabbed.Off; IsStatus Thrown 0" Send="StatusSet Grabbed 0"/>
        <On Terms="Behavior.Grabbed.Off; IsStatus Thrown 0" Send="AnimClear Grabbed"/>
        <!-- grabber has thrown the grabbed unit -->
        <On Terms="Effect.GrabThrowMissileTag.Start; At Target; IsStatus Grabbed 1" Send="Create GrabMissileSite"/>
        <On Terms="Effect.GrabThrowMissileTag.Start; At Target; IsStatus Grabbed 1" Send="StatusSet Thrown 1"/>
        <On Terms="Signal.*.GrabMissileSiteCreated" Send="RefClear ::Host"/>
        <On Terms="Signal.*.GrabMissileSiteCreated" Send="RefSetFromMsg ::Host ::Sender"/>
        <!-- this may need to be Removed/readded for fliers, or any other unit that uses their own site ops -->
        <On Terms="Signal.*.GrabMissileSiteCreated" Send="HostSiteOpsSet ::Host"/>
    </CActorEventMacro>
    <CActorSiteOpEffect id="SOpGrabCaster">
        <Location value="CasterUnit"/>
    </CActorSiteOpEffect>
    <CActorSiteOpEffect id="SOpGrabMissile">
        <Location value="SourceUnit"/>
    </CActorSiteOpEffect>
    <CActorSite id="GrabHandSite">
        <HostSiteOps Ops="SOpGrabCaster SOpAttachHardPoint"/>
        <On Terms="ActorCreation" Target="::Creator" Send="Signal GrabHandSiteCreated"/>
    </CActorSite>
    <CActorSiteOpRotationExplicit id="GrabbedUnitRotation">
        <EditorCategories value=""/>
        <Forward value="-0.400000,-0.050000,-1.000000"/>
        <IsLocal value="1"/>
    </CActorSiteOpRotationExplicit>
    <CActorSite id="GrabMissileSite">
        <HostSiteOps Ops="SOpGrabMissile SOpAttachOrigin"/>
        <On Terms="ActorCreation" Target="::Creator" Send="Signal GrabMissileSiteCreated"/>
    </CActorSite>
    <!-- Used by the system to at least create a unit when the data is bad.  This enables us to
         avoid a bunch of NULL checks.  This is still selectable, even though it comes from
         GenericUnitMinimal. -->
    <CActorUnit id="GenericUnitFallback" parent="GenericUnitMinimal">
        <Model value="Sphere"/>
    </CActorUnit>
    <CActorModel id="UnitFootprint" parent="EventFootprint"/>
    <CActorSound id="UnitSound" parent="EventSoundFromData">
        <InheritType value="Continuous"/>
    </CActorSound>
    <CActorSound id="UnitSoundHiddenCheck" parent="UnitSound">
        <Host Subject="::Main"/>
        <HostSiteOps Ops="SOpAttachHeadSound"/>
    </CActorSound>
    <CActorModel id="UnitDeathModel">
        <ModelFlags index="SuppressMissingAttachErrors" value="1"/>
        <ModelFlags index="UpdateVisibility" value="0"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Host Subject="::Creator"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <AcceptedHostedPropTransfers index="TimeScale" value="0"/>
        <Aliases value="_Main"/>
        <Aliases value="_Unit"/>
        <Aliases value="_DeathModel"/>
        <Macros value="DeadAnimationMacro"/>
        <!-- Means we get props and bearings once, and then stop. -->
        <On Terms="ActorCreation" Send="RefClear ::Host"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,255,255 0.600000"/>
        <On Terms="ActorCreation" Target="ModelPretargetGround" Send="Destroy"/>
        <On Terms="ActorCreation" Target="GroundPreSelection" Send="Destroy"/>
        <On Terms="ActorCreation; ScopeContains _RedTintDeath" Send="SetTintColor 255,0,0"/>
        <On Terms="ActorCreation; ScopeContains _GreenTintDeath" Send="SetTintColor 0,255,0"/>
        <On Terms="ActorCreation; ScopeContains _BlueTintDeath" Send="SetTintColor 0,0,255"/>
        <On Terms="ActorCreation; ScopeContains _YellowTintDeath" Send="SetTintColor 255,255,0"/>
        <On Terms="ActorCreation; ScopeContains _CyanTintDeath" Send="SetTintColor 0,255,255"/>
        <On Terms="ActorCreation; ScopeContains _PurpleTintDeath" Send="SetTintColor 255,0,255"/>
        <On Terms="Signal.*.ClearDeathModel" Send="Destroy"/>
        <EventDataSound Name="NydusCanalThud" Actor="UnitSound" Sound="NydusWorm_DeathThud"/>
        <EventDataSound Name="ZergExplosionSlime" Actor="UnitSound" Sound="Zerg_ExplosionSlime"/>
        <EventDataSound Name="ZergPreExplosionSmall" Actor="UnitSound" Sound="Zerg_PreExplosionSmall"/>
        <EventDataSound Name="ZergExplosionTiny" Actor="UnitSound" Sound="Zerg_ExplosionTiny"/>
        <EventDataSound Name="ZergExplosionSmall" Actor="UnitSound" Sound="Zerg_ExplosionSmall"/>
        <EventDataSound Name="ZergExplosionMedium" Actor="UnitSound" Sound="Zerg_ExplosionMedium"/>
        <EventDataSound Name="ZergExplosionLarge" Actor="UnitSound" Sound="Zerg_ExplosionLarge"/>
        <EventDataSound Name="ProtossPreExplosionSmall" Actor="UnitSound" Sound="Protoss_PreExplosionSmall"/>
        <EventDataSound Name="ProtossExplosionSmall" Actor="UnitSound" Sound="Protoss_ExplosionSmall"/>
        <EventDataSound Name="ProtossExplosionMedium" Actor="UnitSound" Sound="Protoss_ExplosionMedium"/>
        <EventDataSound Name="ProtossExplosionLarge" Actor="UnitSound" Sound="Protoss_ExplosionLarge"/>
        <EventDataSound Name="TerranPreExplosionSmall" Actor="UnitSound" Sound="Terran_PreExplosionSmall"/>
        <EventDataSound Name="TerranExplosionSmall" Actor="UnitSound" Sound="Terran_ExplosionSmall"/>
        <EventDataSound Name="TerranExplosionMedium" Actor="UnitSound" Sound="Terran_ExplosionMedium"/>
        <EventDataSound Name="TerranExplosionLarge" Actor="UnitSound" Sound="Terran_ExplosionLarge"/>
    </CActorModel>
    <CActorModel id="UnitDeathModelNoTeamColor">
        <ModelFlags index="UpdateVisibility" value="0"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Host Subject="::Creator"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <AcceptedHostedPropTransfers index="TimeScale" value="0"/>
        <Aliases value="_Main"/>
        <Aliases value="_Unit"/>
        <Aliases value="_DeathModel"/>
        <Macros value="DeadAnimationMacro"/>
        <!-- Means we get props and bearings once, and then stop. -->
        <On Terms="ActorCreation" Send="RefClear ::Host"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,255,255 0.600000"/>
        <On Terms="ActorCreation" Send="SetTeamColor {0,0,0 0.000000} {0,0,0 0.000000}"/>
        <On Terms="ActorCreation" Target="ModelPretargetGround" Send="Destroy"/>
        <On Terms="ActorCreation" Target="GroundPreSelection" Send="Destroy"/>
        <On Terms="Signal.*.ClearDeathModel" Send="Destroy"/>
        <EventDataSound Name="NydusCanalThud" Actor="UnitSound" Sound="NydusWorm_DeathThud"/>
        <EventDataSound Name="ZergExplosionSlime" Actor="UnitSound" Sound="Zerg_ExplosionSlime"/>
        <EventDataSound Name="ZergPreExplosionSmall" Actor="UnitSound" Sound="Zerg_PreExplosionSmall"/>
        <EventDataSound Name="ZergExplosionTiny" Actor="UnitSound" Sound="Zerg_ExplosionTiny"/>
        <EventDataSound Name="ZergExplosionSmall" Actor="UnitSound" Sound="Zerg_ExplosionSmall"/>
        <EventDataSound Name="ZergExplosionMedium" Actor="UnitSound" Sound="Zerg_ExplosionMedium"/>
        <EventDataSound Name="ZergExplosionLarge" Actor="UnitSound" Sound="Zerg_ExplosionLarge"/>
        <EventDataSound Name="ProtossPreExplosionSmall" Actor="UnitSound" Sound="Protoss_PreExplosionSmall"/>
        <EventDataSound Name="ProtossExplosionSmall" Actor="UnitSound" Sound="Protoss_ExplosionSmall"/>
        <EventDataSound Name="ProtossExplosionMedium" Actor="UnitSound" Sound="Protoss_ExplosionMedium"/>
        <EventDataSound Name="ProtossExplosionLarge" Actor="UnitSound" Sound="Protoss_ExplosionLarge"/>
        <EventDataSound Name="TerranPreExplosionSmall" Actor="UnitSound" Sound="Terran_PreExplosionSmall"/>
        <EventDataSound Name="TerranExplosionSmall" Actor="UnitSound" Sound="Terran_ExplosionSmall"/>
        <EventDataSound Name="TerranExplosionMedium" Actor="UnitSound" Sound="Terran_ExplosionMedium"/>
        <EventDataSound Name="TerranExplosionLarge" Actor="UnitSound" Sound="Terran_ExplosionLarge"/>
    </CActorModel>
    <CActorModel id="UnitDeathModelUnscaled" parent="UnitDeathModel">
        <Inherits index="BaseModelScale" value="0"/>
        <Inherits index="Scale" value="0"/>
    </CActorModel>
    <CActorModel id="UnitDeathModelNoTeamColorUnscaled" parent="UnitDeathModelNoTeamColor">
        <Inherits index="BaseModelScale" value="0"/>
        <Inherits index="Scale" value="0"/>
    </CActorModel>
    <CActorSiteOpDeathMotion id="SOpDeathMotionGround">
        <HostInitialSiteOps Ops="SOpAttachOrigin"/>
        <Deceleration value="4.000000"/>
    </CActorSiteOpDeathMotion>
    <CActorModel id="UnitDeathModelWithDeathMotionGround" parent="UnitDeathModel">
        <HostSiteOps Ops="SOpDeathMotionGround"/>
    </CActorModel>
    <CActorModel id="UnitDeathModelWithDeathMotionGroundUnscaled" parent="UnitDeathModelUnscaled">
        <HostSiteOps Ops="SOpDeathMotionGround"/>
    </CActorModel>
    <CActorSiteOpDeathMotion id="SOpDeathMotionFlier">
        <HostInitialSiteOps Ops="SOpAttachOrigin"/>
        <Deceleration value="1.000000"/>
    </CActorSiteOpDeathMotion>
    <CActorModel id="UnitDeathModelWithDeathMotionFlier" parent="UnitDeathModel">
        <HostSiteOps Ops="SOpDeathMotionFlier"/>
    </CActorModel>
    <CActorModel id="PhysicsImpactHarness" parent="ModelAnimationStyleOneShot">
        <Model value=""/>
    </CActorModel>
    <CActorModel id="PhysicsWaterBloodSlickHarness" parent="ModelAnimationStyleOneShot">
        <Model value=""/>
        <HostSiteOps Ops="SOpWaterPlane"/>
    </CActorModel>
    <CActorEventMacro id="UnitDeathRagdollTerminateExtrasMacro">
        <On Terms="ActorCreation" Send="TimerSet 8.000000 TerminateExtras"/>
    </CActorEventMacro>
    <CActorEventMacro id="UnitDeathRagdollTerminateExtrasRemovalMacro">
        <Remove Terms="ActorCreation" Send="TimerSet 8.000000 TerminateExtras"/>
    </CActorEventMacro>
    <CActorEventMacro id="UnitDeathRagdollTimingExtensionMacro">
        <On Terms="ActorCreation" Send="TimerSet 5.000000 PhaseStart"/>
        <On Terms="TimerExpired; TimerName PhaseStart" Send="AnimSetPaused Death"/>
        <On Terms="TimerExpired; TimerName PhaseStart" Send="TimerSet 15.000000 PhaseHold"/>
        <On Terms="TimerExpired; TimerName PhaseHold" Send="AnimSetPaused Death 0"/>
        <On Terms="TimerExpired; TimerName PhaseHold" Send="Signal TerminateExtras"/>
    </CActorEventMacro>
    <CActorEventMacro id="UnitDeathRagdollTimingExtensionRemovalMacro">
        <Remove Terms="ActorCreation" Send="TimerSet 5.000000 PhaseStart"/>
        <Remove Terms="TimerExpired; TimerName PhaseStart" Send="AnimSetPaused Death"/>
        <Remove Terms="TimerExpired; TimerName PhaseStart" Send="TimerSet 15.000000 PhaseHold"/>
        <Remove Terms="TimerExpired; TimerName PhaseHold" Send="AnimSetPaused Death 0"/>
        <Remove Terms="TimerExpired; TimerName PhaseHold" Send="Signal TerminateExtras"/>
    </CActorEventMacro>
    <CActorSound id="PhysicsImpactSound" parent="SoundOneShot"/>
    <CActorModel id="UnitDeathRagdoll" parent="UnitDeathModelNoTeamColor">
        <HostSiteOps Ops="SOpDeathMotionGround"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <Macros value="DeadAnimationRemoveMacro"/>
        <!--Macros value="UnitDeathRagdollTimingExtensionMacro"/-->
        <Macros value="UnitDeathRagdollTerminateExtrasMacro"/>
        <On Terms="TimerExpired; TimerName TerminateExtras" Send="Signal TerminateExtras"/>
        <On Terms="Signal.*.TerminateExtras" Send="PhysicsImpactsEnable"/>
        <On Terms="Signal.*.TerminateExtras" Target="_BodySquib" Send="Signal Terminate"/>
        <On Terms="AnimDone; AnimName Death" Send="PhysicsTerminate"/>
        <On Terms="AnimDone; AnimName Death" Send="Destroy"/>
        <PhysicsImpactDefault ActorModel="PhysicsImpactHarness" ActorSound="PhysicsImpactSound" OccuranceThrottlingDistance="0.500000,0.500000"/>
        <!--
        <PhysicsImpacts>
            <Name value="Hard"/>
            <ModelLink value="Axis"/>
            <SoundLink value=""/>
            <SiteOps Ops=""/>
            <OccuranceThrottlingDistance value="0.0,0.0"/>
            <OccuranceThrottlingPeriod value="0.0,0.0"/>
        </PhysicsImpacts>
        <On Terms="PhysicsImpact; PhysicsImpactRelativeApproachSpeed 2.0" Send="PhysicsImpactCustomize Hard"/>
-->
    </CActorModel>
    <CActorModel id="UnitDeathRagdollWithTeamColor" parent="UnitDeathRagdoll">
        <Remove Terms="ActorCreation" Send="SetTeamColor {0,0,0 0.000000} {0,0,0 0.000000}"/>
    </CActorModel>
    <CActorModel id="UnitDeathRagdollFlier" parent="UnitDeathRagdoll">
        <HostSiteOps Ops="SOpDeathMotionFlier"/>
    </CActorModel>
    <CActorModel id="UnitDeathBodySquibModelHarness" parent="ModelAdditionHarness">
        <Aliases value="_BodySquib"/>
        <Aliases value="_BodySquibModel"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <Supporter Subject="::Host"/>
        <Remove Terms="ActorOrphan" Send="Destroy"/>
        <On Terms="ActorCreation" Send="MessageThinkActivate"/>
        <On Terms="ActorThink; IsUnderwater" Send="Signal Terminate"/>
        <On Terms="SupporterDestruction" Send="Signal Terminate"/>
        <On Terms="Signal.*.Terminate" Send="AnimBracketStop BSD"/>
    </CActorModel>
    <CActorModel id="UnitDeathBodySquibModelHarnessBlood" parent="ModelAdditionHarness">
        <Aliases value="_BodySquib"/>
        <Aliases value="_BodySquibModel"/>
        <Flags index="SuppressSaveLoad" value="1"/>
        <Supporter Subject="::Host"/>
        <Remove Terms="ActorOrphan" Send="Destroy"/>
        <On Terms="ActorCreation" Send="MessageThinkActivate"/>
        <On Terms="ActorCreation" Send="MovementTrackingStart 0.500000"/>
        <On Terms="ActorThink; MovementNetOverInterval Below 0.001000" Send="Signal Terminate"/>
        <On Terms="ActorThink; IsUnderwater" Send="Signal Terminate"/>
        <On Terms="SupporterDestruction" Send="Signal Terminate"/>
        <On Terms="Signal.*.Terminate" Send="AnimBracketStop BSD"/>
    </CActorModel>
    <CActorSound id="UnitDeathBodySquibSoundHarness" parent="SoundOneShot">
        <Aliases value="_BodySquib"/>
        <Supporter Subject="::Host"/>
        <On Terms="ActorCreation" Send="MessageThinkActivate"/>
        <On Terms="ActorCreation" Send="MovementTrackingStart 0.500000"/>
        <On Terms="ActorThink; IsUnderwater" Send="Signal Terminate"/>
        <On Terms="ActorThink; !ScopeContains _BodySquibModel" Send="Signal Terminate"/>
        <On Terms="SupporterDestruction" Send="Signal Terminate"/>
        <On Terms="Signal.*.Terminate" Send="Destroy"/>
    </CActorSound>
    <!-- UnitDeathModelPersistent is a unit b/c we want it to have a snapshot. -->
    <CActorUnit id="UnitDeathModelPersistent">
        <SnapshotActor value="Snapshot"/>
        <FogVisibility value="Dimmed"/>
        <ModelFlags index="UseSyncSeed" value="1"/>
        <Host Subject="::Creator"/>
        <Inherits index="BaseModelScale" value="1"/>
        <Inherits index="CastShadows" value="1"/>
        <Inherits index="CreepEngulfment" value="1"/>
        <Inherits index="Scale" value="1"/>
        <Inherits index="TeamColor" value="1"/>
        <Inherits index="TintColor" value="1"/>
        <Inherits index="Visibility" value="1"/>
        <AcceptedHostedPropTransfers index="TimeScale" value="0"/>
        <Aliases value="_Main"/>
        <Aliases value="_Unit"/>
        <Aliases value="_DeathModel"/>
        <Macros value="DeadAnimationMacro"/>
        <On Terms="ActorCreation" Send="RefClear ::Host"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,255,255 0.600000"/>
        <On Terms="ActorCreation" Target="ModelPretargetGround" Send="Destroy"/>
        <On Terms="ActorCreation" Target="GroundPreSelection" Send="Destroy"/>
    </CActorUnit>
    <CActorDoodad id="UnitDeathModelPersistentFogPause">
        <RandomScaleRange value="1.000000,1.000000"/>
        <Aliases value="_DeathModel"/>
        <Macros value="DeadAnimationMacro"/>
        <EditorFlags index="NoPlacement" value="1"/>
    </CActorDoodad>
    <CActorUnit id="UnitDeathModelPersistentUnscaled" parent="UnitDeathModelPersistent">
        <Inherits index="BaseModelScale" value="0"/>
        <Inherits index="Scale" value="0"/>
    </CActorUnit>
    <CActorSound id="UnitDeathSound" parent="SoundOneShot">
        <SoundFlags index="UpdateVisibility" value="0"/>
        <Host Subject="::Creator"/>
        <!-- Means we get props and bearings once, and then stop. -->
        <On Terms="ActorCreation" Send="RefClear ::Host"/>
    </CActorSound>
    <CActorSound id="UnitDeathVoice" parent="SoundOneShot">
        <SoundFlags index="UpdateVisibility" value="0"/>
        <Host Subject="::Creator"/>
        <!-- Means we get props and bearings once, and then stop. -->
        <On Terms="ActorCreation" Send="RefClear ::Host"/>
    </CActorSound>
    <!--                                                                                         -->
    <CActorSite id="GenericAttackLaunchSite"/>
    <CActorSite id="GenericAttackLaunchFallbackSite">
        <HostSiteOps Ops="SOpBasicCreatorStationary"/>
    </CActorSite>
    <!--                                                                                         -->
    <CActorSite id="GenericAttackImpactSite">
        <HostSiteOps HoldRotation="1"/>
    </CActorSite>
    <CActorSite id="GenericAttackImpactPointSite"/>
    <CActorSite id="GenericAttackImpactFallbackSite">
        <HostSiteOps Ops="SOpTargetPointStationary"/>
    </CActorSite>
    <!--                                                                                         -->
    <CActorSite id="GenericAttackDamageSite"/>
    <!--                                                                                         -->
    <CActorModel id="GenericAttackModel" parent="ModelAnimationStyleOneShotNoOrphan">
        <!-- We need this so that a unit being loaded into a transport doesn't cause its impact
             squib to appear to jump to the transport.  We don't do this w/sounds b/c we don't
             want to cut them off in the middle of playing.                                      -->
        <Inherits index="Visibility" value="1"/>
        <ModelFlags index="AllowHitTest" value="0"/>
        <Flags index="SuppressCreationErrors" value="1"/>
    </CActorModel>
    <CActorModel id="GenericAttackModelPoint" parent="GenericAttackModel">
        <Inherits index="Visibility" value="0"/>
    </CActorModel>
    <!-- Extra entries here are useful for debug output. -->
    <CActorModel id="GenericAttackLaunchModel" parent="GenericAttackModel"/>
    <CActorModel id="GenericAttackImpactModel" parent="GenericAttackModel"/>
    <CActorModel id="GenericAttackImpactModelPoint" parent="GenericAttackModelPoint"/>
    <CActorModel id="GenericAttackImpactModelReaction" parent="GenericAttackModel"/>
    <CActorModel id="GenericAttackDamageModel" parent="GenericAttackModel"/>
    <CActorModel id="GenericAttackDamageModelReaction" parent="GenericAttackModel"/>
    <!--                                                                                         -->
    <CActorSound id="GenericAttackSound" parent="SoundOneShot">
        <Flags index="SuppressCreationErrors" value="1"/>
    </CActorSound>
    <!-- Extra entries here are useful for debug output. -->
    <CActorSound id="GenericAttackLaunchSound" parent="GenericAttackSound"/>
    <CActorSound id="GenericAttackImpactSound" parent="GenericAttackSound"/>
    <CActorSound id="GenericAttackImpactSoundPoint" parent="GenericAttackSound">
        <Inherits index="Visibility" value="0"/>
    </CActorSound>
    <CActorSound id="GenericAttackDamageSound" parent="GenericAttackSound"/>
    <!--                                                                                         -->
    <CActorModel id="GenericAttackLaunchTerrainSquibModel" parent="ModelAnimationStyleOneShotNoOrphan"/>
    <CActorSound id="GenericAttackLaunchTerrainSquibSound" parent="SoundOneShot"/>
    <CActorModel id="GenericAttackImpactTerrainSquibModel" parent="ModelAnimationStyleOneShotNoOrphan"/>
    <CActorSound id="GenericAttackImpactTerrainSquibSound" parent="SoundOneShot"/>
    <CActorModel id="GenericAttackDamageTerrainSquibModel" parent="ModelAnimationStyleOneShotNoOrphan"/>
    <CActorSound id="GenericAttackDamageTerrainSquibSound" parent="SoundOneShot"/>
    <!--                                                                                         -->
    <CActorEventMacro id="ActionTargetTeleportDestroy">
        <!-- Need to save off the ::Sender, b/c RefEquals uses the containing as the reference
             'context actor' used to determine which refs to deref. -->
        <On Terms="ActionTargetTeleport" Send="RefSetFromMsg ::actor.Teleporter ::Sender"/>
        <!-- This will a beam immediately if the target teleports.  For Swarm and beyond, this
             means a beam won't show where a MothershipCore has jumped off to, for instance. -->
        <On Terms="ActionTargetTeleport; RefEquals ::actor.Teleporter ::Creator" Send="Destroy"/>
    </CActorEventMacro>
    <!--                                                                                         -->
    <!-- Not used below, primarily for example purposes. -->
    <CActorForceSphere id="RangedAttackDeathForce">
        <Receiver Subject="::Main"/>
        <HostSiteOps Ops="SOpIncomingDirectDot25"/>
        <Magnitude value="20.000000,10.000000"/>
        <Radius value="1.000000"/>
        <Field value="Directional"/>
        <Direction value="Forward"/>
        <Duration value="0.150000"/>
    </CActorForceSphere>
    <CActorForceSphere id="MissileAttackDeathForce">
        <Receiver Subject="::Main"/>
        <HostSiteOps Ops="SOpIncomingMissileDot25"/>
        <Magnitude value="20.000000,10.000000"/>
        <Radius value="1.000000"/>
        <Field value="Directional"/>
        <Direction value="Forward"/>
        <Duration value="0.150000"/>
    </CActorForceSphere>
    <CActorSiteOpRotationRandom id="MeleePhysicRandomizer">
        <YawHalfAngle value="45.000000"/>
        <PitchHalfAngle value="15.000000"/>
    </CActorSiteOpRotationRandom>
    <CActorForceCylinder id="MeleeAttackForce">
        <Host Subject="_ImpactGuide"/>
        <HostSiteOps Ops="SOpForwardCasterPoint MeleePhysicRandomizer SOpMoveByDot25 SOp180"/>
        <HostEnd Subject="_ImpactGuide"/>
        <Length value="1.000000"/>
        <Magnitude value="20.000000,10.000000"/>
        <Radius value="1.000000"/>
        <Duration value="0.150000"/>
    </CActorForceCylinder>
    <CActorForceSphere id="ExplosiveRangedAttackDeathForce">
        <Receiver Subject="::Main"/>
        <Host Subject="_ImpactGuide"/>
        <Magnitude value="20.000000,10.000000"/>
        <Radius value="1.000000"/>
        <Duration value="0.150000"/>
    </CActorForceSphere>
    <CActorForceSphere id="ExplosionAttackForce">
        <Host Subject="_ImpactGuide"/>
        <Magnitude value="20.000000,10.000000"/>
        <Radius value="1.000000"/>
        <Duration value="0.150000"/>
    </CActorForceSphere>
    <CActorLightOmni id="LightOmni"/>
    <CActorLightSpot id="LightSpot"/>
    <CActorLightOmniModel id="CutsceneLightOmniModel">
        <Model value="ActorShapeSphere"/>
    </CActorLightOmniModel>
    <CActorLightSpotModel id="CutsceneLightSpotModel">
        <Model value="ActorShapeCone"/>
    </CActorLightSpotModel>
    <CActorLookAt id="LookAt"/>
    <CActorSite id="LookAtTarget"/>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Terrain =============================================================================== -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <CActorTerrain id="TerrainMgr">
        <On Terms="EditorMapInitialize" Send="Create"/>
        <On Terms="GameInitialize" Send="Create"/>
    </CActorTerrain>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Editor ================================================================================ -->
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Helper model attached to pre-placed objects that don't have clickable geometry -->
    <CActorModel id="EditorHelper">
        <Host Subject="_EditorHelper"/>
        <HostSiteOps Ops="SOpBasicScopeFollow"/>
    </CActorModel>
    <!-- Pre-placed camera actors -->
    <CActorEditorCamera id="EditorCamera">
        <Aliases value="_Selectable"/>
    </CActorEditorCamera>
    <!-- Pre-placed point actors -->
    <CActorModel id="PointNormal">
        <HostSiteOps Ops="SOpTipability"/>
        <Model value="e_pointNormal"/>
        <On Terms="ActorCreation" Send="Create PointNormalName"/>
    </CActorModel>
    <CActorText id="PointNormalName">
        <MaxSize value="0.000000,0.000000"/>
        <FixedSize value="24"/>
        <HeightOffset value="1.000000"/>
        <AlignV value="Top"/>
        <Host Subject="::Creator"/>
    </CActorText>
    <CActorEditorPoint id="PointNormalEditor" parent="PointNormal">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <CActorModel id="PointStartLoc">
        <Model value="e_pointStartLoc"/>
        <HostSiteOps Ops="SOpTipability"/>
        <On Terms="ActorCreation" Send="Create PointStartLocName"/>
    </CActorModel>
    <CActorText id="PointStartLocName">
        <MaxSize value="0.000000,0.000000"/>
        <FixedSize value="32"/>
        <AlignV value="Top"/>
        <Host Subject="::Creator"/>
    </CActorText>
    <CActorEditorPoint id="PointStartLocEditor" parent="PointStartLoc">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <CActorModel id="PointStartLocUnit"/>
    <CActorModel id="PointBlockPathing">
        <Model value="e_pointBlockPathing"/>
        <HostSiteOps Ops="SOpTipability"/>
        <On Terms="ActorCreation" Send="Create PointBlockPathingName"/>
    </CActorModel>
    <CActorText id="PointBlockPathingName" parent="PointNormalName"/>
    <CActorEditorPoint id="PointBlockPathingEditor" parent="PointBlockPathing">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <CActorModel id="PointSoundEmitter">
        <Model value="e_pointSoundEmitter"/>
        <HostSiteOps Ops="SOpTipability"/>
        <On Terms="ActorCreation" Send="Create PointSoundEmitterName"/>
        <On Terms="ActorCreation" Send="Create PointSoundEmitterRange"/>
    </CActorModel>
    <CActorRange id="PointSoundEmitterRange">
        <RangeFlags index="Minimap" value="1"/>
        <FogVisibility value="Visible"/>
    </CActorRange>
    <CActorText id="PointSoundEmitterName" parent="PointNormalName"/>
    <CActorEditorPoint id="PointSoundEmitterEditor" parent="PointSoundEmitter">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <CActorModel id="PointThreeD">
        <Model value="e_pointThreeD"/>
        <HostSiteOps Ops="SOpTipability"/>
        <On Terms="ActorCreation" Send="Create PointThreeDName"/>
    </CActorModel>
    <CActorText id="PointThreeDName" parent="PointNormalName"/>
    <CActorEditorPoint id="PointThreeDEditor" parent="PointThreeD">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <CActorModel id="PointNoFlyZone">
        <Model value="e_pointNoFlyZone"/>
        <HostSiteOps Ops="SOpTipability"/>
        <On Terms="ActorCreation" Send="Create PointNoFlyZoneName"/>
    </CActorModel>
    <CActorText id="PointNoFlyZoneName" parent="PointNormalName"/>
    <CActorEditorPoint id="PointNoFlyZoneEditor" parent="PointNoFlyZone">
        <Aliases value="_Selectable"/>
    </CActorEditorPoint>
    <!-- Unit overhead text -->
    <CActorText id="EditorUnitOverheadText">
        <FixedSize value="28"/>
        <HeightOffset value="0.250000"/>
        <AlignV value="Bottom"/>
        <Host Subject="_Selectable"/>
        <HostSiteOps Ops="SOpAttachOverhead"/>
    </CActorText>
    <CActorPortrait id="PortraitActor"/>
    <!-- Unit Model Frame -->
    <CActorUnit id="UnitModelFrameActor">
        <FogVisibility value="Visible"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
    </CActorUnit>
    <CActorModel id="UnitModelFrameTurnActor">
        <FogVisibility value="Visible"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
    </CActorModel>
    <CActorModel id="UnitEffectModelFrameActor">
        <FogVisibility value="Visible"/>
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
    </CActorModel>
    <!-- Previewer models -->
    <CActorModel id="PreviewerModel">
        <On Terms="AssetPreInit" Send="PhysicsTerminate"/>
        <!-- NOTE, it might be tempting, but we cannot just do this:
                <ModelFlags index="AutomateGlobalLoops" value="1"/>
             For the following reasons:
             1. There are cases where artists just import models without modelData.  The global
                loop automation stuff requires the modelData to figure and out store which anims are
                global loops.  If there isn't one, it doesn't store that info, and the global loop
                code just early outs.  Meaning no global loops in that case, period.
             2. We aren't really doing full global loops below, but rather just Stands.  We don't
                want to break this behavior by automatically triggering Births and Deaths as well.
             3. We could do this manually in the code in the non-cache case, but that'd be weird
                and inconsistent with the regular cache case.
        -->
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand GLstand FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_A GLstand,A FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_B GLstand,B FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_C GLstand,C FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_D GLstand,D FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_E GLstand,E FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_F GLstand,F FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_G GLstand,G FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_H GLstand,H FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_I GLstand,I FullMatch,PlayForever"/>
        <On Terms="AgeReached; Age" Send="AnimPlay GL_Stand_J GLstand,J FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand GLstand FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_A GLstand,A FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_B GLstand,B FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_C GLstand,C FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_D GLstand,D FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_E GLstand,E FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_F GLstand,F FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_G GLstand,G FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_H GLstand,H FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_I GLstand,I FullMatch,PlayForever"/>
        <On Terms="ModelSwap" Send="AnimPlay GL_Stand_J GLstand,J FullMatch,PlayForever"/>
        <FogVisibility value="Visible"/>
    </CActorModel>
    <CActorSound id="PreviewerSound" parent="SoundOneShot">
        <FogVisibility value="Visible"/>
    </CActorSound>
    <CActorCamera id="PreviewerCamera">
        <Camera value="Dflt"/>
    </CActorCamera>
    <CActorModelMaterial id="CutsceneModelMaterial">
        <ModelFlags index="AutomateGlobalLoops" value="1"/>
    </CActorModelMaterial>
    <CActorCameraModel id="CutsceneCameraModel">
        <Model value="EditorCamera"/>
        <DoFAttenuationStartModel value="Sphere"/>
        <DoFAttenuationEndModel value="Sphere"/>
        <On Terms="ActorCreation" Send="SetTintColor 255,0,0"/>
        <On Terms="ActorCreation" Send="SetOpacity 0.650000"/>
        <ModelFlags index="WireframeRender" value="1"/>
    </CActorCameraModel>
    <CActorModel id="TerrainObjectPreviewModel"/>
    <CActorText id="PreviewerText">
        <FixedSize value="24"/>
    </CActorText>
    <CActorCutscene id="CutsceneOneShot">
        <On Terms="ActorCreation" Send="CutscenePlay"/>
        <On Terms="Cutscene.*.Stop" Send="Destroy"/>
    </CActorCutscene>
    <!-- TriggerRegions -->
    <CActorRegionGame id="TriggerRegion"/>
    <CActorUnit id="StereoscopicOptionsUnit" parent="GenericUnitMinimal" unitName="StereoscopicOptionsUnit"/>
    <CActorDoodad id="ActorLightOmni">
        <Aliases value="_EditorHelper"/>
        <RandomScaleRange value="1.000000,1.000000"/>
    </CActorDoodad>
    <CActorDoodad id="ActorLightSpot">
        <Aliases value="_EditorHelper"/>
        <RandomScaleRange value="1.000000,1.000000"/>
    </CActorDoodad>
    <CActorDoodad id="ActorShapeSphere">
        <RandomScaleRange value="1.000000,1.000000"/>
    </CActorDoodad>
    <CActorDoodad id="ActorShapeCone">
        <RandomScaleRange value="1.000000,1.000000"/>
    </CActorDoodad>
    <!-- Map Template Doodad -->
    <CActorDoodad id="MapTemplate">
        <RandomScaleRange value="1.000000,1.000000"/>
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <!--                                                                                         -->
    <!--                                                                                         -->
    <!-- Help ================================================================================== -->
    <!--                                                                                         -->
    <!--
        UnitPortrait messages.  All of these are sent to the supporting unit's scope.
        
        UnitPortrait.*.Customize    Sent whenever we switch the selected CActorUnit.  This can
                                    happen when the user selects a new unit, or when a selected
                                    unit switches actors, say if it morphs.  This is when the
                                    data should send the PortraitCustomize message to select the
                                    preferred model and/or CActorPortrait to use.
        UnitPortrait.*.Configure    Happens after a new portrait model is loaded.  Happens after
                                    an actor changes, if it doesn't change the portrait model.
                                    This message enables the data to play animations and whatnot,
                                    when the selected CActorUnit changes, regardless of whether
                                    the model has changed.  It also gets sent when the portrait
                                    model has changed and is done loading.
        UnitPortrait.*.LoadDone     Sent when the portrait model is done loading.
        UnitPortrait.*.Destruction  Sent when a CActorPortrait dies.
    -->
    <CActorUnit id="BeaconArmy" parent="Beacon" unitName="BeaconArmy">
        <On Terms="ActorCreation" Send="SetTintColor 255,128,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconArmy"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_assault.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconDefend" parent="Beacon" unitName="BeaconDefend">
        <On Terms="ActorCreation" Send="SetTintColor 255,224,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconDefend"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_defend.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconAttack" parent="Beacon" unitName="BeaconAttack">
        <On Terms="ActorCreation" Send="SetTintColor 255,128,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconAttack"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_assault.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconHarass" parent="Beacon" unitName="BeaconHarass">
        <On Terms="ActorCreation" Send="SetTintColor 192,64,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconHarass"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_harass.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconIdle" parent="Beacon" unitName="BeaconIdle">
        <On Terms="ActorCreation" Send="SetTintColor 128,0,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconIdle"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_idle.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconAuto" parent="Beacon" unitName="BeaconAuto">
        <On Terms="ActorCreation" Send="SetTintColor 128,0,96"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconAuto"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_autoai.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconDetect" parent="Beacon" unitName="BeaconDetect">
        <On Terms="ActorCreation" Send="SetTintColor 0,255,0"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconDetect"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_detect.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconScout" parent="Beacon" unitName="BeaconScout">
        <On Terms="ActorCreation" Send="SetTintColor 0,255,64"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconScout"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_scout.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconClaim" parent="Beacon" unitName="BeaconClaim">
        <On Terms="ActorCreation" Send="SetTintColor 0,255,128"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconClaim"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_claim.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconExpand" parent="Beacon" unitName="BeaconExpand">
        <On Terms="ActorCreation" Send="SetTintColor 0,192,128"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconExpand"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_expand.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconRally" parent="Beacon" unitName="BeaconRally">
        <On Terms="ActorCreation" Send="SetTintColor 0,128,128"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconRally"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_rally.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconCustom1" parent="Beacon" unitName="BeaconCustom1">
        <On Terms="ActorCreation" Send="SetTintColor 16,0,128"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconCustom1"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_customability.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconCustom2" parent="Beacon" unitName="BeaconCustom2">
        <On Terms="ActorCreation" Send="SetTintColor 32,0,128"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconCustom2"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_customability.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconCustom3" parent="Beacon" unitName="BeaconCustom3">
        <On Terms="ActorCreation" Send="SetTintColor 64,0,196"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconCustom3"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_customability.dds"/>
    </CActorUnit>
    <CActorUnit id="BeaconCustom4" parent="Beacon" unitName="BeaconCustom4">
        <On Terms="ActorCreation" Send="SetTintColor 128,0,255"/>
        <HighlightTooltip value="Beacon/InfoText/BeaconCustom4"/>
        <MinimapIcon value="Assets\Textures\ui_minimap_icon_aicommunication_customability.dds"/>
    </CActorUnit>
    <CActorDoodad id="LightOmniBlue">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniBlueLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniCyan">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniCyanLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniGreen">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniGreenLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniOrange">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniOrangeLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniPurple">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniPurpleLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniRed">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniRedLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniWhite">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniWhiteLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniYellow">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <CActorDoodad id="LightOmniYellowLarge">
        <Aliases value="_EditorHelper"/>
    </CActorDoodad>
    <!-- Debug helper, shows the location of anything with an invisible model -->
    <CActorRegionCircle id="InvisibleModelSwapper">
        <Radius value="500.000000"/>
        <On Terms="Effect.InvisibleModelSwapper.Start; At Effect" Send="Create"/>
        <On Terms="ActorCreation" Send="QueryRegion ::Self InvisibleModelSwapperQuery AgainstCenter"/>
        <On Terms="Effect.InvisibleModelSwapper.Start; At Effect" Send="Destroy"/>
    </CActorRegionCircle>
    <CActorQueryResponse id="InvisibleModelSwapperQuery">
        <Subject Filters="Snapshot,Unit,Missile" Terms="ModelName Invisible"/>
        <OnResponse Send="ModelSwap Sphere"/>
    </CActorQueryResponse>
</Catalog>
